{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { Box, Heading, Text, Icon, Badge, Button, useDisclosure } from '@chakra-ui/core';\nimport Reshipment from './Reshipment';\nconst secondaryLayout = {\n  flex: '1 1 10rem',\n  marginLeft: '1.5rem',\n  marginTop: '.3rem'\n};\nconst Layout = {\n  flex: '2 2 20rem',\n  marginLeft: '1.5rem',\n  marginTop: '.3rem'\n};\n\nconst OrderDetailsComp = ({\n  backgroundColor,\n  name,\n  store,\n  processedAt,\n  fulfillments,\n  lineItems,\n  shippingAddress,\n  onOpen\n}) => __jsx(React.Fragment, null, __jsx(Box, {\n  display: \"flex\",\n  paddingY: 4,\n  backgroundColor: backgroundColor,\n  boxShadow: backgroundColor && '0 0 1px rgba(67, 90, 111, 0.3)',\n  paddingX: backgroundColor && 4\n}, __jsx(Box, {\n  flex: 1,\n  alignItems: \"center\",\n  display: \"flex\"\n}, __jsx(Box, null, __jsx(Heading, {\n  size: \"lg\",\n  fontWeight: 600,\n  color: \"text\"\n}, name), __jsx(Heading, {\n  fontSize: \"xs\",\n  fontWeight: 600,\n  color: \"gray.500\",\n  letterSpacing: \"wide\",\n  textTransform: \"uppercase\",\n  display: \"flex\",\n  alignItems: \"center\"\n}, store, \" \\xB7\", __jsx(Text, {\n  ml: 1,\n  color: \"#234361\",\n  fontSize: \"xs\",\n  fontWeight: 400\n}, processedAt && Intl.DateTimeFormat('en-US').format(Date.parse(processedAt)))), __jsx(Badge, {\n  marginTop: 2,\n  variantColor: fulfillments.length > 0 ? 'green' : 'red',\n  variant: \"solid\"\n}, fulfillments.length > 0 ? 'Processed' : 'Not Processed'))), __jsx(Button, {\n  background: \"#DDEBF7\",\n  borderRadius: 3,\n  marginRight: 1,\n  px: 3,\n  height: 8,\n  onClick: onOpen\n}, __jsx(Heading, {\n  fontSize: \"sm\",\n  fontWeight: 700,\n  color: \"#1070CA\",\n  marginRight: 2\n}, \"RESHIP\"), __jsx(Icon, {\n  size: 4,\n  color: \"#1070CA\",\n  name: \"repeat\"\n}))), __jsx(Box, {\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  marginLeft: \"-1.5rem\",\n  marginTop: \"-.3rem\",\n  padding: backgroundColor && 4\n}, __jsx(Box, Layout, lineItems.edges.map(a => {\n  const ID = a.node.id.toString().split('/').pop();\n  return __jsx(Box, {\n    boxShadow: \"sm\",\n    background: \"white\",\n    padding: 2,\n    marginBottom: 15,\n    key: ID\n  }, __jsx(Box, {\n    display: \"flex\",\n    alignItems: \"center\"\n  }, __jsx(Box, null, __jsx(Box, {\n    as: \"img\",\n    src: a.node.image && a.node.image.originalSrc,\n    borderStyle: \"solid\",\n    borderWidth: \"1px\",\n    borderRadius: 3,\n    borderColor: \"#e8e9ea\",\n    width: \"130px\"\n  })), __jsx(Box, {\n    marginLeft: 4\n  }, __jsx(Heading, {\n    size: \"sm\",\n    fontWeight: 600,\n    color: \"text\"\n  }, a.node.name), __jsx(Box, {\n    display: \"flex\",\n    alignItems: \"center\"\n  }, __jsx(Text, {\n    color: \"#66788a\",\n    fontSize: 14,\n    mr: 1\n  }, ID), \"-\", __jsx(Text, {\n    color: \"#234361\",\n    fontSize: \"sm\",\n    ml: 1\n  }, \"QUANTITY: \", a.node.quantity)))));\n})), __jsx(Box, secondaryLayout, __jsx(Box, {\n  boxShadow: \"sm\",\n  background: \"white\",\n  padding: 3,\n  marginBottom: 15\n}, __jsx(Heading, {\n  fontSize: \"xs\",\n  fontWeight: 500,\n  color: \"gray.500\",\n  letterSpacing: \"wide\",\n  textTransform: \"uppercase\",\n  mb: 2\n}, \"Customer\"), __jsx(Box, {\n  display: \"block\"\n}, __jsx(Box, {\n  fontSize: \"sm\",\n  color: \"#425A70\",\n  fontWeight: 500\n}, __jsx(Box, null, shippingAddress.name.split(' ')[0], ' ', shippingAddress.name.split(' ').pop()), shippingAddress.address1, \" \", shippingAddress.address2, __jsx(\"br\", null), shippingAddress.city, ', ', shippingAddress.province, \" \", shippingAddress.zip))), fulfillments.length > 0 && __jsx(Box, {\n  elevation: 1,\n  background: \"white\",\n  padding: 18,\n  marginBottom: 15\n}, __jsx(Heading, {\n  size: 100,\n  marginBottom: 6\n}, \"Shipments\"), __jsx(Box, {\n  display: \"block\"\n}, fulfillments.map(a => a.trackingInfo.map((b, index) => __jsx(Box, {\n  key: index,\n  display: \"flex\",\n  alignItems: \"center\"\n}, __jsx(Icon, {\n  icon: \"box\",\n  color: \"#47B881\",\n  marginRight: 10\n}), __jsx(\"a\", {\n  href: b.url,\n  target: \"_blank\",\n  rel: \"noopener noreferrer\"\n}, __jsx(Text, {\n  size: 500\n}, b.number))))))))));\n\nconst OrderDetails = props => {\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  return __jsx(React.Fragment, null, __jsx(Reshipment, {\n    isOpen: isOpen,\n    onClose: onClose,\n    order: props,\n    shop: props.store\n  }), __jsx(OrderDetailsComp, _extends({}, props, {\n    onOpen: onOpen\n  })));\n};\n\nexport default OrderDetails;\nexport { OrderDetailsComp };","map":null,"metadata":{},"sourceType":"module"}