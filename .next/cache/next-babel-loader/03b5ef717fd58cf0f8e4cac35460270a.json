{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation createProducts(\\n    $title: String!\\n    $descriptionHtml: String\\n    $productType: String\\n    $vendor: String\\n    $images: Json\\n    $options: Json\\n    $variants: Json\\n    $client: String\\n  ) {\\n    createProducts(\\n      title: $title\\n      descriptionHtml: $descriptionHtml\\n      productType: $productType\\n      vendor: $vendor\\n      images: $images\\n      options: $options\\n      variants: $variants\\n      shop: $client\\n    ) {\\n      product\\n      shop\\n      userErrors\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState } from 'react';\nimport { gql } from 'apollo-boost';\nimport { Mutation } from 'react-apollo';\nimport { toaster } from 'evergreen-ui';\nimport Button from './Button';\nimport User from '../user/User';\nvar CREATE_PRODUCTS_MUTATION = gql(_templateObject());\n\nvar AddProduct = function AddProduct(_ref) {\n  var product = _ref.product,\n      client = _ref.client;\n\n  var _useState = useState(0),\n      inventory = _useState[0],\n      setInventory = _useState[1];\n\n  return __jsx(User, null, function (_ref2) {\n    var me = _ref2.data.me;\n    if (!me) return null;\n\n    if (me.seller && me.seller.status) {\n      return __jsx(Mutation, {\n        mutation: CREATE_PRODUCTS_MUTATION\n      }, function (createProducts, _ref3) {\n        var error = _ref3.error,\n            loading = _ref3.loading;\n        return __jsx(Button, {\n          intent: \"primary\",\n          height: 20,\n          onClick: function _callee() {\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return _regeneratorRuntime.awrap(createProducts({\n                      variables: _objectSpread({}, product, {\n                        client: client\n                      })\n                    }));\n\n                  case 2:\n                    toaster.success(\"\".concat(product.title, \" has been added to the marketplace\"));\n\n                  case 3:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            });\n          },\n          marginRight: 5\n        }, \"Sync\");\n      });\n    }\n\n    return null;\n  });\n};\n\nexport default AddProduct;","map":null,"metadata":{},"sourceType":"module"}