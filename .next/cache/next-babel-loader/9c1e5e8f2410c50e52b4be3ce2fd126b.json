{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query shopProducts(\\n    $domain: String!\\n    $first: Int\\n    $after: String\\n    $before: String\\n    $last: Int\\n    $query: String\\n  ) {\\n    shopProducts(\\n      domain: $domain\\n      first: $first\\n      after: $after\\n      before: $before\\n      last: $last\\n      query: $query\\n    ) {\\n      pageInfo\\n      edges\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { gql } from 'apollo-boost';\nimport { Box, Heading, Spinner, InputGroup, InputLeftElement, Input, Icon } from '@chakra-ui/core';\nimport { useQuery } from '@apollo/react-hooks';\nimport ShopSelect from '../common/ShopSelect';\nimport { CardStyle } from '../common/DefaultStyles';\nimport ProductsItem from './ProductsItem';\nvar PRODUCTS_QUERY = gql(_templateObject());\nexport default function Products(_ref) {\n  var shops = _ref.shops;\n\n  var _useState = useState(shops.length && shops[0].domain.split('.')[0]),\n      client = _useState[0],\n      setClient = _useState[1];\n\n  var _useState2 = useState(null),\n      afterCursor = _useState2[0],\n      setAfterCursor = _useState2[1];\n\n  var _useState3 = useState(null),\n      beforeCursor = _useState3[0],\n      setBeforeCursor = _useState3[1];\n\n  var _useState4 = useState(''),\n      query = _useState4[0],\n      setQuery = _useState4[1];\n\n  var _useState5 = useState(10),\n      first = _useState5[0],\n      setFirst = _useState5[1];\n\n  var _useState6 = useState(null),\n      last = _useState6[0],\n      setLast = _useState6[1];\n\n  var _useState7 = useState(''),\n      searchBar = _useState7[0],\n      setSearchBar = _useState7[1];\n\n  var _useQuery = useQuery(PRODUCTS_QUERY, {\n    variables: {\n      domain: \"\".concat(client, \".myshopify.com\"),\n      first: first,\n      last: last,\n      after: afterCursor,\n      before: beforeCursor,\n      query: query\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  function updateClient(arg) {\n    setClient(arg);\n    setAfterCursor(null);\n    setBeforeCursor(null);\n    setFirst(10);\n    setLast(null);\n  }\n\n  function onPrevious(arg) {\n    setAfterCursor(null);\n    setBeforeCursor(arg);\n    setFirst(null);\n    setLast(10);\n  }\n\n  function onNext(arg) {\n    setAfterCursor(arg);\n    setBeforeCursor(null);\n    setFirst(10);\n    setLast(null);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    display: \"flex\",\n    py: 4\n  }, __jsx(Box, {\n    flex: 1,\n    alignItems: \"center\",\n    display: \"flex\"\n  }, __jsx(Heading, {\n    fontSize: \"2xl\",\n    color: \"text\",\n    fontWeight: 500\n  }, \"Products\"))), client ? __jsx(Box, CardStyle, __jsx(Box, {\n    display: \"flex\",\n    padding: \"1em\"\n  }, __jsx(Box, {\n    flex: 1\n  }, __jsx(InputGroup, {\n    width: \"100%\",\n    borderColor: \"gray.300\"\n  }, __jsx(InputLeftElement, {\n    children: __jsx(Icon, {\n      name: \"search\",\n      color: \"gray.300\"\n    })\n  }), __jsx(Input, {\n    value: searchBar,\n    onChange: function onChange(e) {\n      setSearchBar(e.target.value);\n    },\n    onKeyPress: function onKeyPress(e) {\n      if (e.key === 'Enter') {\n        setQuery(e.target.value);\n      }\n    },\n    placeholder: \"Search\"\n  })), __jsx(ShopSelect, {\n    client: client,\n    shops: shops,\n    updateClient: updateClient\n  }))), function () {\n    if (loading) return __jsx(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100vh\"\n    }, __jsx(Spinner, {\n      size: 80\n    }));\n    if (error || !data.shopProducts) return __jsx(\"h1\", null, \"Error loading shops: \", error);\n    return __jsx(Box, {\n      width: \"100%\"\n    }, data.shopProducts.edges.map(function (product) {\n      return __jsx(ProductsItem, {\n        client: client,\n        product: product.node\n      });\n    }));\n  }()) : __jsx(Box, {\n    backgroundColor: \"gray.100\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\"\n  }, __jsx(Heading, {\n    margin: \"1em\",\n    fontSize: \"xl\",\n    fontWeight: 600,\n    color: \"text\"\n  }, \"Your products will appear here after you add a shop.\")));\n}","map":null,"metadata":{},"sourceType":"module"}