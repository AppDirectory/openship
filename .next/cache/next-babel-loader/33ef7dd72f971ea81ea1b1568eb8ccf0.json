{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query getItemGroup($itemID: String) {\\n    getItemGroup(itemID: $itemID) {\\n      item\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getItems(\\n    $search: String\\n    $limit: Int\\n    $sort: String\\n    $pageNum: Int\\n    $exclude: Json\\n    $include: Json\\n    $priceCurrency: String\\n    $price: String\\n    $itemLocationCountry: String\\n  ) {\\n    getItems(\\n      search: $search\\n      limit: $limit\\n      sort: $sort\\n      pageNum: $pageNum\\n      exclude: $exclude\\n      include: $include\\n      priceCurrency: $priceCurrency\\n      price: $price\\n      itemLocationCountry: $itemLocationCountry\\n    ) {\\n      item\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport { gql } from 'apollo-boost';\nimport { Pane, Heading, Text, SearchInput, Icon, TextInput, IconButton, Spinner, TagInput, toaster, Tablist, Tab, Avatar } from 'evergreen-ui';\nimport { Query } from 'react-apollo';\nimport Product from './findListItem/Product';\nimport User from '../user/User';\nimport Pagination from '../common/Pagination';\nimport TextButton from '../common/Button';\nimport { CardStyle } from '../common/DefaultStyles';\nimport { front, prodFront } from '../../config';\nvar getItems = gql(_templateObject());\nexport var getItemGroup = gql(_templateObject2());\nvar sortOptions = [{\n  label: 'Lowest Price',\n  value: 'price'\n}, {\n  label: 'Highest Price',\n  value: '-price'\n}, {\n  label: 'Best Match',\n  value: 'match'\n}];\n\nvar option = function option(name, options, update, selected) {\n  return React.createElement(Pane, {\n    marginBottom: 10,\n    marginRight: 10\n  }, React.createElement(Heading, {\n    size: 500,\n    fontSize: \"12px\",\n    fontWeight: 500,\n    marginBottom: 2\n  }, name), React.createElement(Tablist, null, options.map(function (a, index) {\n    return React.createElement(Tab, {\n      key: a,\n      id: a,\n      marginLeft: 0,\n      height: \"20px\",\n      fontSize: \"10px\" // lineHeight=\"16px\"\n      ,\n      marginBottom: 3,\n      letterSpacing: \"0.3px\",\n      fontWeight: 400,\n      textTransform: \"uppercase\",\n      onSelect: function onSelect() {\n        return update(a);\n      },\n      isSelected: a === selected,\n      \"aria-controls\": \"panel-\".concat(a)\n    }, a);\n  })));\n}; // fetch('http://localhost:3000/api/zinc-api?search=shoes')\n//   .then(response => response.json())\n//   .then(json =>\n//     json.map(\n//       item => <div>{item.product_id}</div>\n//   (\n// <Pane\n//   display=\"flex\"\n//   alignItems=\"center\"\n//   borderTop=\"0.1rem solid #dfe3e8\"\n// >\n//   <Pane padding={15}>\n//     {item.image && (\n//       <Avatar\n//         src={item.image}\n//         alt={`${item.title} product shot`}\n//         borderStyle=\"solid\"\n//         borderWidth=\"1px\"\n//         borderRadius={3}\n//         borderColor=\"#e8e9ea\"\n//         size={90}\n//       />\n//     )}\n//   </Pane>\n//   <Pane\n//     padding={15}\n//     paddingLeft={0}\n//     marginTop={3}\n//     marginBottom=\"auto\"\n//   >\n//     <Heading size={500}>\n//       {item.product_id}\n//     </Heading>\n//     <Heading\n//       size={400}\n//       marginRight={10}\n//       color=\"green\"\n//     >\n//       ${item.price}\n//     </Heading>\n//   </Pane>\n// </Pane>\n// )\n//   )\n// );\n\n\nvar Find =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Find, _Component);\n\n  function Find() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Find);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Find)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      sort: {\n        label: 'Lowest Price',\n        value: 'price'\n      },\n      searchBar: '',\n      searchEntry: null,\n      limit: 10,\n      pageNum: 0,\n      min: '',\n      max: '',\n      price: null,\n      priceCurrency: 'USD',\n      itemLocationCountry: 'US',\n      include: [],\n      exclude: [],\n      selectedChannel: 'zinc',\n      amzResults: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"amzFunc\", function (searchEntry) {\n      fetch(\"\".concat(process.env.NODE_ENV === 'development' ? front : prodFront, \"/api/zinc-api?search=\").concat(searchEntry)).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        return _this.setState({\n          amzResults: json\n        });\n      })[\"catch\"](function (error) {\n        return console.log('Error: ', error);\n      });\n\n      if (_this.state.amzResults) {\n        return _this.state.amzResults.map(function (item) {\n          return React.createElement(Pane, {\n            display: \"flex\",\n            alignItems: \"center\",\n            borderTop: \"0.1rem solid #dfe3e8\"\n          }, React.createElement(Pane, {\n            padding: 15\n          }, item.image && React.createElement(Avatar, {\n            src: item.image,\n            alt: \"\".concat(item.title, \" product shot\"),\n            borderStyle: \"solid\",\n            borderWidth: \"1px\",\n            borderRadius: 3,\n            borderColor: \"#e8e9ea\",\n            size: 90\n          })), React.createElement(Pane, {\n            padding: 15,\n            paddingLeft: 0,\n            marginTop: 3,\n            marginBottom: \"auto\"\n          }, React.createElement(Heading, {\n            size: 500\n          }, \"\".concat(item.title.slice(0, 70), \"...\")), React.createElement(Pane, {\n            color: \"#F7D154\",\n            display: \"flex\",\n            alignItems: \"center\"\n          }, React.createElement(Icon, {\n            icon: \"star\",\n            size: 15,\n            paddingRight: 3\n          }), React.createElement(Text, {\n            paddingRight: 12,\n            lineHeight: \"unset\"\n          }, item.stars), React.createElement(Text, {\n            size: 300,\n            color: \"muted\",\n            lineHeight: \"unset\"\n          }, item.num_reviews, \" reviews\")), React.createElement(\"a\", {\n            href: \"https://amazon.com/gp/product/\".concat(item.product_id),\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }, React.createElement(Text, {\n            size: 300,\n            lineHeight: \"12px\"\n          }, item.product_id)), React.createElement(Heading, {\n            size: 400,\n            marginRight: 10,\n            color: \"green\"\n          }, \"$\", item.price / 100)));\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Find, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          headerSize = _this$props.headerSize,\n          atcDisabled = _this$props.atcDisabled,\n          addVariant = _this$props.addVariant;\n      var _this$state = this.state,\n          pageNum = _this$state.pageNum,\n          searchBar = _this$state.searchBar,\n          sort = _this$state.sort,\n          limit = _this$state.limit,\n          itemLocationCountry = _this$state.itemLocationCountry,\n          selectedChannel = _this$state.selectedChannel,\n          min = _this$state.min,\n          max = _this$state.max,\n          include = _this$state.include,\n          exclude = _this$state.exclude,\n          searchEntry = _this$state.searchEntry,\n          priceCurrency = _this$state.priceCurrency,\n          price = _this$state.price,\n          amzResults = _this$state.amzResults;\n      return React.createElement(React.Fragment, null, React.createElement(Pane, {\n        display: \"flex\",\n        paddingTop: 16,\n        paddingBottom: 16\n      }, React.createElement(Pane, {\n        flex: 1,\n        alignItems: \"center\",\n        display: \"flex\"\n      }, React.createElement(Heading, {\n        size: headerSize || 700\n      }, \"Marketplace\"))), React.createElement(Pane, _extends({}, CardStyle, {\n        background: \"white\"\n      }), React.createElement(User, null, function (_ref) {\n        var me = _ref.data.me;\n        if (!me) return null;\n\n        if (me.buyer && me.buyer.status) {\n          return React.createElement(React.Fragment, null, React.createElement(Pane, {\n            display: \"flex\",\n            paddingX: \"1em\",\n            paddingY: \"1em\",\n            flexWrap: \"wrap\"\n          }, React.createElement(Pagination, {\n            leftDisabled: pageNum === 0,\n            onLeft: function onLeft() {\n              return _this2.setState(function (state) {\n                return {\n                  pageNum: state.pageNum - 1\n                };\n              });\n            },\n            onRight: function onRight() {\n              return _this2.setState(function (state) {\n                return {\n                  pageNum: state.pageNum + 1\n                };\n              });\n            }\n          }), React.createElement(Pane, {\n            flex: 1\n          }, React.createElement(SearchInput, {\n            placeholder: \"Search\",\n            boxShadow: \"none\",\n            width: \"100%\",\n            height: 36,\n            value: searchBar,\n            onChange: function onChange(e) {\n              return _this2.setState({\n                searchBar: e.target.value,\n                pageNum: 0\n              });\n            },\n            onKeyPress: function onKeyPress(e) {\n              if (e.key === 'Enter') {\n                _this2.setState(function (state) {\n                  return {\n                    searchEntry: state.searchBar\n                  };\n                });\n              }\n            }\n          }))), React.createElement(Pane, {\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            background: \"#f5f5f5\",\n            paddingY: \".7em\",\n            paddingX: \"1em\"\n          }, option('Channel', ['zinc', 'marketplace'], function (a) {\n            return _this2.setState({\n              selectedChannel: a\n            });\n          }, selectedChannel), option('Location', ['US', 'CN', 'All'], function (a) {\n            return _this2.setState({\n              itemLocationCountry: a\n            });\n          }, itemLocationCountry), option('Items per page', [10, 50, 100], function (a) {\n            return _this2.setState({\n              limit: a\n            });\n          }, limit)), searchEntry && selectedChannel === 'marketplace' && React.createElement(Query, {\n            query: getItems,\n            variables: {\n              search: searchEntry,\n              limit: limit,\n              sort: sort.value,\n              pageNum: pageNum,\n              exclude: exclude,\n              include: include,\n              priceCurrency: priceCurrency,\n              price: price,\n              itemLocationCountry: itemLocationCountry\n            }\n          }, function (_ref2) {\n            var data = _ref2.data,\n                error = _ref2.error,\n                loading = _ref2.loading;\n            if (loading) return React.createElement(Pane, {\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              height: \"100vh\"\n            }, React.createElement(Spinner, {\n              size: 80\n            }));\n            if (error || !data.getItems.item || data.getItems.item.length < 1) return React.createElement(Pane, {\n              paddingX: \"1em\",\n              paddingBottom: \"1em\"\n            }, React.createElement(Pane, {\n              background: \"tint2\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              flexDirection: \"column\",\n              borderRadius: 3\n            }, React.createElement(Heading, {\n              margin: \"1em\",\n              size: 600\n            }, \"No items found.\")));\n            return React.createElement(React.Fragment, null, data.getItems.item.data.products.edges.map(function (product) {\n              return (// <FindListItem\n                //   addToCart={this.props.addToCart}\n                //   client=\"Marketplace\"\n                //   product={product.node}\n                // />\n                React.createElement(Product // addVariantToCart={(a, b) =>\n                //   toaster.success(`${a} ${b} addVariantToCart`)\n                // }\n                , {\n                  addWidget: addVariant,\n                  addVariantToCart: function addVariantToCart(a, b) {\n                    return addVariant(a, b);\n                  },\n                  checkout: function checkout() {\n                    return toaster.success(\"checkout\");\n                  } // checkout={this.props.checkout}\n                  ,\n                  key: product.node.id.toString(),\n                  product: product.node,\n                  client: \"Marketplace\",\n                  atcDisabled: atcDisabled // buttons={\n                  //   <Pane marginLeft=\"auto\" height={20}>\n                  //     <AddProduct product={product.node} />\n                  //   </Pane>\n                  // }\n\n                })\n              );\n            }));\n          }), searchEntry && selectedChannel === 'zinc' && _this2.amzFunc(searchEntry));\n        }\n\n        return React.createElement(Pane, {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          width: \"100%\",\n          height: \"200px\"\n        }, React.createElement(Link, {\n          href: \"/settings\"\n        }, React.createElement(\"a\", null, React.createElement(TextButton, {\n          intent: \"primary\",\n          height: 30,\n          fontSize: 16\n        }, \"Apply for Beta Access\"))));\n      })));\n    }\n  }]);\n\n  return Find;\n}(Component);\n\nexport { Find as default };","map":null,"metadata":{},"sourceType":"module"}