{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Query } from 'react-apollo';\nimport { SideSheet, Pane } from 'evergreen-ui';\nimport Router from 'next/router';\nimport OrderDetails from '../common/OrderDetails';\nimport CompletedOrderList from './completedOrderList/CompletedOrderList';\nimport { shopsQuery, shopsQueryVars } from '../shops/ShopList';\n\nfunction Completed(props) {\n  function onClose() {\n    Router.push('/completed');\n  }\n\n  function formatNote(noteObj) {\n    return noteObj.split('||').map(function (a) {\n      var obj = {};\n      a.split(',').forEach(function (b) {\n        obj[b.split(':')[0].trim()] = b.split(':')[1].trim();\n      });\n      obj.lineID = obj.lineID.split('|').map(function (c) {\n        return _parseFloat(c);\n      });\n      obj.marketID = obj.marketID;\n      obj.transID = _parseFloat(obj.transID);\n      return obj;\n    });\n  } // function formatProps(arg) {\n  //   arg.lineItems = JSON.parse(arg.lineItems);\n  //   arg.fulfillments = JSON.parse(arg.fulfillments);\n  //   return arg;\n  // }\n\n\n  return __jsx(React.Fragment, null, props.name && __jsx(Pane, {\n    background: \"tint1\"\n  }, __jsx(SideSheet, {\n    isShown: true,\n    onCloseComplete: onClose,\n    containerProps: {\n      display: 'flex',\n      flex: '1',\n      flexDirection: 'column',\n      maxWidth: '100vw'\n    }\n  }, __jsx(Pane, {\n    flex: \"1\",\n    overflowY: \"scroll\",\n    background: \"tint1\"\n  }, __jsx(OrderDetails, _extends({}, props, {\n    lineItems: JSON.parse(props.lineItems),\n    shippingAddress: JSON.parse(props.shippingAddress),\n    fulfillments: JSON.parse(props.fulfillments) // note={note && formatNote(note)}\n    ,\n    store: props.client,\n    backgroundColor: \"white\"\n  }))))), __jsx(Query, {\n    query: shopsQuery,\n    variables: shopsQueryVars\n  }, function (_ref) {\n    var data = _ref.data,\n        error = _ref.error,\n        loading = _ref.loading;\n    if (error || !data.shops) return null;\n    var shops = data.shops;\n    return __jsx(CompletedOrderList, {\n      shops: shops\n    });\n  }));\n}\n\nexport default Completed;","map":null,"metadata":{},"sourceType":"module"}