{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport PropTypes from 'prop-types';\nimport Userform from './Userform';\nconst REUQEST_RESET_MUTATION = gql`\n  mutation SIGNUP_MUTATION($email: String!) {\n    requestReset(email: $email) {\n      message\n    }\n  }\n`;\n\nfunction RequestReset({\n  formChange\n}) {\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const [reset, {\n    error,\n    loading,\n    called\n  }] = useMutation(REUQEST_RESET_MUTATION, {\n    variables: {\n      email\n    }\n  });\n  return __jsx(Userform, {\n    title: \"Please enter your email and we'll send a link to reset your password\",\n    handleToggleClick: () => formChange(),\n    buttonTitle: \"Send Reset Link\",\n    buttonColor: \"#14B5D0\",\n    error: error,\n    loading: loading,\n    buttonDisabled: !email,\n    fields: [{\n      label: 'Email',\n      value: email,\n      onChange: setEmail,\n      icon: 'envelope'\n    }],\n    bottomLinkText: \"Back to sign in\",\n    onSubmit: async e => {\n      e.preventDefault();\n      await reset();\n      setEmail('');\n    },\n    success: called\n  });\n}\n\nexport default RequestReset;\nRequestReset.propTypes = {\n  formChange: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/junaid/openship2/components/user/RequestReset.js"],"names":["React","useState","useMutation","gql","PropTypes","Userform","REUQEST_RESET_MUTATION","RequestReset","formChange","email","setEmail","reset","error","loading","called","variables","label","value","onChange","icon","e","preventDefault","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,sBAAsB,GAAGH,GAAI;;;;;;CAAnC;;AAQA,SAASI,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAsC;AACpC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACU,KAAD,EAAQ;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,GAAR,IAAsCZ,WAAW,CACrDI,sBADqD,EAErD;AACES,IAAAA,SAAS,EAAE;AAAEN,MAAAA;AAAF;AADb,GAFqD,CAAvD;AAOA,SACE,MAAC,QAAD;AACE,IAAA,KAAK,EAAC,sEADR;AAEE,IAAA,iBAAiB,EAAE,MAAMD,UAAU,EAFrC;AAGE,IAAA,WAAW,EAAC,iBAHd;AAIE,IAAA,WAAW,EAAC,SAJd;AAKE,IAAA,KAAK,EAAEI,KALT;AAME,IAAA,OAAO,EAAEC,OANX;AAOE,IAAA,cAAc,EAAE,CAACJ,KAPnB;AAQE,IAAA,MAAM,EAAE,CACN;AACEO,MAAAA,KAAK,EAAE,OADT;AAEEC,MAAAA,KAAK,EAAER,KAFT;AAGES,MAAAA,QAAQ,EAAER,QAHZ;AAIES,MAAAA,IAAI,EAAE;AAJR,KADM,CARV;AAgBE,IAAA,cAAc,EAAC,iBAhBjB;AAiBE,IAAA,QAAQ,EAAE,MAAMC,CAAN,IAAW;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMV,KAAK,EAAX;AACAD,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,KArBH;AAsBE,IAAA,OAAO,EAAEI;AAtBX,IADF;AA0BD;;AAED,eAAeP,YAAf;AAEAA,YAAY,CAACe,SAAb,GAAyB;AACvBd,EAAAA,UAAU,EAAEJ,SAAS,CAACmB,IAAV,CAAeC;AADJ,CAAzB","sourcesContent":["import React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport PropTypes from 'prop-types';\nimport Userform from './Userform';\n\nconst REUQEST_RESET_MUTATION = gql`\n  mutation SIGNUP_MUTATION($email: String!) {\n    requestReset(email: $email) {\n      message\n    }\n  }\n`;\n\nfunction RequestReset({ formChange }) {\n  const [email, setEmail] = useState('');\n\n  const [reset, { error, loading, called }] = useMutation(\n    REUQEST_RESET_MUTATION,\n    {\n      variables: { email },\n    }\n  );\n\n  return (\n    <Userform\n      title=\"Please enter your email and we'll send a link to reset your password\"\n      handleToggleClick={() => formChange()}\n      buttonTitle=\"Send Reset Link\"\n      buttonColor=\"#14B5D0\"\n      error={error}\n      loading={loading}\n      buttonDisabled={!email}\n      fields={[\n        {\n          label: 'Email',\n          value: email,\n          onChange: setEmail,\n          icon: 'envelope',\n        },\n      ]}\n      bottomLinkText=\"Back to sign in\"\n      onSubmit={async e => {\n        e.preventDefault();\n        await reset();\n        setEmail('');\n      }}\n      success={called}\n    />\n  );\n}\n\nexport default RequestReset;\n\nRequestReset.propTypes = {\n  formChange: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}