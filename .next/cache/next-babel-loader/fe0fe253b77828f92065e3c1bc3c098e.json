{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport React, { useState } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { Pane, Heading, Text, Badge, Tablist, IconButton, Tab, TextInput, Icon, toaster } from 'evergreen-ui';\nimport sellerOnboarding from './sellerOnboarding';\nimport buyerOnboarding from './buyerOnboarding';\nimport AddCard from './AddCard';\nimport { CardStyle } from '../common/DefaultStyles';\nimport Button from '../common/Button';\nimport useMedia from '../common/useMedia';\nimport User, { CURRENT_USER_QUERY } from '../user/User';\nexport const shopQuery = gql`\n  query($domain: String!) {\n    shop(domain: $domain) {\n      name\n      settings\n      user {\n        id\n      }\n    }\n  }\n`;\nexport const UPDATE_SELLER_MUTATION = gql`\n  mutation updateSeller($userInput: Json!) {\n    updateSeller(userInput: $userInput) {\n      id\n    }\n  }\n`;\nconst CREATE_CUSTOMER_MUTATION = gql`\n  mutation createCustomer($userInput: Json!) {\n    createCustomer(userInput: $userInput) {\n      cardObj\n    }\n  }\n`;\nconst UPDATE_URL_MUTATION = gql`\n  mutation updateURL($url: String!) {\n    updateURL(url: $url) {\n      url\n    }\n  }\n`;\nexport const shopQueryVars = {\n  skip: 0,\n  first: 10\n};\nconst Divider = React.createElement(Pane, {\n  flexShrink: 0,\n  height: 2,\n  backgroundColor: \"#E4E7EB\",\n  borderRadius: 1,\n  marginBottom: 12\n});\n\nfunction stepCheck(user) {\n  if (!user.status) {\n    return 0;\n  }\n\n  if (!user.account) {\n    return 1;\n  }\n\n  return 2;\n}\n\nexport default function Shop() {\n  const [selectedSetting, setSelectedSetting] = useState(0);\n  const [billSetting, setBillSetting] = useState(0);\n  const [addCard, setAddCard] = useState(false);\n  const [shopName, setShopName] = useState('');\n  const [reviews, setReviews] = useState('');\n  const [threshold, setThreshold] = useState('');\n  const [URL, setURL] = useState('');\n  const stacked = useMedia('(min-width: 1090px)');\n  return React.createElement(User, null, ({\n    data: {\n      me\n    }\n  }) => {\n    if (!me) return null;\n    return React.createElement(React.Fragment, null, React.createElement(Pane, {\n      display: \"flex\",\n      paddingTop: 16,\n      paddingBottom: 16\n    }, React.createElement(Pane, {\n      flex: 1,\n      alignItems: \"center\",\n      display: \"flex\"\n    }, React.createElement(Heading, {\n      size: 700\n    }, \"Settings\"))), React.createElement(Pane, {\n      paddingBottom: 12\n    }, React.createElement(Pane, {\n      display: \"flex\",\n      alignItems: \"center\"\n    }, React.createElement(Heading, {\n      size: 600\n    }, \"Development\")), React.createElement(Text, {\n      size: 400,\n      color: \"muted\"\n    }, \"Manage developmental options\")), Divider, React.createElement(Pane, _extends({\n      marginBottom: 15\n    }, stacked && {\n      display: 'flex'\n    }), React.createElement(Tablist, {\n      marginBottom: 16,\n      flexBasis: 280,\n      marginRight: 24\n    }, React.createElement(Pane, stacked && {\n      display: 'flex',\n      flexDirection: 'column',\n      marginBottom: 5\n    }, ['URL'].map((tab, index) => React.createElement(Tab, _extends({\n      key: tab,\n      id: tab,\n      onSelect: () => setBillSetting(index),\n      isSelected: index === billSetting,\n      \"aria-controls\": `panel-${tab}`\n    }, {\n      borderRadius: '.25rem!important',\n      fontSize: '.925rem!important'\n    }, {\n      paddingX: 10,\n      paddingY: 15,\n      marginBottom: 5,\n      justifyContent: \"space-between\"\n    }), tab)))), React.createElement(Pane, _extends({}, CardStyle, {\n      padding: 25,\n      background: \"tint1\",\n      flex: \"1\"\n    }), ['URL'].map((tab, index) => React.createElement(Pane, {\n      key: tab,\n      id: `panel-${tab}`,\n      role: \"tabpanel\",\n      \"aria-labelledby\": tab,\n      \"aria-hidden\": index !== billSetting,\n      display: index === billSetting ? 'block' : 'none'\n    }, React.createElement(Pane, {\n      display: \"flex\",\n      position: \"relative\",\n      height: 32,\n      width: \"100%\",\n      borderRadius: 5 // boxShadow=\"inset 0 0 0 1px rgb(54, 164, 110)\"\n      // boxShadow=\"0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06) !important\"\n\n    }, React.createElement(Pane, {\n      width: 32,\n      height: 32,\n      pointerEvents: \"none\",\n      position: \"absolute\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }, React.createElement(Icon, {\n      icon: \"link\",\n      color: \"#8b949c\",\n      size: 12,\n      zIndex: 3\n    })), React.createElement(TextInput // className=\"clean-input\"\n    , {\n      value: URL || me.url,\n      onChange: e => setURL(e.target.value),\n      paddingLeft: 32,\n      id: \"shop\",\n      name: \"shop\",\n      width: \"100%\",\n      fontSize: 15 // borderTopRightRadius={0}\n      // borderBottomRightRadius={0}\n      ,\n      marginBottom: 15,\n      marginRight: 10,\n      placeholder: \"https://www.yourcustomfrontend.com\"\n    }), React.createElement(Mutation, {\n      mutation: UPDATE_URL_MUTATION,\n      refetchQueries: [{\n        query: CURRENT_USER_QUERY\n      }]\n    }, (updateURL, {\n      error,\n      loading\n    }) => React.createElement(Button, {\n      intent: \"success\",\n      height: 32,\n      fontSize: \"14px\",\n      paddingX: \"14px\",\n      onClick: async () => {\n        await updateURL({\n          variables: {\n            url: URL\n          }\n        });\n        toaster.notify('URL has been saved');\n      },\n      disabled: !URL || me.url === URL,\n      isLoading: loading\n    }, \"Save\"))))))), React.createElement(Pane, {\n      paddingBottom: 12\n    }, React.createElement(Pane, {\n      display: \"flex\",\n      alignItems: \"center\"\n    }, React.createElement(Heading, {\n      size: 600\n    }, \"Marketplace\"), React.createElement(Badge, {\n      marginLeft: 8,\n      color: \"blue\",\n      isSolid: true,\n      textTransform: \"none\"\n    }, \"\\u03B2eta\")), React.createElement(Text, {\n      size: 400,\n      color: \"muted\"\n    }, \"Manage marketplace buying and selling options\")), Divider, React.createElement(Pane, null, React.createElement(Pane, _extends({\n      marginBottom: 35\n    }, stacked && {\n      display: 'flex'\n    }), React.createElement(Tablist, {\n      marginBottom: 16,\n      flexBasis: 280,\n      marginRight: 24\n    }, React.createElement(Pane, stacked && {\n      display: 'flex',\n      flexDirection: 'column'\n    }, ['Buyer', 'Seller'].map((tab, index) => React.createElement(Tab, _extends({\n      key: tab,\n      id: tab,\n      onSelect: () => setSelectedSetting(index),\n      isSelected: index === selectedSetting,\n      \"aria-controls\": `panel-${tab}`\n    }, {\n      borderRadius: '.25rem!important',\n      fontSize: '.925rem!important'\n    }, {\n      paddingX: 10,\n      paddingY: 15,\n      justifyContent: \"left\",\n      marginBottom: 5\n    }), tab)))), React.createElement(Pane, {\n      background: \"white\",\n      flex: \"1\"\n    }, ['Buyer', 'Seller'].map((tab, index) => React.createElement(Pane, {\n      key: tab,\n      id: `panel-${tab}`,\n      role: \"tabpanel\",\n      \"aria-labelledby\": tab,\n      \"aria-hidden\": index !== selectedSetting,\n      display: index === selectedSetting ? 'block' : 'none'\n    }, index === 0 && React.createElement(Mutation, {\n      mutation: CREATE_CUSTOMER_MUTATION,\n      refetchQueries: [{\n        query: CURRENT_USER_QUERY\n      }]\n    }, (createCustomer, {\n      error,\n      loading\n    }) => buyerOnboarding({\n      buyerStep: me.buyer ? stepCheck(me.buyer) : 0,\n      requested: me.buyer && me.buyer.questions,\n      shopName,\n      setShopName,\n      reviews,\n      setReviews,\n      threshold,\n      setThreshold,\n      error,\n      loading,\n      createCustomer\n    })), index === 1 && React.createElement(Mutation, {\n      mutation: UPDATE_SELLER_MUTATION,\n      refetchQueries: [{\n        query: CURRENT_USER_QUERY\n      }]\n    }, (updateSeller, {\n      error,\n      loading\n    }) => sellerOnboarding({\n      sellerStep: me.seller ? stepCheck(me.seller) : 0,\n      requested: me.seller && me.seller.questions,\n      id: me.id,\n      shopName,\n      setShopName,\n      reviews,\n      setReviews,\n      threshold,\n      setThreshold,\n      error,\n      loading,\n      updateSeller\n    })))))), React.createElement(Pane, {\n      paddingBottom: 12\n    }, React.createElement(Pane, {\n      display: \"flex\",\n      alignItems: \"center\"\n    }, React.createElement(Heading, {\n      size: 600\n    }, \"Billing\")), React.createElement(Text, {\n      size: 400,\n      color: \"muted\"\n    }, \"Manage plans and payment methods\")), Divider, React.createElement(Pane, _extends({\n      marginBottom: 15\n    }, stacked && {\n      display: 'flex'\n    }), React.createElement(Tablist, {\n      marginBottom: 16,\n      flexBasis: 280,\n      marginRight: 24\n    }, React.createElement(Pane, stacked && {\n      display: 'flex',\n      flexDirection: 'column',\n      marginBottom: 5\n    }, ['Payment Methods'].map((tab, index) => React.createElement(Tab, _extends({\n      key: tab,\n      id: tab,\n      onSelect: () => setBillSetting(index),\n      isSelected: index === billSetting,\n      \"aria-controls\": `panel-${tab}`\n    }, {\n      borderRadius: '.25rem!important',\n      fontSize: '.925rem!important'\n    }, {\n      paddingX: 10,\n      paddingY: 15,\n      marginBottom: 5,\n      justifyContent: \"space-between\"\n    }), tab, index === 0 && React.createElement(IconButton, {\n      height: 16,\n      icon: \"plus\",\n      marginLeft: 8,\n      appearance: \"primary\",\n      intent: \"default\",\n      borderRadius: 20,\n      outline: \"none\",\n      onClick: () => setAddCard(!addCard)\n    }))))), React.createElement(Pane, _extends({}, CardStyle, {\n      padding: 25,\n      background: \"tint1\",\n      flex: \"1\"\n    }), ['Payment Methods'].map((tab, index) => React.createElement(Pane, {\n      key: tab,\n      id: `panel-${tab}`,\n      role: \"tabpanel\",\n      \"aria-labelledby\": tab,\n      \"aria-hidden\": index !== billSetting,\n      display: index === billSetting ? 'block' : 'none'\n    }, index === 0 && React.createElement(React.Fragment, null, addCard && React.createElement(Pane, {\n      backgroundColor: \"#f5f6f7\",\n      marginBottom: 15,\n      borderRadius: 5,\n      elevation: 1,\n      transition: \"opacity .15s linear\"\n    }, React.createElement(AddCard, null)), me.buyer && me.buyer.account && me.buyer.account.sources ? me.buyer.account.sources.data.map(card => React.createElement(Pane, {\n      backgroundColor: \"#f5f6f7\",\n      borderRadius: 5,\n      padding: 10,\n      display: \"flex\",\n      alignItems: \"center\",\n      elevation: 1\n    }, React.createElement(Pane, {\n      width: 30,\n      height: 30,\n      marginX: 8\n    }, React.createElement(\"svg\", {\n      version: \"1.1\",\n      xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n      x: \"0px\",\n      y: \"0px\",\n      viewBox: \"0 0 291.791 291.791\",\n      style: {\n        enableBackground: 'new 0 0 291.791 291.791'\n      },\n      xmlSpace: \"preserve\"\n    }, React.createElement(\"path\", {\n      style: {\n        fill: '#E2574C'\n      },\n      d: \"M182.298 145.895c0 50.366-40.801 91.176-91.149 91.176S0 196.252 0 145.895s40.811-91.176 91.149-91.176 91.149 40.819 91.149 91.176z\"\n    }), React.createElement(\"path\", {\n      style: {\n        fill: '#F4B459'\n      },\n      d: \"M200.616 54.719c-20.442 0-39.261 6.811-54.469 18.181l.073.009c2.991 2.89 6.291 4.924 8.835 8.251l-18.965.301c-2.972 3-5.68 6.264-8.233 9.656H161.3c2.544 3.054 4.896 5.708 7.03 9.081h-46.536c-1.705 2.936-3.282 5.954-4.659 9.09h56.493c1.477 3.127 2.799 5.489 3.921 8.799h-63.76a87.809 87.809 0 0 0-2.535 9.646h68.966c.675 3.155 1.194 6.072 1.55 9.045h-71.884c-.301 3-.456 6.045-.456 9.118h72.859c0 3.228-.228 6.218-.556 9.118h-71.847c.31 3.091.766 6.127 1.368 9.118h68.856a107.579 107.579 0 0 1-2.562 9.008h-63.969c.966 3.118 2.143 6.145 3.428 9.099h56.621c-1.568 3.319-3.346 5.972-5.306 9.081h-46.691a88.709 88.709 0 0 0 6.081 9.154l33.589.501c-2.863 3.437-6.537 5.507-9.884 8.516.182.146-5.352-.018-16.248-.191 16.576 17.105 39.744 27.772 65.446 27.772 50.357 0 91.176-40.82 91.176-91.176s-40.81-91.177-91.175-91.177z\"\n    }))), React.createElement(Text, {\n      size: 400\n    }, \"ending in \", card.last4), React.createElement(Text, {\n      size: 400,\n      marginLeft: \"auto\",\n      marginRight: 20,\n      color: \"#66788A\"\n    }, card.exp_month, \"/\", card.exp_year), React.createElement(Button, {\n      intent: \"none\"\n    }, \"Update\"))) : React.createElement(Pane, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      borderRadius: 3\n    }, React.createElement(Heading, {\n      margin: \"1em\",\n      size: 600\n    }, \"No Payment Methods Added.\")))))))));\n  });\n}","map":null,"metadata":{},"sourceType":"module"}