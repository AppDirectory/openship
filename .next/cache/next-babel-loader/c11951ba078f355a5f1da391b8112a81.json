{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Box, Heading } from '@chakra-ui/core';\nimport { front, prodFront } from '../../config';\nimport Playground from './playground';\nimport Tracking from './apps/tracking';\nexport const SHOP_QUERY = gql`\n  query($domain: String!) {\n    shop(domain: $domain) {\n      name\n      accessToken\n      settings\n      user {\n        id\n      }\n    }\n  }\n`;\nexport default function Shop({\n  shop\n}) {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(SHOP_QUERY, {\n    variables: {\n      domain: shop\n    }\n  });\n  if (loading) return __jsx(\"p\", null, \"Loading...\");\n  if (!data) return __jsx(\"h1\", null, \"This shop is not added to your account.\");\n  if (error || !data.shop) return __jsx(\"h1\", null, \"Error loading shops: \", error);\n  const {\n    shop: {\n      name,\n      accessToken\n    }\n  } = data;\n  return __jsx(Box, {\n    width: \"100%\",\n    borderWidth: \"0\"\n  }, __jsx(Box, {\n    paddingY: 4\n  }, __jsx(Heading, {\n    fontSize: \"2xl\",\n    color: \"text\",\n    fontWeight: 500\n  }, name), __jsx(Heading, {\n    fontSize: \"lg\",\n    my: 4,\n    fontWeight: 500\n  }, \"Apps\"), __jsx(Box, {\n    display: \"flex\"\n  }, __jsx(Tracking, {\n    url: `${false ? front : prodFront}/${accessToken}/graphql`\n  })), __jsx(Heading, {\n    fontSize: \"lg\",\n    marginTop: 25,\n    fontWeight: 500\n  }, \"Playground\")), __jsx(Playground, {\n    accessToken: accessToken,\n    shop: shop,\n    url: `${false ? front : prodFront}/${accessToken}/graphql`\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}