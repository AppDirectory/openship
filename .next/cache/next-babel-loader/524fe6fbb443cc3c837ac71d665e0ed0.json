{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport { Box, Spinner } from '@chakra-ui/core';\nimport { CURRENT_USER_QUERY } from './User';\nimport Userform from './Userform';\nimport Logo from '../logo/Logo';\nconst RESET_MUTATION = gql`\n  mutation RESET_MUTATION(\n    $resetToken: String!\n    $password: String!\n    $confirmPassword: String!\n  ) {\n    resetPassword(\n      resetToken: $resetToken\n      password: $password\n      confirmPassword: $confirmPassword\n    ) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nfunction Reset({\n  resetToken\n}) {\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: confirmPassword,\n    1: setConfirmPassword\n  } = useState('');\n  const [reset, {\n    error,\n    loading,\n    called\n  }] = useMutation(RESET_MUTATION, {\n    variables: {\n      resetToken,\n      password,\n      confirmPassword\n    },\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }],\n    onCompleted: () => {\n      Router.push('/');\n    }\n  });\n  useEffect(() => {\n    if (!resetToken) {\n      Router.push('/');\n    }\n  });\n  return __jsx(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    height: \"100vh\",\n    background: \"#F9F9FB\"\n  }, resetToken ? __jsx(Box, {\n    boxShadow: \"0 0 1px rgba(67,90,111,.47), 0 2px 4px -2px rgba(67,90,111,.3)\",\n    margin: 2,\n    background: \"white\",\n    p: 4,\n    borderRadius: 3\n  }, __jsx(Box, {\n    width: 180,\n    marginBottom: \"15px\"\n  }, __jsx(Logo, {\n    color: \"#162b4c\"\n  })), __jsx(Userform, {\n    title: \"Please enter a new password\",\n    handleToggleClick: () => {\n      Router.push('/');\n    },\n    buttonTitle: \"Confirm\",\n    buttonColor: \"#47B881\",\n    error: error,\n    loading: loading,\n    buttonDisabled: !password || !confirmPassword,\n    fields: [{\n      label: 'Password',\n      value: password,\n      onChange: setPassword,\n      icon: 'lock'\n    }, {\n      label: 'Confirm Password',\n      value: confirmPassword,\n      onChange: setConfirmPassword,\n      icon: 'lock',\n      type: 'password'\n    }] // bottomText=\"Already have an account?\"\n    ,\n    bottomLinkText: \"Back to Sign In\",\n    onSubmit: async e => {\n      e.preventDefault();\n      await reset();\n      setPassword('');\n      setConfirmPassword('');\n    }\n  })) : __jsx(Spinner, {\n    thickness: \"4px\",\n    speed: \"0.65s\",\n    emptyColor: \"gray.200\",\n    color: \"blue.500\",\n    size: \"xl\"\n  }));\n}\n\nexport default Reset;","map":null,"metadata":{},"sourceType":"module"}