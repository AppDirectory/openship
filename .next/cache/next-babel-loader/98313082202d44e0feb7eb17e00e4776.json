{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation createWebhook($domain: String!, $accessToken: String!) {\\n    createWebhook(domain: $domain, accessToken: $accessToken) {\\n      userErrors\\n      webhookSubscription\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation CREATE_SHOP_MUTATION(\\n    $domain: String!\\n    $accessToken: String!\\n    $name: String!\\n  ) {\\n    upsertShop(accessToken: $accessToken, domain: $domain, name: $name) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nimport { Pane, Dialog, Heading, TextInput, Text, Icon, Switch } from 'evergreen-ui';\nimport Composer from 'react-composer';\nimport ShopList, { shopsQuery, shopsQueryVars } from '../components/shops/ShopList';\nvar CREATE_SHOP_MUTATION = gql(_templateObject());\nvar WEBHOOK_MUTATION = gql(_templateObject2());\n\nvar Shops =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Shops, _Component);\n\n  function Shops() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Shops);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Shops)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      open: _this.props.shop && true,\n      name: _this.props.shop && _this.props.shop.split(\".\")[0],\n      checked: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function _callee(upsertShop, createWebhook) {\n      var data1, data2;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(upsertShop());\n\n            case 2:\n              data1 = _context.sent;\n\n              if (!_this.state.checked) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(createWebhook());\n\n            case 6:\n              data2 = _context.sent;\n\n            case 7:\n              _this.setState({\n                open: false\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Shops, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          shop = _this$props.shop,\n          accessToken = _this$props.accessToken;\n      var _this$state = this.state,\n          open = _this$state.open,\n          name = _this$state.name,\n          checked = _this$state.checked;\n      return __jsx(React.Fragment, null, __jsx(Composer, {\n        components: [__jsx(Mutation, {\n          mutation: CREATE_SHOP_MUTATION,\n          variables: {\n            domain: shop,\n            accessToken: accessToken,\n            name: name\n          },\n          refetchQueries: [{\n            query: shopsQuery,\n            variables: shopsQueryVars\n          }]\n        }), __jsx(Mutation, {\n          mutation: WEBHOOK_MUTATION,\n          variables: {\n            domain: shop,\n            accessToken: accessToken\n          }\n        })]\n      }, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            upsertShop = _ref2[0],\n            createWebhook = _ref2[1];\n\n        return __jsx(React.Fragment, null, __jsx(Pane, null, __jsx(Dialog, {\n          width: \"440px\",\n          isShown: open,\n          title: \"Add shop to Openship\" // hasHeader={false}\n          // hasFooter={false}\n          ,\n          confirmLabel: \"Confirm\",\n          intent: \"success\",\n          onConfirm: function onConfirm() {\n            return _this2.handleClick(upsertShop, createWebhook);\n          }\n        }, __jsx(Pane, null, __jsx(Pane, {\n          position: \"relative\",\n          display: \"inline-flex\",\n          height: 32,\n          width: \"100%\",\n          marginBottom: 3\n        }, __jsx(Pane, {\n          width: 32,\n          height: 32,\n          pointerEvents: \"none\",\n          position: \"absolute\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        }, __jsx(Icon, {\n          icon: \"shop\",\n          color: \"#8b949c\",\n          size: 12,\n          zIndex: 3\n        })), __jsx(TextInput, {\n          className: \"clean-input\",\n          paddingLeft: 32 // name=\"Shop Name\"\n          ,\n          width: \"100%\",\n          value: name,\n          fontSize: 15,\n          onChange: function onChange(e) {\n            return _this2.setState({\n              name: e.target.value\n            });\n          },\n          marginBottom: 15 // placeholder=\"Shop Name\"\n          ,\n          backgroundColor: \"#F5F6F7 !important\"\n        })), __jsx(Heading, {\n          lineHeight: \"10px\",\n          fontSize: \"11px\",\n          size: 100,\n          padding: 3,\n          marginBottom: 10\n        }, \"Shop Name\"), __jsx(Pane, {\n          display: \"flex\",\n          alignItems: \"center\"\n        }, __jsx(Text, {\n          paddingX: 3,\n          paddingY: 2,\n          fontSize: 15\n        }, shop)), __jsx(Heading, {\n          lineHeight: \"10px\",\n          fontSize: \"11px\",\n          size: 100,\n          padding: 3,\n          marginBottom: 15\n        }, \"Shopify URL\")), __jsx(Pane, {\n          display: \"flex\",\n          alignItems: \"center\"\n        }, __jsx(Pane, {\n          paddingRight: 15\n        }, __jsx(Heading, {\n          size: 500,\n          fontSize: \"15px\",\n          fontWeight: 500\n        }, \"Push orders to Openship\"), __jsx(Text, {\n          size: 300\n        }, \"Orders will be pushed to the pending tab to be fulfilled\")), __jsx(Switch, {\n          marginLeft: \"auto\",\n          checked: checked,\n          onChange: function onChange(e) {\n            return _this2.setState({\n              checked: e.target.checked\n            });\n          }\n        })))), __jsx(ShopList, null));\n      }));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref3) {\n      var _ref3$query, shop, accessToken;\n\n      return _regeneratorRuntime.async(function getInitialProps$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _ref3$query = _ref3.query, shop = _ref3$query.shop, accessToken = _ref3$query.accessToken;\n              return _context2.abrupt(\"return\", {\n                shop: shop,\n                accessToken: accessToken\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return Shops;\n}(Component);\n\nexport { Shops as default };","map":null,"metadata":{},"sourceType":"module"}