{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport { gql } from 'apollo-boost';\nimport { Pane, Heading, Text, SearchInput, Icon, TextInput, IconButton, Spinner, TagInput, toaster, Tablist, Tab, Avatar } from 'evergreen-ui';\nimport PropTypes from 'prop-types';\nimport { Query } from 'react-apollo';\nimport Product from './findListItem/Product';\nimport AmzProduct from './findListItem/AmzProduct';\nimport User from '../user/User';\nimport Pagination from '../common/Pagination';\nimport TextButton from '../common/Button';\nimport { CardStyle } from '../common/DefaultStyles';\nimport { front, prodFront } from '../../config';\nconst getItems = gql`\n  query getItems(\n    $search: String\n    $limit: Int\n    $sort: String\n    $pageNum: Int\n    $exclude: Json\n    $include: Json\n    $priceCurrency: String\n    $price: String\n    $itemLocationCountry: String\n  ) {\n    getItems(\n      search: $search\n      limit: $limit\n      sort: $sort\n      pageNum: $pageNum\n      exclude: $exclude\n      include: $include\n      priceCurrency: $priceCurrency\n      price: $price\n      itemLocationCountry: $itemLocationCountry\n    ) {\n      item\n    }\n  }\n`;\nexport const getItemGroup = gql`\n  query getItemGroup($itemID: String) {\n    getItemGroup(itemID: $itemID) {\n      item\n    }\n  }\n`;\nconst sortOptions = [{\n  label: 'Lowest Price',\n  value: 'price'\n}, {\n  label: 'Highest Price',\n  value: '-price'\n}, {\n  label: 'Best Match',\n  value: 'match'\n}];\n\nconst option = (name, options, update, selected) => React.createElement(Pane, {\n  marginBottom: 10,\n  marginRight: 10\n}, React.createElement(Heading, {\n  size: 500,\n  fontSize: \"12px\",\n  fontWeight: 500,\n  marginBottom: 2\n}, name), React.createElement(Tablist, null, options.map((a, index) => React.createElement(Tab, {\n  key: a,\n  id: a,\n  marginLeft: 0,\n  height: \"20px\",\n  fontSize: \"10px\",\n  marginBottom: 3,\n  letterSpacing: \"0.3px\",\n  fontWeight: 400,\n  textTransform: \"uppercase\",\n  onSelect: () => update(a),\n  isSelected: a === selected,\n  \"aria-controls\": `panel-${a}`\n}, a))));\n\nexport default class Find extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      sort: {\n        label: 'Lowest Price',\n        value: 'price'\n      },\n      searchBar: '',\n      searchEntry: null,\n      limit: 10,\n      pageNum: 0,\n      min: '',\n      max: '',\n      price: null,\n      priceCurrency: 'USD',\n      itemLocationCountry: 'US',\n      include: [],\n      exclude: [],\n      selectedChannel: 'zinc',\n      zincResults: []\n    });\n\n    _defineProperty(this, \"zincSearch\", (searchEntry, token) => {\n      console.log('called');\n      fetch(`${process.env.NODE_ENV === 'development' ? front : prodFront}/api/zinc/search?query=${searchEntry}&token=${token}`).then(res => res.json()).then(json => this.setState({\n        zincResults: json\n      })).catch(error => console.log('Error: ', error));\n    });\n  }\n\n  render() {\n    const {\n      headerSize,\n      atcDisabled,\n      addMPItem,\n      addZincItem\n    } = this.props;\n    const {\n      pageNum,\n      searchBar,\n      sort,\n      limit,\n      itemLocationCountry,\n      selectedChannel,\n      min,\n      max,\n      include,\n      exclude,\n      searchEntry,\n      priceCurrency,\n      price,\n      zincResults\n    } = this.state;\n    return React.createElement(React.Fragment, null, React.createElement(Pane, {\n      display: \"flex\",\n      paddingTop: 16,\n      paddingBottom: 16\n    }, React.createElement(Pane, {\n      flex: 1,\n      alignItems: \"center\",\n      display: \"flex\"\n    }, React.createElement(Heading, {\n      size: headerSize || 700\n    }, \"Marketplace\"))), React.createElement(Pane, _extends({}, CardStyle, {\n      background: \"white\"\n    }), React.createElement(User, null, ({\n      data: {\n        me\n      }\n    }) => {\n      if (!me) return null;\n\n      if (me.buyer && me.buyer.status) {\n        return React.createElement(React.Fragment, null, React.createElement(Pane, {\n          display: \"flex\",\n          paddingX: \"1em\",\n          paddingY: \"1em\",\n          flexWrap: \"wrap\"\n        }, React.createElement(Pagination, {\n          leftDisabled: pageNum === 0,\n          onLeft: () => this.setState(state => ({\n            pageNum: state.pageNum - 1\n          })),\n          onRight: () => this.setState(state => ({\n            pageNum: state.pageNum + 1\n          }))\n        }), React.createElement(Pane, {\n          flex: 1\n        }, React.createElement(SearchInput, {\n          placeholder: \"Search\",\n          boxShadow: \"none\",\n          width: \"100%\",\n          height: 36,\n          value: searchBar,\n          onChange: e => this.setState({\n            searchBar: e.target.value,\n            pageNum: 0\n          }),\n          onKeyPress: e => {\n            if (e.key === 'Enter') {\n              this.setState(state => ({\n                searchEntry: state.searchBar\n              }));\n\n              if (selectedChannel === 'zinc') {\n                this.zincSearch(searchBar, me.zincToken);\n              }\n            }\n          }\n        }))), React.createElement(Pane, {\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          background: \"#f5f5f5\",\n          paddingY: \".7em\",\n          paddingX: \"1em\"\n        }, option('Channel', ['zinc', 'marketplace'], a => this.setState({\n          selectedChannel: a\n        }), selectedChannel), option('Location', ['US', 'CN', 'All'], a => this.setState({\n          itemLocationCountry: a\n        }), itemLocationCountry), option('Items per page', [10, 50, 100], a => this.setState({\n          limit: a\n        }), limit)), searchEntry && selectedChannel === 'marketplace' && React.createElement(Query, {\n          query: getItems,\n          variables: {\n            search: searchEntry,\n            limit,\n            sort: sort.value,\n            pageNum,\n            exclude,\n            include,\n            priceCurrency,\n            price,\n            itemLocationCountry\n          }\n        }, ({\n          data,\n          error,\n          loading\n        }) => {\n          if (loading) return React.createElement(Pane, {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            height: \"100vh\"\n          }, React.createElement(Spinner, {\n            size: 80\n          }));\n          if (error || !data.getItems.item || data.getItems.item.length < 1) return React.createElement(Pane, {\n            paddingX: \"1em\",\n            paddingY: \"1em\"\n          }, React.createElement(Pane, {\n            background: \"tint2\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            flexDirection: \"column\",\n            borderRadius: 3\n          }, React.createElement(Heading, {\n            margin: \"1em\",\n            size: 600\n          }, \"No items found.\")));\n          return React.createElement(React.Fragment, null, data.getItems.item.data.products.edges.map(product => React.createElement(Product, {\n            addVariantToCart: (a, b) => addMPItem(a, b),\n            checkout: () => toaster.success(`checkout`),\n            key: product.node.id.toString(),\n            product: product.node,\n            client: \"Marketplace\",\n            atcDisabled: atcDisabled\n          })));\n        }), selectedChannel === 'zinc' && zincResults.length ? zincResults.map(product => React.createElement(AmzProduct, {\n          product: product,\n          addVariantToCart: a => toaster.success(a),\n          atcDisabled: atcDisabled,\n          addZincItem: (a, b, c, d, e) => addZincItem(a, b, c, d, e)\n        })) : React.createElement(Pane, {\n          paddingX: \"1em\",\n          paddingY: \"1em\"\n        }, React.createElement(Pane, {\n          background: \"tint2\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flexDirection: \"column\",\n          borderRadius: 3\n        }, React.createElement(Heading, {\n          margin: \"1em\",\n          size: 600\n        }, \"No items found\"))));\n      }\n\n      return React.createElement(Pane, {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"100%\",\n        height: \"200px\"\n      }, React.createElement(Link, {\n        href: \"/settings\"\n      }, React.createElement(\"a\", null, React.createElement(TextButton, {\n        intent: \"primary\",\n        height: 30,\n        fontSize: 16\n      }, \"Apply for Beta Access\"))));\n    })));\n  }\n\n}\n\n_defineProperty(Find, \"propTypes\", {\n  headerSize: PropTypes.number,\n  atcDisabled: PropTypes.bool,\n  addVariant: PropTypes.func\n});","map":{"version":3,"sources":["/Users/junaid/openship/components/find/Find.js"],"names":["React","Component","Link","gql","Pane","Heading","Text","SearchInput","Icon","TextInput","IconButton","Spinner","TagInput","toaster","Tablist","Tab","Avatar","PropTypes","Query","Product","AmzProduct","User","Pagination","TextButton","CardStyle","front","prodFront","getItems","getItemGroup","sortOptions","label","value","option","name","options","update","selected","map","a","index","Find","sort","searchBar","searchEntry","limit","pageNum","min","max","price","priceCurrency","itemLocationCountry","include","exclude","selectedChannel","zincResults","token","console","log","fetch","process","env","NODE_ENV","then","res","json","setState","catch","error","render","headerSize","atcDisabled","addMPItem","addZincItem","props","state","data","me","buyer","status","e","target","key","zincSearch","zincToken","search","loading","item","length","products","edges","product","b","success","node","id","toString","c","d","number","bool","addVariant","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Link from 'next/link';\nimport { gql } from 'apollo-boost';\nimport {\n  Pane,\n  Heading,\n  Text,\n  SearchInput,\n  Icon,\n  TextInput,\n  IconButton,\n  Spinner,\n  TagInput,\n  toaster,\n  Tablist,\n  Tab,\n  Avatar,\n} from 'evergreen-ui';\nimport PropTypes from 'prop-types';\nimport { Query } from 'react-apollo';\nimport Product from './findListItem/Product';\nimport AmzProduct from './findListItem/AmzProduct';\nimport User from '../user/User';\nimport Pagination from '../common/Pagination';\nimport TextButton from '../common/Button';\nimport { CardStyle } from '../common/DefaultStyles';\nimport { front, prodFront } from '../../config';\n\nconst getItems = gql`\n  query getItems(\n    $search: String\n    $limit: Int\n    $sort: String\n    $pageNum: Int\n    $exclude: Json\n    $include: Json\n    $priceCurrency: String\n    $price: String\n    $itemLocationCountry: String\n  ) {\n    getItems(\n      search: $search\n      limit: $limit\n      sort: $sort\n      pageNum: $pageNum\n      exclude: $exclude\n      include: $include\n      priceCurrency: $priceCurrency\n      price: $price\n      itemLocationCountry: $itemLocationCountry\n    ) {\n      item\n    }\n  }\n`;\n\nexport const getItemGroup = gql`\n  query getItemGroup($itemID: String) {\n    getItemGroup(itemID: $itemID) {\n      item\n    }\n  }\n`;\n\nconst sortOptions = [\n  {\n    label: 'Lowest Price',\n    value: 'price',\n  },\n  {\n    label: 'Highest Price',\n    value: '-price',\n  },\n  {\n    label: 'Best Match',\n    value: 'match',\n  },\n];\n\nconst option = (name, options, update, selected) => (\n  <Pane marginBottom={10} marginRight={10}>\n    <Heading size={500} fontSize=\"12px\" fontWeight={500} marginBottom={2}>\n      {name}\n    </Heading>\n    <Tablist>\n      {options.map((a, index) => (\n        <Tab\n          key={a}\n          id={a}\n          marginLeft={0}\n          height=\"20px\"\n          fontSize=\"10px\"\n          marginBottom={3}\n          letterSpacing=\"0.3px\"\n          fontWeight={400}\n          textTransform=\"uppercase\"\n          onSelect={() => update(a)}\n          isSelected={a === selected}\n          aria-controls={`panel-${a}`}\n        >\n          {a}\n        </Tab>\n      ))}\n    </Tablist>\n  </Pane>\n);\n\nexport default class Find extends Component {\n  static propTypes = {\n    headerSize: PropTypes.number,\n    atcDisabled: PropTypes.bool,\n    addVariant: PropTypes.func,\n  };\n\n  state = {\n    sort: {\n      label: 'Lowest Price',\n      value: 'price',\n    },\n    searchBar: '',\n    searchEntry: null,\n    limit: 10,\n    pageNum: 0,\n    min: '',\n    max: '',\n    price: null,\n    priceCurrency: 'USD',\n    itemLocationCountry: 'US',\n    include: [],\n    exclude: [],\n    selectedChannel: 'zinc',\n    zincResults: [],\n  };\n\n  zincSearch = (searchEntry, token) => {\n    console.log('called');\n    fetch(\n      `${\n        process.env.NODE_ENV === 'development' ? front : prodFront\n      }/api/zinc/search?query=${searchEntry}&token=${token}`\n    )\n      .then(res => res.json())\n      .then(json => this.setState({ zincResults: json }))\n      .catch(error => console.log('Error: ', error));\n  };\n\n  render() {\n    const { headerSize, atcDisabled, addMPItem, addZincItem } = this.props;\n    const {\n      pageNum,\n      searchBar,\n      sort,\n      limit,\n      itemLocationCountry,\n      selectedChannel,\n      min,\n      max,\n      include,\n      exclude,\n      searchEntry,\n      priceCurrency,\n      price,\n      zincResults,\n    } = this.state;\n    return (\n      <>\n        <Pane display=\"flex\" paddingTop={16} paddingBottom={16}>\n          <Pane flex={1} alignItems=\"center\" display=\"flex\">\n            <Heading size={headerSize || 700}>Marketplace</Heading>\n          </Pane>\n        </Pane>\n        <Pane {...CardStyle} background=\"white\">\n          <User>\n            {({ data: { me } }) => {\n              if (!me) return null;\n              if (me.buyer && me.buyer.status) {\n                return (\n                  <>\n                    <Pane\n                      display=\"flex\"\n                      paddingX=\"1em\"\n                      paddingY=\"1em\"\n                      flexWrap=\"wrap\"\n                    >\n                      <Pagination\n                        leftDisabled={pageNum === 0}\n                        onLeft={() =>\n                          this.setState(state => ({\n                            pageNum: state.pageNum - 1,\n                          }))\n                        }\n                        onRight={() =>\n                          this.setState(state => ({\n                            pageNum: state.pageNum + 1,\n                          }))\n                        }\n                      />\n                      <Pane flex={1}>\n                        <SearchInput\n                          placeholder=\"Search\"\n                          boxShadow=\"none\"\n                          width=\"100%\"\n                          height={36}\n                          value={searchBar}\n                          onChange={e =>\n                            this.setState({\n                              searchBar: e.target.value,\n                              pageNum: 0,\n                            })\n                          }\n                          onKeyPress={e => {\n                            if (e.key === 'Enter') {\n                              this.setState(state => ({\n                                searchEntry: state.searchBar,\n                              }));\n                              if (selectedChannel === 'zinc') {\n                                this.zincSearch(searchBar, me.zincToken);\n                              }\n                            }\n                          }}\n                        />\n                      </Pane>\n                    </Pane>\n\n                    <Pane\n                      display=\"flex\"\n                      flexWrap=\"wrap\"\n                      background=\"#f5f5f5\"\n                      paddingY=\".7em\"\n                      paddingX=\"1em\"\n                    >\n                      {option(\n                        'Channel',\n                        ['zinc', 'marketplace'],\n                        a => this.setState({ selectedChannel: a }),\n                        selectedChannel\n                      )}\n                      {option(\n                        'Location',\n                        ['US', 'CN', 'All'],\n                        a => this.setState({ itemLocationCountry: a }),\n                        itemLocationCountry\n                      )}\n                      {option(\n                        'Items per page',\n                        [10, 50, 100],\n                        a => this.setState({ limit: a }),\n                        limit\n                      )}\n                    </Pane>\n                    {searchEntry && selectedChannel === 'marketplace' && (\n                      <Query\n                        query={getItems}\n                        variables={{\n                          search: searchEntry,\n                          limit,\n                          sort: sort.value,\n                          pageNum,\n                          exclude,\n                          include,\n                          priceCurrency,\n                          price,\n                          itemLocationCountry,\n                        }}\n                      >\n                        {({ data, error, loading }) => {\n                          if (loading)\n                            return (\n                              <Pane\n                                display=\"flex\"\n                                alignItems=\"center\"\n                                justifyContent=\"center\"\n                                height=\"100vh\"\n                              >\n                                <Spinner size={80} />\n                              </Pane>\n                            );\n                          if (\n                            error ||\n                            !data.getItems.item ||\n                            data.getItems.item.length < 1\n                          )\n                            return (\n                              <Pane paddingX=\"1em\" paddingY=\"1em\">\n                                <Pane\n                                  background=\"tint2\"\n                                  display=\"flex\"\n                                  justifyContent=\"center\"\n                                  alignItems=\"center\"\n                                  flexDirection=\"column\"\n                                  borderRadius={3}\n                                >\n                                  <Heading margin=\"1em\" size={600}>\n                                    No items found.\n                                  </Heading>\n                                </Pane>\n                              </Pane>\n                            );\n                          return (\n                            <>\n                              {data.getItems.item.data.products.edges.map(\n                                product => (\n                                  <Product\n                                    addVariantToCart={(a, b) => addMPItem(a, b)}\n                                    checkout={() => toaster.success(`checkout`)}\n                                    key={product.node.id.toString()}\n                                    product={product.node}\n                                    client=\"Marketplace\"\n                                    atcDisabled={atcDisabled}\n                                  />\n                                )\n                              )}\n                            </>\n                          );\n                        }}\n                      </Query>\n                    )}\n                    {selectedChannel === 'zinc' && zincResults.length ? (\n                      zincResults.map(product => (\n                        <AmzProduct\n                          product={product}\n                          addVariantToCart={a => toaster.success(a)}\n                          atcDisabled={atcDisabled}\n                          addZincItem={(a, b, c, d, e) =>\n                            addZincItem(a, b, c, d, e)\n                          }\n                        />\n                      ))\n                    ) : (\n                      <Pane paddingX=\"1em\" paddingY=\"1em\">\n                        <Pane\n                          background=\"tint2\"\n                          display=\"flex\"\n                          justifyContent=\"center\"\n                          alignItems=\"center\"\n                          flexDirection=\"column\"\n                          borderRadius={3}\n                        >\n                          <Heading margin=\"1em\" size={600}>\n                            No items found\n                          </Heading>\n                        </Pane>\n                      </Pane>\n                    )}\n                  </>\n                );\n              }\n              return (\n                <Pane\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  justifyContent=\"center\"\n                  width=\"100%\"\n                  height=\"200px\"\n                >\n                  <Link href=\"/settings\">\n                    <a>\n                      <TextButton intent=\"primary\" height={30} fontSize={16}>\n                        Apply for Beta Access\n                      </TextButton>\n                    </a>\n                  </Link>\n                </Pane>\n              );\n            }}\n          </User>\n        </Pane>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}