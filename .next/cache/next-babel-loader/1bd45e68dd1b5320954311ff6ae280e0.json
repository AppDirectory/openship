{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { Pane, Heading, Avatar, Text, IconButton, Icon } from 'evergreen-ui';\n\nclass CartItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"decrementQuantity\", lineItemId => {\n      const {\n        checkoutLineItemsUpdate,\n        lineItem,\n        checkoutID\n      } = this.props;\n      checkoutLineItemsUpdate([{\n        id: lineItemId,\n        quantity: _parseInt(lineItem.quantity - 1, 10)\n      }]);\n    });\n\n    _defineProperty(this, \"incrementQuantity\", lineItemId => {\n      const {\n        checkoutLineItemsUpdate,\n        lineItem,\n        checkoutID\n      } = this.props;\n      checkoutLineItemsUpdate([{\n        id: lineItemId,\n        quantity: _parseInt(lineItem.quantity + 1, 10)\n      }]);\n    });\n  }\n\n  render() {\n    const {\n      lineItem,\n      removeItem,\n      checkoutLineItemsUpdate,\n      checkoutID,\n      loading\n    } = this.props;\n    return React.createElement(Pane, {\n      background: \"#fff\",\n      border: \"muted\",\n      marginBottom: 5\n    }, React.createElement(Pane, {\n      display: \"flex\",\n      alignItems: \"center\"\n    }, React.createElement(Pane, {\n      borderRight: \"muted\",\n      height: \"100%\",\n      background: \"white\"\n    }, lineItem.variant.image && React.createElement(Avatar, {\n      src: lineItem.variant.image.src,\n      alt: `${lineItem.title} product shot`,\n      backgroundColor: \"white\" // borderStyle=\"solid\"\n      // borderWidth=\"1px\"\n      ,\n      borderRadius: 0 // borderColor=\"#e8e9ea\"\n      ,\n      size: 70\n    })), React.createElement(Pane, {\n      padding: 5,\n      paddingLeft: 10\n    }, React.createElement(Heading, {\n      size: 300\n    }, lineItem.title), React.createElement(Pane, {\n      display: \"flex\",\n      marginTop: \"2px\"\n    }, React.createElement(Text, {\n      size: 300,\n      lineHeight: \"12px\"\n    }, lineItem.variant.title), React.createElement(Pane, {\n      marginX: 5,\n      lineHeight: \"12px\"\n    }, \"\\xB7\"), React.createElement(Heading, {\n      size: 300,\n      marginRight: 10,\n      color: \"green\",\n      lineHeight: \"12px\"\n    }, \"$\", (lineItem.quantity * lineItem.variant.price).toFixed(2))), lineItem.quantity > 1 && React.createElement(Text, {\n      size: 300,\n      color: \"muted\",\n      lineHeight: \"12px\"\n    }, \"$\", lineItem.variant.price, \" x \", lineItem.quantity)), React.createElement(Pane, {\n      marginLeft: \"auto\",\n      display: \"flex\",\n      alignItems: \"center\"\n    }, checkoutLineItemsUpdate && React.createElement(Pane, {\n      display: \"flex\",\n      height: 20\n    }, React.createElement(Pane, {\n      display: \"flex\",\n      alignItems: \"center\",\n      background: \"#F9F9FB\",\n      border: \"muted\",\n      paddingX: 5,\n      borderRadius: 2\n    }, loading ? React.createElement(Text, {\n      size: 300,\n      marginX: 19\n    }, React.createElement(\"div\", {\n      className: \"dot-flashing\"\n    })) : React.createElement(React.Fragment, null, React.createElement(Icon, {\n      color: \"#425A70\",\n      icon: \"minus\",\n      appearance: \"minimal\",\n      size: 12,\n      cursor: \"pointer\",\n      onClick: () => this.decrementQuantity(lineItem.id)\n    }), React.createElement(Text, {\n      size: 300,\n      marginX: 9\n    }, lineItem.quantity), React.createElement(Icon, {\n      color: \"#425A70\",\n      icon: \"plus\",\n      appearance: \"minimal\",\n      size: 12,\n      cursor: \"pointer\",\n      onClick: () => this.incrementQuantity(lineItem.id)\n    })))), removeItem && React.createElement(IconButton, {\n      height: 20,\n      appearance: \"minimal\",\n      inent: \"danger\",\n      icon: \"cross\",\n      iconSize: 15,\n      marginX: 10,\n      pointerEvents: \"visible\",\n      onClick: () => removeItem([lineItem.id])\n    }))));\n  }\n\n}\n\nexport default CartItem;","map":null,"metadata":{},"sourceType":"module"}