{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from 'react';\nimport { CardElement, StripeProvider, Elements, injectStripe } from 'react-stripe-elements';\nimport { Pane, Heading, TextInput } from 'evergreen-ui';\nimport { gql } from 'apollo-boost';\nimport { Mutation } from 'react-apollo';\nimport Button from '../common/Button';\nimport { CURRENT_USER_QUERY } from '../user/User';\n\nconst createOptions = (fontSize, padding) => ({\n  style: {\n    base: {\n      fontSize,\n      color: '#424770',\n      letterSpacing: '0.025em',\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n      '::placeholder': {\n        color: '#aab7c4'\n      },\n      padding\n    },\n    invalid: {\n      color: '#9e2146'\n    }\n  }\n});\n\nconst CREATE_CUSTOMER = gql`\n  mutation createCustomer($userInput: Json!) {\n    createCustomer(userInput: $userInput) {\n      cardObj\n    }\n  }\n`;\n\nclass _CardForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      name: '',\n      addressLine1: '',\n      addressLine2: '',\n      addressCity: '',\n      addressState: '',\n      addressZip: ''\n    });\n\n    _defineProperty(this, \"handleSubmit\", (ev, createCustomerFunc) => {\n      ev.preventDefault();\n      const {\n        stripe\n      } = this.props;\n\n      if (stripe) {\n        stripe.createToken(_objectSpread({}, this.state)).then(async payload => {\n          const customer = await createCustomerFunc({\n            variables: {\n              userInput: {\n                token: {\n                  id: payload.token.id\n                }\n              }\n            }\n          });\n        });\n      } else {}\n    });\n  }\n\n  render() {\n    const {\n      fontSize\n    } = this.props;\n    const {\n      name,\n      addressLine1,\n      addressLine2\n    } = this.state;\n    return React.createElement(React.Fragment, null, React.createElement(_JSXStyle, {\n      id: \"3374452525\"\n    }, [\".card{box-shadow:none;}\", \".card:active{z-index:2;outline:none;box-shadow:inset 0 0 2px rgba(67,90,111,0.14), inset 0 0 0 1px #579ad9,0 0 0 3px rgba(16,112,202,0.14);z-index:2;outline:none;}\", \".card:selected{opacity:0.8;border-color:transparent;border:'none';}\", \".card:focus{z-index:2;outline:none;box-shadow:inset 0 0 2px rgba(67,90,111,0.14), inset 0 0 0 1px #579ad9,0 0 0 3px rgba(16,112,202,0.14);z-index:2;outline:none;}\"]), React.createElement(Mutation, {\n      mutation: CREATE_CUSTOMER,\n      refetchQueries: [{\n        query: CURRENT_USER_QUERY\n      }]\n    }, (createCustomer, {\n      error,\n      loading\n    }) => React.createElement(\"form\", {\n      onSubmit: e => this.handleSubmit(e, createCustomer),\n      className: \"jsx-3374452525\"\n    }, React.createElement(Pane, {\n      padding: 16,\n      paddingBottom: 10\n    }, React.createElement(Heading, {\n      size: 400,\n      marginBottom: 4,\n      fontWeight: 500,\n      color: \"#425A70\"\n    }, \"Name\"), React.createElement(Pane, {\n      elevation: 1,\n      borderRadius: 3,\n      marginBottom: 10,\n      width: \"100%\"\n    }, React.createElement(TextInput, {\n      placeholder: \"James Michael\",\n      fontFamily: \"\\\"Helvetica Neue\\\", Helvetica, sans-serif\",\n      fontSize: 14,\n      letterSpacing: \"0.025em\",\n      background: \"#fff\",\n      borderRadius: 3,\n      width: \"100%\",\n      className: \"card\",\n      value: name,\n      onChange: e => this.setState({\n        name: e.target.value\n      })\n    })), React.createElement(Heading, {\n      size: 400,\n      marginBottom: 4,\n      fontWeight: 500,\n      color: \"#425A70\"\n    }, \"Address\"), React.createElement(Pane, {\n      elevation: 1,\n      borderRadius: 3,\n      marginBottom: 10,\n      width: \"100%\"\n    }, React.createElement(TextInput, {\n      placeholder: \"2 Infinite Loop\",\n      fontFamily: \"\\\"Helvetica Neue\\\", Helvetica, sans-serif\",\n      fontSize: 14,\n      letterSpacing: \"0.025em\",\n      background: \"#fff\",\n      borderRadius: 3,\n      width: \"100%\",\n      className: \"card\",\n      value: addressLine1,\n      onChange: e => this.setState({\n        addressLine1: e.target.value\n      })\n    })), React.createElement(Heading, {\n      size: 400,\n      marginBottom: 4,\n      fontWeight: 500,\n      color: \"#425A70\"\n    }, \"Suite (optional)\"), React.createElement(Pane, {\n      elevation: 1,\n      borderRadius: 3,\n      marginBottom: 10,\n      width: \"100%\"\n    }, React.createElement(TextInput, {\n      placeholder: \"Suite 5\",\n      fontFamily: \"\\\"Helvetica Neue\\\", Helvetica, sans-serif\",\n      fontSize: 14,\n      letterSpacing: \"0.025em\",\n      background: \"#fff\",\n      width: \"100%\",\n      borderRadius: 3,\n      className: \"card\",\n      value: addressLine2,\n      onChange: e => this.setState({\n        addressLine2: e.target.value\n      })\n    })), React.createElement(Heading, {\n      size: 400,\n      marginBottom: 4,\n      fontWeight: 500,\n      color: \"#425A70\"\n    }, \"Credit or Debit Card Number\"), React.createElement(Pane, {\n      marginBottom: 10,\n      background: \"#fff\",\n      padding: 8,\n      borderRadius: 3,\n      elevation: 1\n    }, React.createElement(CardElement, createOptions(fontSize)))), React.createElement(Button, {\n      height: 35,\n      fontSize: 15,\n      width: \"100%\" // intent=\"primary\"\n      ,\n      textColor: \"#fff\",\n      background: \"#1070ca\",\n      borderBottomLeftRadius: \"5\",\n      borderBottomRightRadius: \"5\",\n      borderTopLeftRadius: \"0\",\n      borderTopRightRadius: \"0\"\n    }, \"Submit\"))));\n  }\n\n}\n\nconst CardForm = injectStripe(_CardForm);\n/* eslint-disable */\n\nclass AddCard extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      renderElements: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      renderElements: true\n    });\n  }\n\n  render() {\n    const {\n      renderElements\n    } = this.state;\n    return renderElements && React.createElement(StripeProvider, {\n      apiKey: \"pk_test_8DBiS9gU5BhsZZ0KkXllJppT00APOMomgF\"\n    }, React.createElement(Elements, null, React.createElement(CardForm, {\n      fontSize: 12\n    })));\n  }\n\n}\n/* eslint-disable */\n\n\nexport default AddCard;","map":null,"metadata":{},"sourceType":"module"}