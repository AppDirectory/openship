{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query shopProducts(\\n    $domain: String!\\n    $first: Int\\n    $after: String\\n    $before: String\\n    $last: Int\\n    $query: String\\n  ) {\\n    shopProducts(\\n      domain: $domain\\n      first: $first\\n      after: $after\\n      before: $before\\n      last: $last\\n      query: $query\\n    ) {\\n      pageInfo\\n      edges\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { gql } from 'apollo-boost';\nimport { Pane, Heading, SearchInput, Spinner } from 'evergreen-ui';\nimport { Query } from 'react-apollo';\nimport ShopSelect from '../common/ShopSelect';\nimport { CardStyle } from '../common/DefaultStyles';\nimport ProductsItem from './ProductsItem';\nvar shopProducts = gql(_templateObject());\nexport default function Products(_ref) {\n  var shops = _ref.shops;\n\n  var _useState = useState(shops.length && shops[0].domain.split('.')[0]),\n      _useState2 = _slicedToArray(_useState, 2),\n      client = _useState2[0],\n      setClient = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      afterCursor = _useState4[0],\n      setAfterCursor = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      beforeCursor = _useState6[0],\n      setBeforeCursor = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      query = _useState8[0],\n      setQuery = _useState8[1];\n\n  var _useState9 = useState(10),\n      _useState10 = _slicedToArray(_useState9, 2),\n      first = _useState10[0],\n      setFirst = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      last = _useState12[0],\n      setLast = _useState12[1];\n\n  function updateClient(arg) {\n    setClient(arg);\n    setAfterCursor(null);\n    setBeforeCursor(null);\n    setFirst(10);\n    setLast(null);\n  }\n\n  function onPrevious(arg) {\n    setAfterCursor(null);\n    setBeforeCursor(arg);\n    setFirst(null);\n    setLast(10);\n  }\n\n  function onNext(arg) {\n    setAfterCursor(arg);\n    setBeforeCursor(null);\n    setFirst(10);\n    setLast(null);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Pane, {\n    display: \"flex\",\n    paddingTop: 16,\n    paddingBottom: 16\n  }, React.createElement(Pane, {\n    flex: 1,\n    alignItems: \"center\",\n    display: \"flex\"\n  }, React.createElement(Heading, {\n    size: 700\n  }, \"Products\"))), client ? React.createElement(Pane, CardStyle, React.createElement(Pane, {\n    display: \"flex\",\n    padding: \"1em\"\n  }, React.createElement(Pane, {\n    flex: 1\n  }, React.createElement(SearchInput, {\n    placeholder: \"Search\",\n    width: \"100%\",\n    height: 36,\n    value: query,\n    onChange: function onChange(e) {\n      return setQuery(e.target.value);\n    }\n  }), React.createElement(ShopSelect, {\n    client: client,\n    shops: shops,\n    updateClient: updateClient\n  }))), React.createElement(Query, {\n    query: shopProducts,\n    variables: {\n      domain: \"\".concat(client, \".myshopify.com\"),\n      first: first,\n      last: last,\n      after: afterCursor,\n      before: beforeCursor,\n      query: query\n    }\n  }, function (_ref2) {\n    var data = _ref2.data,\n        error = _ref2.error,\n        loading = _ref2.loading;\n    if (loading) return React.createElement(Pane, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100vh\"\n    }, React.createElement(Spinner, {\n      size: 80\n    }));\n    if (error || !data.shopProducts) return React.createElement(\"h1\", null, \"Error loading shops: \", error);\n    return React.createElement(Pane, {\n      width: \"100%\"\n    }, data.shopProducts.edges.map(function (product) {\n      return React.createElement(ProductsItem, {\n        client: client,\n        product: product.node\n      });\n    }));\n  })) : React.createElement(Pane, {\n    background: \"white\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    borderRadius: 3\n  }, React.createElement(Heading, {\n    margin: \"1em\",\n    size: 600\n  }, \"Your products will appear here after you add a shop.\")));\n}","map":null,"metadata":{},"sourceType":"module"}