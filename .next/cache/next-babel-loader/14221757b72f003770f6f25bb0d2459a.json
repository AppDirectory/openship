{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { IconButton, Pane, Heading, Paragraph, Text, Avatar } from 'evergreen-ui';\nimport Cart from '../../pending/Cart/Cart';\nimport OrderLine from './OrderLine';\n\nconst priceString = (price, quantity) => {\n  const total = Math.round(price * quantity * 100).toString();\n  return `${total.substring(0, total.length - 2)}.${total.substring(total.length - 2)}`;\n};\n\nexport default function OrderListItem(props) {\n  const [open, setOpen] = useState(props.open);\n  useEffect(() => {\n    setOpen(props.open);\n  }, [props.open]); // async function onChange(\n  //   selected,\n  //   updateIndexFunc,\n  //   updateLineFunc,\n  //   createCheckoutFunc,\n  //   setCheckoutFunc,\n  //   errorTextObj\n  // ) {\n  //   updateIndexFunc(selected.length > 0 ? props.index : null);\n  //   updateLineFunc(selected);\n  //   if (errorTextObj !== '{}') {\n  //     setCheckoutFunc(JSON.parse(errorTextObj));\n  //   } else if (selected.length > 0) {\n  //     const checkout = await createCheckoutFunc({\n  //       variables: {\n  //         input: {\n  //           shippingAddress: {\n  //             address1: props.streetAddress1,\n  //             address2: props.streetAddress2 && props.streetAddress2,\n  //             city: props.city,\n  //             province: props.state,\n  //             country: 'US',\n  //             zip: props.zip,\n  //             firstName: props.first_name,\n  //             lastName: props.last_name,\n  //           },\n  //         },\n  //       },\n  //     });\n  //     setCheckoutFunc(checkout.data.createCheckout.checkout);\n  //   } else {\n  //     setCheckoutFunc({});\n  //   }\n  // }\n\n  async function onCheckAllChange(e, updateIndexFunc, createCheckoutFunc, errorTextObj) {\n    updateIndexFunc(e ? props.index : null);\n\n    if (e && errorTextObj === '{}') {\n      await createCheckoutFunc({\n        shippingAddress: {\n          address1: props.streetAddress1,\n          address2: props.streetAddress2 && props.streetAddress2,\n          city: props.city,\n          province: props.state,\n          country: 'US',\n          zip: props.zip,\n          firstName: props.first_name,\n          lastName: props.last_name\n        }\n      });\n    }\n  }\n\n  function handleToggleClick(e) {\n    e.stopPropagation();\n    setOpen(prevOpen => !prevOpen);\n  }\n\n  function cart(string) {\n    const parsedError = JSON.parse(string);\n    return parsedError.lineItems && React.createElement(Cart, {\n      checkout: parsedError\n    });\n  }\n\n  const {\n    id,\n    orderId,\n    orderName,\n    email,\n    first_name,\n    last_name,\n    streetAddress1,\n    streetAddress2,\n    city,\n    state,\n    zip,\n    shopName,\n    phone,\n    lineItems,\n    currency,\n    totalPrice,\n    subTotalPrice,\n    totalDiscount,\n    totalTax,\n    createAt,\n    mpCheckout,\n    mpCart,\n    note,\n    disabled,\n    buttons,\n    selectedOrderIndex,\n    updateIndex,\n    createCheckout\n  } = props;\n  return React.createElement(Pane, null, React.createElement(Pane, {\n    display: \"flex\",\n    paddingX: \"1em\",\n    paddingY: \".7em\",\n    onClick: !disabled ? () => onCheckAllChange(!selectedOrderIndex, updateIndex, createCheckout, mpCart) : undefined,\n    pointerEvents: !selectedOrderIndex || selectedOrderIndex === id ? null : 'none',\n    className: !selectedOrderIndex || selectedOrderIndex === id ? 'hover' : null,\n    cursor: !selectedOrderIndex || selectedOrderIndex === id ? 'pointer' : null\n  }, React.createElement(Pane, null, React.createElement(Pane, {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\"\n  }, React.createElement(Heading, {\n    size: 400,\n    marginRight: 12\n  }, React.createElement(\"a\", {\n    href: `https://${shopName.split('.')[0]}.myshopify.com/admin/orders/${orderId}`,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, orderName)), React.createElement(Heading, {\n    size: 100,\n    lineHeight: \"20px\",\n    fontWeight: 500,\n    marginRight: 12\n  }, shopName.split('.')[0]), React.createElement(Heading, {\n    size: 200\n  }, Intl.DateTimeFormat('en-US').format(Date.parse(createAt)))), React.createElement(Paragraph, {\n    size: 300,\n    fontSize: 13,\n    color: \"#425A70\"\n  }, first_name, \" \", last_name, React.createElement(\"br\", null), streetAddress1, \" \", streetAddress2, React.createElement(\"br\", null), city, ', ', state, \" \", zip)), React.createElement(Pane, {\n    display: \"flex\",\n    marginLeft: \"auto\",\n    justifyContent: \"center\" // alignItems=\"center\"\n\n  }, buttons, React.createElement(IconButton, {\n    marginLeft: 3,\n    height: 20,\n    \"aria-expanded\": open,\n    onClick: handleToggleClick,\n    appearance: \"minimal\",\n    icon: \"chevron-down\",\n    iconSize: 18,\n    pointerEvents: \"visible\"\n  }))), open && React.createElement(React.Fragment, null, React.createElement(Pane, {\n    marginLeft: \"-3px\",\n    background: \"#F7F9FD\",\n    border: \"muted\",\n    paddingY: \".7em\",\n    paddingX: \"1em\"\n  }, React.createElement(Pane, {\n    marginBottom: 10\n  }, React.createElement(Text, {\n    size: 400,\n    fontWeight: 500,\n    color: \"#084B8A\"\n  }, \"Line Items\")), lineItems.map(a => React.createElement(OrderLine, {\n    key: a.id,\n    item: a.node ? a.node : a\n  }))), mpCart && cart(mpCart), mpCheckout && React.createElement(Pane, {\n    marginLeft: \"-3px\",\n    background: \"#F1FAF5\",\n    border: \"muted\",\n    paddingY: \".7em\",\n    paddingX: \"1em\"\n  }, React.createElement(Pane, {\n    marginBottom: 10\n  }, React.createElement(Text, {\n    size: 400,\n    fontWeight: 500,\n    color: \"#00783E\"\n  }, \"Marketplace Order\")), mpCheckout[0].marketLineItems.map(a => React.createElement(Pane, {\n    background: \"#fff\",\n    border: \"muted\",\n    marginBottom: 5\n  }, React.createElement(Pane, {\n    display: \"flex\",\n    alignItems: \"center\"\n  }, React.createElement(Pane, {\n    height: \"100%\",\n    background: \"white\",\n    borderRight: \"1px solid #EDF0F2\"\n  }, React.createElement(Avatar, {\n    src: a.variantImg,\n    borderRadius: 0,\n    size: 70,\n    backgroundColor: \"white\",\n    border: \"muted\"\n  })), React.createElement(Pane, {\n    padding: 5,\n    paddingLeft: 10\n  }, React.createElement(Heading, {\n    size: 300\n  }, a.title), React.createElement(Pane, {\n    display: \"flex\"\n  }, a.quantity > 1 && React.createElement(Pane, null, React.createElement(Text, {\n    size: 300,\n    color: \"muted\"\n  }, \"$\", a.variantPrice, \" x \", a.quantity)), React.createElement(Heading, {\n    size: 300,\n    marginRight: 10,\n    color: \"green\"\n  }, \"$\", a.variantPrice && priceString(a.variantPrice, a.quantity))))))))));\n}","map":null,"metadata":{},"sourceType":"module"}