{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport App from 'next/app';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { ThemeProvider, CSSReset } from '@chakra-ui/core';\nimport Page from '../components/layout/Page';\nimport withData from '../lib/withData';\nimport PleaseSignIn from '../components/user/PleaseSignIn';\nimport theme from '../theme';\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx,\n    apolloClient\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    } // this exposes the query to the user\n\n\n    pageProps.query = ctx.query;\n    return {\n      pageProps,\n      path: ctx.asPath\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      apollo,\n      pageProps,\n      path\n    } = this.props;\n\n    function pathCheck(p) {\n      if (p.startsWith('/reset')) {\n        return __jsx(Component, pageProps);\n      }\n\n      return __jsx(ThemeProvider, {\n        theme: theme\n      }, __jsx(CSSReset, null), __jsx(PleaseSignIn, null, __jsx(Page, {\n        shopsURL: p.startsWith('/shops') || p.startsWith('/settings') && true\n      }, __jsx(Component, pageProps))));\n    }\n\n    return __jsx(React.Fragment, null, __jsx(\"style\", null, `\n          .layout {\n            display: flex;\n          }\n          .hover:hover {\n            opacity: 0.85;\n          }\n\n          @media screen and (max-width: 768px) {\n            .hidden {\n              display: none;\n            }\n\n            .layout {\n              display: block;\n            }\n          }\n          @media screen and (min-width: 769px) {\n            .show {\n              display: none;\n            }\n          }\n\n        `), __jsx(ApolloProvider, {\n      client: apollo\n    }, pathCheck(path)));\n  }\n\n}\n\nexport default withData(MyApp);","map":null,"metadata":{},"sourceType":"module"}