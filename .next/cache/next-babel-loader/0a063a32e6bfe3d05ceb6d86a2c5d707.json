{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Box, Spinner, Heading } from '@chakra-ui/core';\nimport { gql } from 'apollo-boost';\nimport MktProduct from './MktProduct';\nconst getItemsQuery = gql`\n  query getItems(\n    $search: String\n    $limit: Int\n    $sort: String\n    $pageNum: Int\n    $exclude: Json\n    $include: Json\n    $priceCurrency: String\n    $price: String\n    $itemLocationCountry: String\n  ) {\n    getItems(\n      search: $search\n      limit: $limit\n      sort: $sort\n      pageNum: $pageNum\n      exclude: $exclude\n      include: $include\n      priceCurrency: $priceCurrency\n      price: $price\n      itemLocationCountry: $itemLocationCountry\n    ) {\n      item\n    }\n  }\n`;\n\nfunction MarketplaceSearch({\n  search,\n  limit,\n  sort,\n  pageNum,\n  exclude,\n  include,\n  priceCurrency,\n  price,\n  itemLocationCountry,\n  atcDisabled,\n  addMPItem\n}) {\n  const allItems = useQuery(getItemsQuery, {\n    variables: {\n      search,\n      limit,\n      sort: sort.value,\n      pageNum,\n      exclude,\n      include,\n      priceCurrency,\n      price,\n      itemLocationCountry\n    }\n  });\n  const {\n    data,\n    error,\n    loading\n  } = allItems;\n  if (loading) return __jsx(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"100vh\"\n  }, __jsx(Spinner, {\n    thickness: \"4px\",\n    speed: \"0.65s\",\n    emptyColor: \"gray.200\",\n    color: \"blue.500\",\n    size: \"xl\"\n  }));\n  if (error || !data.getItems.item || data.getItems.item.length < 1) return __jsx(Box, {\n    paddingX: \"1em\",\n    paddingY: \"1em\"\n  }, __jsx(Box, {\n    background: \"tint2\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    borderRadius: 3\n  }, __jsx(Heading, {\n    margin: \"1em\",\n    size: 600\n  }, \"No items found.\")));\n  return __jsx(React.Fragment, null, data.getItems.item.data.products.edges.map(product => __jsx(MktProduct, {\n    addVariantToCart: (a, b) => addMPItem(a, b),\n    checkout: () => toaster.success(`checkout`),\n    key: product.node.id.toString(),\n    product: product.node,\n    client: \"Marketplace\",\n    atcDisabled: atcDisabled\n  })));\n}\n\nexport default MarketplaceSearch;","map":null,"metadata":{},"sourceType":"module"}