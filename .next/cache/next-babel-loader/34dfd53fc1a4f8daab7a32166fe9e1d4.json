{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Box, Button, Heading, Text, Icon, PseudoBox, NumberInput, NumberInputField, NumberInputStepper, NumberIncrementStepper, NumberDecrementStepper } from '@chakra-ui/core';\nimport VariantSelector from './VariantSelector';\n\nclass MktProduct extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleOptionChange\", event => {\n      const {\n        product\n      } = this.props;\n      const {\n        target\n      } = event;\n      const {\n        selectedOptions\n      } = this.state;\n      selectedOptions[target.name] = target.value;\n      const selectedVariant = product.variants.edges.find(variant => variant.node.selectedOptions.every(selectedOption => selectedOptions[selectedOption.name] === selectedOption.value)).node;\n      this.setState({\n        selectedVariant,\n        selectedVariantImage: selectedVariant.image.src\n      });\n    });\n\n    _defineProperty(this, \"handleQuantityChange\", event => {\n      this.setState({\n        selectedVariantQuantity: event\n      });\n    });\n\n    _defineProperty(this, \"handleQuantityDown\", () => {\n      this.setState(prevState => ({\n        selectedVariantQuantity: prevState.selectedVariantQuantity - 1 || 1\n      }));\n    });\n\n    _defineProperty(this, \"handleQuantityUp\", () => {\n      this.setState(prevState => ({\n        selectedVariantQuantity: prevState.selectedVariantQuantity + 1\n      }));\n    });\n\n    _defineProperty(this, \"findImage\", (images, variantId) => {\n      const primary = images[0];\n      const image = images.filter(function (a) {\n        return a.variant_ids.includes(variantId);\n      })[0];\n      return (image || primary).src;\n    });\n\n    this.state = {\n      selectedOptions: {},\n      selectedVariantQuantity: 1\n    };\n  }\n\n  componentWillMount() {\n    const {\n      product\n    } = this.props;\n    product.options.forEach(selector => {\n      this.setState(prevState => ({\n        selectedOptions: _objectSpread({}, prevState.selectedOptions, {\n          [selector.name]: selector.values[0]\n        })\n      }));\n    });\n  }\n\n  render() {\n    const {\n      product,\n      addVariantToCart,\n      atcDisabled\n    } = this.props;\n    console.log(product.currentlyNotInStock);\n    const {\n      selectedVariantImage,\n      selectedVariantQuantity,\n      selectedVariant\n    } = this.state;\n    const variantImage = selectedVariantImage || product.images.edges[0].node.src;\n    const variant = selectedVariant || product.variants.edges[0].node;\n    const variantQuantity = selectedVariantQuantity || 1;\n    const variantSelectors = product.options.map(option => __jsx(VariantSelector, {\n      handleOptionChange: this.handleOptionChange,\n      key: option.id.toString(),\n      option: option\n    }));\n    return __jsx(React.Fragment, null, __jsx(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      borderTop: \"0.1rem solid #dfe3e8\"\n    }, __jsx(Box, {\n      padding: 4\n    }, product.images.edges.length && __jsx(Box, {\n      background: \"white\",\n      border: \"1px solid #e8e9ea\",\n      borderRadius: 3,\n      height: \"90px\",\n      width: \"90px\"\n    }, __jsx(Box, {\n      as: \"img\",\n      src: variantImage,\n      alt: `${product.title} product shot`\n    }))), __jsx(Box, {\n      padding: 4,\n      paddingLeft: 0,\n      marginTop: 1,\n      marginBottom: \"auto\"\n    }, __jsx(Heading, {\n      fontSize: \"md\",\n      color: \"text\",\n      fontWeight: 500\n    }, product.title), __jsx(Heading, {\n      size: 400,\n      marginRight: 10,\n      color: \"green.600\"\n    }, \"$\", variant.price), __jsx(Box, {\n      display: \"flex\",\n      marginTop: 1,\n      marginBottom: 7\n    }, variantSelectors), !atcDisabled && __jsx(Box, {\n      display: \"flex\"\n    }, __jsx(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      paddingRight: 5\n    }, __jsx(PseudoBox, null, __jsx(Text, {\n      fontSize: \".65rem\",\n      fontWeight: \"600\",\n      color: \"gray.500\"\n    }, \"QUANTITY\"), __jsx(NumberInput, {\n      size: \"sm\",\n      value: selectedVariantQuantity,\n      onChange: this.handleQuantityChange,\n      min: 1,\n      width: \"80px\"\n    }, __jsx(NumberInputField, {\n      focusBorderColor: \"blue.500\",\n      textAlign: \"center\",\n      _hover: {\n        borderColor: 'blue.500'\n      },\n      height: \"25px\"\n    }), __jsx(NumberInputStepper, {\n      width: \"25px\"\n    }, __jsx(NumberIncrementStepper, {\n      bg: \"#f6f7f9\",\n      color: \"blue.500\",\n      _active: {\n        bg: 'blue.500'\n      },\n      _hover: {\n        bg: 'blue.500',\n        color: 'white'\n      },\n      children: __jsx(Icon, {\n        name: \"add\",\n        color: \"currentColor\"\n      }),\n      marginTop: \"0px !important\",\n      borderTopWidth: \"0px !important\"\n    })), __jsx(NumberInputStepper, {\n      left: \"0\",\n      width: \"25px\"\n    }, __jsx(NumberDecrementStepper, {\n      bg: \"#f6f7f9\",\n      color: \"blue.500\",\n      _active: {\n        bg: 'blue.500'\n      },\n      _hover: {\n        bg: 'blue.500',\n        color: 'white'\n      },\n      children: __jsx(Icon, {\n        name: \"minus\",\n        color: \"currentColor\"\n      }),\n      borderLeft: \"0px\",\n      borderRight: \"1px solid #E2E8F0\",\n      marginTop: \"0px !important\",\n      borderTopWidth: \"0px !important\"\n    })))), __jsx(Button, {\n      background: \"#DDEBF7\",\n      borderRadius: 3,\n      marginRight: 1,\n      px: 2,\n      mx: 3,\n      mt: \"auto\",\n      height: 6,\n      onClick: () => addVariantToCart(variant.id, selectedVariantQuantity),\n      disabled: atcDisabled || !product.availableForSale\n    }, __jsx(Heading, {\n      letterSpacing: \"wide\",\n      fontSize: \"sm\",\n      fontWeight: 700,\n      color: \"#1070CA\"\n    }, product.availableForSale ? 'ADD TO CART' : 'OUT OF STOCK')))))));\n  }\n\n}\n\nexport default MktProduct;","map":null,"metadata":{},"sourceType":"module"}