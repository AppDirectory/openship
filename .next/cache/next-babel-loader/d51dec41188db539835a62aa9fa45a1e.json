{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getItems(\\n    $search: String\\n    $limit: Int\\n    $sort: String\\n    $pageNum: Int\\n    $exclude: Json\\n    $include: Json\\n    $priceCurrency: String\\n    $price: String\\n    $itemLocationCountry: String\\n  ) {\\n    getItems(\\n      search: $search\\n      limit: $limit\\n      sort: $sort\\n      pageNum: $pageNum\\n      exclude: $exclude\\n      include: $include\\n      priceCurrency: $priceCurrency\\n      price: $price\\n      itemLocationCountry: $itemLocationCountry\\n    ) {\\n      item\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Link from 'next/link';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Box, Spinner, Heading, Button } from '@chakra-ui/core';\nimport { gql } from 'apollo-boost';\nimport MktProduct from './MktProduct';\nimport { CURRENT_USER_QUERY } from '../../user/User';\nvar getItemsQuery = gql(_templateObject());\n\nfunction MarketplaceSearch(_ref) {\n  var search = _ref.search,\n      limit = _ref.limit,\n      sort = _ref.sort,\n      pageNum = _ref.pageNum,\n      exclude = _ref.exclude,\n      include = _ref.include,\n      priceCurrency = _ref.priceCurrency,\n      price = _ref.price,\n      itemLocationCountry = _ref.itemLocationCountry,\n      atcDisabled = _ref.atcDisabled,\n      addMPItem = _ref.addMPItem;\n\n  var _useQuery = useQuery(CURRENT_USER_QUERY),\n      me = _useQuery.data.me;\n\n  var allItems = useQuery(getItemsQuery, {\n    variables: {\n      search: search,\n      limit: limit,\n      sort: sort.value,\n      pageNum: pageNum,\n      exclude: exclude,\n      include: include,\n      priceCurrency: priceCurrency,\n      price: price,\n      itemLocationCountry: itemLocationCountry\n    }\n  });\n  var data = allItems.data,\n      error = allItems.error,\n      loading = allItems.loading;\n\n  if (me && (!me.buyer || !me.buyer.status)) {\n    return __jsx(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: \"100%\",\n      height: \"200px\"\n    }, __jsx(Link, {\n      href: \"/settings\"\n    }, __jsx(\"a\", null, __jsx(Button, {\n      background: \"#DDEBF7\",\n      borderRadius: 3\n    }, __jsx(Heading, {\n      fontSize: \"lg\",\n      fontWeight: 700,\n      color: \"#1070CA\"\n    }, \"GET MARKETPLACE BETA ACCESS\")))));\n  }\n\n  if (loading) return __jsx(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"100vh\"\n  }, __jsx(Spinner, {\n    thickness: \"4px\",\n    speed: \"0.65s\",\n    emptyColor: \"gray.200\",\n    color: \"blue.500\",\n    size: \"xl\"\n  }));\n  if (error || !data.getItems.item || data.getItems.item.length < 1) return __jsx(Box, {\n    paddingX: \"1em\",\n    paddingY: \"1em\"\n  }, __jsx(Box, {\n    background: \"tint2\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    borderRadius: 3\n  }, __jsx(Heading, {\n    margin: \"1em\",\n    size: 600\n  }, \"No items found.\")));\n  return __jsx(React.Fragment, null, data.getItems.item.data.products.edges.map(function (product) {\n    return __jsx(MktProduct, {\n      addVariantToCart: function addVariantToCart(a, b) {\n        return addMPItem(a, b);\n      },\n      checkout: function checkout() {\n        return toaster.success(\"checkout\");\n      },\n      key: product.node.id.toString(),\n      product: product.node,\n      client: \"Marketplace\",\n      atcDisabled: atcDisabled\n    });\n  }));\n}\n\nexport default MarketplaceSearch;","map":null,"metadata":{},"sourceType":"module"}