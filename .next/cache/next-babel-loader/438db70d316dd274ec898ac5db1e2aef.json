{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation deleteOrder($id: ID!) {\\n    deleteOrder(id: $id) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation checkoutLineItemsUpdate($checkoutId: ID!, $lineItems: Json!) {\\n    checkoutLineItemsUpdate(checkoutId: $checkoutId, lineItems: $lineItems) {\\n      checkout\\n    }\\n  }\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation checkoutLineItemsRemove($checkoutId: ID!, $lineItemIds: Json!) {\\n    checkoutLineItemsRemove(\\n      checkoutId: $checkoutId\\n      lineItemIds: $lineItemIds\\n    ) {\\n      checkout\\n    }\\n  }\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation checkoutLineItemsAdd($checkoutId: ID!, $lineItems: Json!) {\\n    checkoutLineItemsAdd(checkoutId: $checkoutId, lineItems: $lineItems) {\\n      checkout\\n    }\\n  }\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation createCheckout($input: Json!) {\\n    createCheckout(input: $input) {\\n      checkout\\n    }\\n  }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation purchaseItems($ids: Json!) {\\n    purchaseItems(ids: $ids) {\\n      checkout\\n      cart\\n    }\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation upsertMatch($shopify: Json!, $marketplace: Json!) {\\n    upsertMatch(shopify: $shopify, marketplace: $marketplace) {\\n      item\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation updateOrder(\\n    $id: ID!\\n    $mpCart: String\\n    $zincCart: String\\n    $zincCheckout: Json\\n    $first_name: String\\n    $last_name: String\\n    $streetAddress1: String\\n    $streetAddress2: String\\n    $city: String\\n    $state: String\\n    $zip: String\\n    $processed: Boolean\\n  ) {\\n    updateOrder(\\n      id: $id\\n      mpCart: $mpCart\\n      zincCart: $zincCart\\n      zincCheckout: $zincCheckout\\n      first_name: $first_name\\n      last_name: $last_name\\n      streetAddress1: $streetAddress1\\n      streetAddress2: $streetAddress2\\n      city: $city\\n      state: $state\\n      zip: $zip\\n      processed: $processed\\n    ) {\\n      id\\n      email\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query PAGINATION_QUERY {\\n    ordersConnection(where: { processed: FALSE }) {\\n      aggregate {\\n        count\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query OrdersQuery(\\n    $skip: Int\\n    $first: Int\\n    $orderBy: OrderOrderByInput\\n    $processed: Processed\\n  ) {\\n    orders(\\n      first: $first\\n      skip: $skip\\n      orderBy: $orderBy\\n      where: { processed: $processed }\\n    ) {\\n      id\\n      orderId\\n      orderName\\n      email\\n      first_name\\n      last_name\\n      streetAddress1\\n      streetAddress2\\n      city\\n      state\\n      zip\\n      phone\\n      lineItems\\n      currency\\n      totalPrice\\n      subTotalPrice\\n      totalDiscount\\n      totalTax\\n      createAt\\n      mpCart\\n      mpCheckout\\n      zincCart\\n      zincCheckout\\n      processed\\n      shopName\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query, Mutation } from 'react-apollo';\nimport { Adopt } from 'react-adopt';\nimport { Pane, Heading, Alert, Switch, Spinner, Text, IconButton, Icon, toaster } from 'evergreen-ui';\nimport OrderListItem from '../common/orderListItem/OrderListItem';\nimport Find from '../find/Find';\nimport User from '../user/User';\nimport OrderLine from '../common/orderListItem/OrderLine';\nimport Button from '../common/Button';\nimport { CardStyle } from '../common/DefaultStyles';\nimport MPCart from './Cart/MPCart';\nimport ZincCart from './Cart/ZincCart';\nimport { front, prodFront } from '../../config';\n\nfunction placeZincOrder(_x, _x2, _x3) {\n  return _placeZincOrder.apply(this, arguments);\n}\n\nfunction _placeZincOrder() {\n  _placeZincOrder = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee13(data, token, updateOrderFunc) {\n    var response, res, update;\n    return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.prev = 0;\n            _context13.next = 3;\n            return fetch(\"\".concat(process.env.NODE_ENV === 'development' ? front : prodFront, \"/api/zinc/purchase?token=\").concat(token), {\n              credentials: 'same-origin',\n              mode: 'cors',\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-type': 'application/json',\n                'X-Requested-With': 'Fetch'\n              },\n              body: _JSON$stringify({\n                data: data\n              })\n            });\n\n          case 3:\n            response = _context13.sent;\n            _context13.next = 6;\n            return response.json();\n\n          case 6:\n            res = _context13.sent;\n            _context13.next = 9;\n            return updateOrderFunc({\n              variables: {\n                id: data.client_notes.os_order_id,\n                zincCheckout: res,\n                processed: 'TRUE'\n              }\n            });\n\n          case 9:\n            update = _context13.sent;\n            console.log('first2', res);\n            _context13.next = 16;\n            break;\n\n          case 13:\n            _context13.prev = 13;\n            _context13.t0 = _context13[\"catch\"](0);\n            console.log('error', _context13.t0);\n\n          case 16:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13, null, [[0, 13]]);\n  }));\n  return _placeZincOrder.apply(this, arguments);\n}\n\nexport var ORDER_QUERY = gql(_templateObject());\nexport var PAGINATION_QUERY = gql(_templateObject2());\nvar UPDATE_ORDER_MUTATION = gql(_templateObject3());\nvar UPSERT_MUTATION = gql(_templateObject4());\nvar PURCHASE_ORDER_MUTATION = gql(_templateObject5());\nvar CREATE_CHECKOUT_MUTATION = gql(_templateObject6());\nvar CHECKOUT_ADD_MUTATION = gql(_templateObject7());\nvar CHECKOUT_REMOVE_MUTATION = gql(_templateObject8());\nvar CHECKOUT_UPDATE_MUTATION = gql(_templateObject9());\nvar DELETE_ORDER = gql(_templateObject10());\nvar Layout = {\n  flex: '1 1 10rem',\n  marginLeft: '2rem',\n  marginTop: '2rem'\n};\n\nfunction PendingOrders() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedOrderIndex = _useState2[0],\n      setSelectedOrderIndex = _useState2[1]; // const [selectedLineIndex, setSelectedLineIndex] = useState([]);\n\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      skip = _useState4[0],\n      setSkip = _useState4[1];\n\n  var _useState5 = useState('createdAt_ASC'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      orderBy = _useState6[0],\n      setOrderBy = _useState6[1];\n\n  var _useState7 = useState(100),\n      _useState8 = _slicedToArray(_useState7, 2),\n      firstQ = _useState8[0],\n      setFirstQ = _useState8[1]; // const [check, setCheck] = useState(true);\n\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      open = _useState10[0],\n      setOpen = _useState10[1]; // const [checkout, setCheckout] = useState({});\n\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      cartLoading = _useState12[0],\n      setCartLoading = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      processingOrder = _useState14[0],\n      setProcessingOrder = _useState14[1];\n\n  function _currentOrder(_x4) {\n    return _currentOrder2.apply(this, arguments);\n  }\n\n  function _currentOrder2() {\n    _currentOrder2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5(arg) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              setSelectedOrderIndex(arg);\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n    return _currentOrder2.apply(this, arguments);\n  }\n\n  function overwrite(_x5, _x6, _x7) {\n    return _overwrite.apply(this, arguments);\n  }\n\n  function _overwrite() {\n    _overwrite = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee6(errorText, lineItems, upsertMatchMutation) {\n      var upsertMatchRes;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              setCartLoading(true);\n              _context6.next = 3;\n              return upsertMatchMutation({\n                variables: {\n                  shopify: lineItems.map(function (a) {\n                    return {\n                      product_id: a.product_id,\n                      variant_id: a.variant_id,\n                      quantity: a.quantity\n                    };\n                  }),\n                  marketplace: mpCart.lineItems.edges.map(function (a) {\n                    return {\n                      product_id: a.node.id,\n                      variant_id: a.node.variant.id,\n                      quantity: a.node.quantity\n                    };\n                  })\n                }\n              });\n\n            case 3:\n              upsertMatchRes = _context6.sent;\n              toaster.notify('Line items have been matched to cart items'); // setSelectedOrderIndex(null);\n\n              setCartLoading(false);\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n    return _overwrite.apply(this, arguments);\n  }\n\n  function doPurchase(_x8, _x9) {\n    return _doPurchase.apply(this, arguments);\n  }\n\n  function _doPurchase() {\n    _doPurchase = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee7(ids, purchaseOrderMutation) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return purchaseOrderMutation({\n                variables: {\n                  ids: ids\n                }\n              });\n\n            case 2:\n              res = _context7.sent;\n\n            case 3:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n    return _doPurchase.apply(this, arguments);\n  }\n\n  function createCheck(_x10, _x11, _x12, _x13) {\n    return _createCheck.apply(this, arguments);\n  }\n\n  function _createCheck() {\n    _createCheck = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee8(input, orderID, createCheckoutFunc, updateOrderFunc) {\n      var varCheck, newCheck, res;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return createCheckoutFunc({\n                variables: {\n                  input: input\n                }\n              });\n\n            case 2:\n              varCheck = _context8.sent;\n              newCheck = varCheck.data.createCheckout.checkout;\n              _context8.next = 6;\n              return updateOrderFunc({\n                variables: {\n                  id: orderID,\n                  mpCart: _JSON$stringify(newCheck)\n                }\n              });\n\n            case 6:\n              res = _context8.sent;\n\n            case 7:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n    return _createCheck.apply(this, arguments);\n  }\n\n  function addVariant(_x14, _x15, _x16, _x17, _x18) {\n    return _addVariant.apply(this, arguments);\n  }\n\n  function _addVariant() {\n    _addVariant = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee9(id, quantity, checkoutID, checkoutLineItemsAddFunc, updateOrderFunc) {\n      var varCheck, newCheck, res;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              toaster.success('checkout does exist');\n              _context9.next = 3;\n              return checkoutLineItemsAddFunc({\n                variables: {\n                  checkoutId: checkoutID,\n                  lineItems: [{\n                    variantId: id,\n                    quantity: quantity\n                  }]\n                }\n              });\n\n            case 3:\n              varCheck = _context9.sent;\n              newCheck = varCheck.data.checkoutLineItemsAdd.checkout;\n              _context9.next = 7;\n              return updateOrderFunc({\n                variables: {\n                  id: selectedOrderIndex,\n                  mpCart: _JSON$stringify(newCheck)\n                }\n              });\n\n            case 7:\n              res = _context9.sent;\n\n            case 8:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n    return _addVariant.apply(this, arguments);\n  }\n\n  function _addZincItem2(_x19, _x20, _x21, _x22, _x23, _x24, _x25) {\n    return _addZincItem.apply(this, arguments);\n  }\n\n  function _addZincItem() {\n    _addZincItem = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee10(id, quantity, title, src, price, cart, updateOrderFunc) {\n      var find, newQ, res, _res2;\n\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              // if (cart && cart.products && cart.products.length) {\n              // const find = cart.products.find(obj => {\n              //   return obj.product_id === id;\n              // });\n              // }\n              find = cart && cart.products && cart.products.length && cart.products.find(function (obj) {\n                return obj.product_id === id;\n              });\n\n              if (!(cart && cart.products && cart.products.length && find !== undefined)) {\n                _context10.next = 12;\n                break;\n              }\n\n              console.log(true);\n              console.log(find);\n              newQ = find.quantity + quantity;\n              find.quantity = newQ;\n              console.log(find);\n              _context10.next = 9;\n              return updateOrderFunc({\n                variables: {\n                  id: selectedOrderIndex,\n                  zincCart: _JSON$stringify({\n                    products: [find].concat(_toConsumableArray(cart.products.filter(function (a) {\n                      return a.product_id !== id;\n                    })))\n                  })\n                }\n              });\n\n            case 9:\n              res = _context10.sent;\n              _context10.next = 16;\n              break;\n\n            case 12:\n              console.log(false);\n              _context10.next = 15;\n              return updateOrderFunc({\n                variables: {\n                  id: selectedOrderIndex,\n                  zincCart: _JSON$stringify({\n                    products: [{\n                      product_id: id,\n                      quantity: quantity,\n                      title: title,\n                      price: price,\n                      src: src\n                    }].concat(_toConsumableArray(cart && cart.products && cart.products.length ? cart.products : []))\n                  })\n                }\n              });\n\n            case 15:\n              _res2 = _context10.sent;\n\n            case 16:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n    return _addZincItem.apply(this, arguments);\n  }\n\n  function removeMPItem(_x26, _x27, _x28, _x29) {\n    return _removeMPItem.apply(this, arguments);\n  }\n\n  function _removeMPItem() {\n    _removeMPItem = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee11(lineItemIds, checkoutID, checkoutLineItemsRemoveFunc, updateOrderFunc) {\n      var varCheck, res;\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.next = 2;\n              return checkoutLineItemsRemoveFunc.mutation({\n                variables: {\n                  checkoutId: checkoutID,\n                  lineItemIds: lineItemIds\n                }\n              });\n\n            case 2:\n              varCheck = _context11.sent;\n              _context11.next = 5;\n              return updateOrderFunc({\n                variables: {\n                  id: selectedOrderIndex,\n                  mpCart: _JSON$stringify(varCheck.data.checkoutLineItemsRemove.checkout)\n                }\n              });\n\n            case 5:\n              res = _context11.sent;\n\n            case 6:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n    return _removeMPItem.apply(this, arguments);\n  }\n\n  function updateMPItem(_x30, _x31, _x32, _x33) {\n    return _updateMPItem.apply(this, arguments);\n  }\n\n  function _updateMPItem() {\n    _updateMPItem = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee12(lineItems, checkoutID, checkoutLineItemsUpdateFunc, updateOrderFunc) {\n      var varCheck, res;\n      return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.next = 2;\n              return checkoutLineItemsUpdateFunc.mutation({\n                variables: {\n                  checkoutId: checkoutID,\n                  lineItems: lineItems\n                }\n              });\n\n            case 2:\n              varCheck = _context12.sent;\n              _context12.next = 5;\n              return updateOrderFunc({\n                variables: {\n                  id: selectedOrderIndex,\n                  mpCart: _JSON$stringify(varCheck.data.checkoutLineItemsUpdate.checkout)\n                }\n              });\n\n            case 5:\n              res = _context12.sent;\n\n            case 6:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }));\n    return _updateMPItem.apply(this, arguments);\n  }\n\n  function play() {\n    if (firstQ === 1) {\n      setFirstQ(100);\n      setOpen(false);\n      setSkip(0);\n    } else {\n      setFirstQ(1);\n      setOpen(true);\n    } // setSkip(0);\n\n  }\n  /* eslint-disable */\n\n\n  var orderListMutations = {\n    purchaseOrder: function purchaseOrder(_ref) {\n      var render = _ref.render;\n      return React.createElement(Mutation, {\n        mutation: PURCHASE_ORDER_MUTATION,\n        refetchQueries: function refetchQueries() {\n          return [{\n            query: ORDER_QUERY,\n            variables: {\n              skip: skip,\n              first: firstQ,\n              orderBy: orderBy,\n              processed: \"FALSE\"\n            }\n          }, {\n            query: PAGINATION_QUERY\n          }];\n        }\n      }, function (mutation, result) {\n        return render({\n          mutation: mutation,\n          result: result\n        });\n      });\n    },\n    deleteOrder: function deleteOrder(_ref2) {\n      var render = _ref2.render;\n      return React.createElement(Mutation, {\n        mutation: DELETE_ORDER,\n        refetchQueries: function refetchQueries() {\n          return [{\n            query: ORDER_QUERY,\n            variables: {\n              skip: skip,\n              first: firstQ,\n              orderBy: orderBy,\n              processed: \"FALSE\"\n            }\n          }, {\n            query: PAGINATION_QUERY\n          }];\n        }\n      }, function (mutation, result) {\n        return render({\n          mutation: mutation,\n          result: result\n        });\n      });\n    },\n    updateOrder: function updateOrder(_ref3) {\n      var render = _ref3.render;\n      return React.createElement(Mutation, {\n        mutation: UPDATE_ORDER_MUTATION,\n        refetchQueries: function refetchQueries() {\n          return [{\n            query: ORDER_QUERY,\n            variables: {\n              skip: skip,\n              first: firstQ,\n              orderBy: orderBy,\n              processed: \"FALSE\"\n            }\n          }, {\n            query: PAGINATION_QUERY\n          }];\n        }\n      }, function (mutation, result) {\n        return render({\n          mutation: mutation,\n          result: result\n        });\n      });\n    },\n    upsertMatch: function upsertMatch(_ref4) {\n      var render = _ref4.render;\n      return React.createElement(Mutation, {\n        mutation: UPSERT_MUTATION\n      }, function (mutation, result) {\n        return render({\n          mutation: mutation,\n          result: result\n        });\n      });\n    },\n    createCheckout: function createCheckout(_ref5) {\n      var render = _ref5.render;\n      return React.createElement(Mutation, {\n        mutation: CREATE_CHECKOUT_MUTATION,\n        refetchQueries: function refetchQueries() {\n          return [{\n            query: ORDER_QUERY,\n            variables: {\n              skip: 0,\n              processed: \"FALSE\"\n            }\n          }];\n        }\n      }, function (mutation, result) {\n        return render({\n          mutation: mutation,\n          result: result\n        });\n      });\n    },\n    checkoutLineItemsRemove: function checkoutLineItemsRemove(_ref6) {\n      var render = _ref6.render;\n      return React.createElement(Mutation, {\n        mutation: CHECKOUT_REMOVE_MUTATION,\n        refetchQueries: function refetchQueries() {\n          return [{\n            query: ORDER_QUERY,\n            variables: {\n              skip: 0\n            }\n          }];\n        }\n      }, function (mutation, result) {\n        return render({\n          mutation: mutation,\n          result: result\n        });\n      });\n    },\n    checkoutLineItemsUpdate: function checkoutLineItemsUpdate(_ref7) {\n      var render = _ref7.render;\n      return React.createElement(Mutation, {\n        mutation: CHECKOUT_UPDATE_MUTATION,\n        refetchQueries: function refetchQueries() {\n          return [{\n            query: ORDER_QUERY,\n            variables: {\n              skip: 0\n            }\n          }];\n        }\n      }, function (mutation, result) {\n        return render({\n          mutation: mutation,\n          result: result\n        });\n      });\n    }\n  };\n  /* eslint-disable */\n\n  return React.createElement(React.Fragment, null, React.createElement(Pane, {\n    display: \"flex\",\n    paddingTop: 16,\n    paddingBottom: 16\n  }, React.createElement(Pane, {\n    flex: 1,\n    alignItems: \"center\",\n    display: \"flex\"\n  }, React.createElement(Heading, {\n    size: 700\n  }, \"Pending Orders\"))), React.createElement(Pane, {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    marginLeft: \"-2rem\",\n    marginTop: \"-2rem\"\n  }, React.createElement(Adopt, {\n    mapper: orderListMutations\n  }, function (_ref8) {\n    var purchaseOrder = _ref8.purchaseOrder,\n        deleteOrder = _ref8.deleteOrder,\n        updateOrder = _ref8.updateOrder,\n        upsertMatch = _ref8.upsertMatch,\n        _createCheckout = _ref8.createCheckout,\n        checkoutLineItemsRemove = _ref8.checkoutLineItemsRemove,\n        _checkoutLineItemsUpdate = _ref8.checkoutLineItemsUpdate;\n    return React.createElement(Query, {\n      query: ORDER_QUERY,\n      variables: {\n        skip: skip,\n        first: firstQ,\n        orderBy: orderBy,\n        processed: \"FALSE\"\n      }\n    }, function (_ref9) {\n      var loading = _ref9.loading,\n          error = _ref9.error,\n          data = _ref9.data;\n      if (loading) return React.createElement(React.Fragment, null, React.createElement(Pane, Layout, React.createElement(Pane, CardStyle, React.createElement(Pane, {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"50vh\"\n      }, React.createElement(Spinner, {\n        size: 80\n      })))), React.createElement(Pane, Layout, React.createElement(Pane, _extends({}, CardStyle, {\n        padding: 10\n      }), React.createElement(Alert, {\n        intent: \"warning\",\n        title: \"Please choose an order or a line item.\"\n      }))));\n      if (error) return \"Error! \".concat(error.message);\n      var orders = data.orders;\n      var theOrder = orders.filter(function (order) {\n        return order.id === selectedOrderIndex;\n      })[0];\n      return React.createElement(React.Fragment, null, React.createElement(Pane, Layout, React.createElement(Pane, CardStyle, React.createElement(Pane, {\n        display: \"flex\",\n        paddingX: \"1em\",\n        paddingY: \".8em\",\n        alignItems: \"center\"\n      }, React.createElement(Query, {\n        query: PAGINATION_QUERY\n      }, function (_ref10) {\n        var data = _ref10.data,\n            loading = _ref10.loading,\n            error = _ref10.error;\n        var count = data.ordersConnection ? data.ordersConnection.aggregate.count : 0;\n        return React.createElement(React.Fragment, null, firstQ === 1 ? React.createElement(Heading, {\n          size: 100\n        }, \"Order \", skip + 1, \" of \", count) : React.createElement(Heading, {\n          size: 100\n        }, count, \" Orders\"), React.createElement(Pane, {\n          marginLeft: \"auto\",\n          display: \"flex\"\n        }, React.createElement(Button, {\n          intent: \"none\",\n          height: 20,\n          marginRight: 5,\n          onClick: function onClick() {\n            return setOrderBy(orderBy === \"createdAt_DESC\" ? \"createdAt_ASC\" : \"createdAt_DESC\");\n          }\n        }, orderBy.split(\"_\")[1]), React.createElement(Button, {\n          intent: \"success\",\n          height: 20,\n          marginRight: 5,\n          onClick: function onClick() {\n            return play();\n          }\n        }, firstQ !== 1 ? \"Play\" : \"Show All\", firstQ !== 1 && React.createElement(Icon, {\n          size: 13,\n          icon: \"play\",\n          marginRight: -4,\n          marginLeft: 3\n        })), firstQ === 1 ? React.createElement(Button, {\n          intent: \"warning\",\n          height: 20,\n          onClick: function onClick() {\n            return setSkip(skip + 1);\n          },\n          disabled: firstQ !== 1 || skip + 1 === count\n        }, \"Skip\", React.createElement(Icon, {\n          size: 13,\n          icon: \"double-chevron-right\",\n          marginRight: -4,\n          marginLeft: 3\n        })) : React.createElement(Mutation, {\n          mutation: PURCHASE_ORDER_MUTATION,\n          refetchQueries: function refetchQueries() {\n            return [{\n              query: ORDER_QUERY,\n              variables: {\n                skip: skip,\n                first: firstQ,\n                orderBy: orderBy\n              }\n            }, {\n              query: PAGINATION_QUERY\n            }];\n          }\n        }, function (purchaseOrder, _ref11) {\n          var error = _ref11.error,\n              loading = _ref11.loading;\n          return React.createElement(Button, {\n            intent: \"warning\",\n            height: 20,\n            disabled: firstQ !== 1 || skip + 1 === count,\n            isLoading: loading // onClick={() => {\n            //   doPurchase(\n            //     orders\n            //       .filter(\n            //         order =>\n            //           order.mpCart &&\n            //           JSON.parse(order.mpCart)\n            //             .length > 0 &&\n            //           JSON.parse(\n            //             order.mpCart\n            //           )[0].status === \"matched\"\n            //       )\n            //       .map(a => a.id),\n            //     purchaseOrder\n            //   );\n            //   setSkip(skip + 1);\n            // }}\n\n          }, \"Multi |\", \" \");\n        })));\n      })), orders.length ? orders.map(function (order) {\n        return React.createElement(Pane, {\n          key: order.id\n        }, React.createElement(Pane, {\n          opacity: processingOrder === order.id && \"0.2\",\n          width: \"100%\",\n          height: \"100%\",\n          position: \"relative\"\n        }, processingOrder === order.id && React.createElement(Pane, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"100%\"\n        }, React.createElement(Spinner, {\n          size: 80\n        })), React.createElement(Pane, {\n          borderTop: \"0.1rem solid #dfe3e8\"\n        }, React.createElement(Pane, {\n          borderLeft: \"3px solid \".concat(selectedOrderIndex === order.id ? \"#007489\" : \"transparent\")\n        }, React.createElement(OrderListItem, _extends({}, order, {\n          updateIndex: function updateIndex(arg) {\n            return _currentOrder(arg);\n          },\n          open: open // updateLine={arg => _currentLineItem(arg)}\n          // createCheckout={createCheckout.mutation}\n          ,\n          createCheckout: function createCheckout(a) {\n            return createCheck(a, order.id, _createCheckout.mutation, updateOrder.mutation);\n          },\n          key: order.id,\n          index: order.id // selectedLineIndex={selectedLineIndex}\n          ,\n          selectedOrderIndex: selectedOrderIndex // disabled={selectedOrderIndex || loading}\n          ,\n          disabled: !(!selectedOrderIndex || selectedOrderIndex === order.id),\n          buttons: React.createElement(React.Fragment, null, React.createElement(IconButton, {\n            height: 20,\n            appearance: \"minimal\",\n            inent: \"danger\",\n            icon: \"cross\",\n            iconSize: 15,\n            marginLeft: 6,\n            pointerEvents: \"visible\",\n            onClick:\n            /*#__PURE__*/\n            function () {\n              var _ref12 = _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee(e) {\n                var res;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        e.stopPropagation();\n                        setProcessingOrder(order.id);\n                        _context.next = 4;\n                        return deleteOrder.mutation({\n                          variables: {\n                            id: order.id\n                          }\n                        });\n\n                      case 4:\n                        res = _context.sent;\n                        setProcessingOrder(null);\n\n                      case 6:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x34) {\n                return _ref12.apply(this, arguments);\n              };\n            }()\n          }), React.createElement(User, null, function (_ref13) {\n            var me = _ref13.data.me;\n            return React.createElement(IconButton, {\n              height: 20,\n              appearance: \"minimal\",\n              icon: \"tick\",\n              iconSize: 15,\n              marginLeft: 6,\n              pointerEvents: loading ? \"none\" : \"visible\",\n              onClick:\n              /*#__PURE__*/\n              function () {\n                var _ref14 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee2(e) {\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          e.stopPropagation();\n                          setProcessingOrder(order.id);\n                          setSelectedOrderIndex(null);\n\n                          if (!(JSON.parse(order.mpCart).lineItems.edges.length > 0)) {\n                            _context2.next = 8;\n                            break;\n                          }\n\n                          _context2.next = 6;\n                          return doPurchase([order.id], purchaseOrder.mutation);\n\n                        case 6:\n                          _context2.next = 15;\n                          break;\n\n                        case 8:\n                          if (!(JSON.parse(order.zincCart).products.length > 0)) {\n                            _context2.next = 14;\n                            break;\n                          }\n\n                          toaster.success(\"zinc called\"); // const update = await updateOrder.mutation({\n                          //   variables: {\n                          //     id: 'cjvhp95z5000n0772cx2kqwnv',\n                          //     processed: true,\n                          //   },\n                          // });\n\n                          _context2.next = 12;\n                          return placeZincOrder({\n                            retailer: \"amazon\",\n                            products: JSON.parse(order.zincCart).products,\n                            shipping_address: {\n                              first_name: order.first_name,\n                              last_name: order.last_name,\n                              address_line1: order.streetAddress1,\n                              address_line2: order.streetAddress2,\n                              zip_code: order.zip,\n                              city: order.city,\n                              state: order.state,\n                              country: \"US\",\n                              phone_number: \"281-337-9862\"\n                            },\n                            addax: true,\n                            is_gift: true,\n                            gift_message: \"Here is your package, \".concat(order.first_name, \"! Enjoy!\"),\n                            shipping: {\n                              order_by: \"price\",\n                              max_days: 5,\n                              max_price: 1000\n                            },\n                            webhooks: {\n                              request_succeeded: \"https://webhook.site/3d977945-5b89-4734-8a64-146d321a100c\",\n                              request_failed: \"https://webhook.site/3d977945-5b89-4734-8a64-146d321a100c\",\n                              tracking_obtained: \"https://webhook.site/3d977945-5b89-4734-8a64-146d321a100c\"\n                            },\n                            client_notes: {\n                              shopify_order_id: order.orderId,\n                              os_order_id: order.id\n                            }\n                          }, me.zincToken, updateOrder.mutation);\n\n                        case 12:\n                          _context2.next = 15;\n                          break;\n\n                        case 14:\n                          toaster.success(\"not called\");\n\n                        case 15:\n                          setProcessingOrder(null);\n\n                        case 16:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n\n                return function (_x35) {\n                  return _ref14.apply(this, arguments);\n                };\n              }()\n            });\n          }))\n        }))))));\n      }) : React.createElement(Pane, {\n        background: \"tint2\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        borderRadius: 3\n      }, React.createElement(Heading, {\n        margin: \"1em\",\n        size: 600\n      }, \"Your pending orders will appear here.\")))), React.createElement(Pane, Layout, selectedOrderIndex ? React.createElement(Pane, null, React.createElement(Pane, _extends({}, CardStyle, {\n        padding: 15,\n        opacity: cartLoading && \"0.2\",\n        width: \"100%\",\n        height: \"100%\"\n      }), cartLoading && React.createElement(Pane, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        margin: \"auto\"\n      }, React.createElement(Pane, {\n        position: \"fixed\"\n      }, React.createElement(Spinner, {\n        size: 80\n      }))), React.createElement(Pane, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        fontWeight: 600,\n        background: \"white\"\n      }, React.createElement(React.Fragment, null, React.createElement(Heading, {\n        size: 400\n      }, theOrder.orderName), React.createElement(Pane, {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginLeft: 4\n      }, React.createElement(Text, {\n        size: 300,\n        fontWeight: 500,\n        marginX: 10,\n        color: \"#7B8B9A\",\n        className: \"hover\",\n        cursor: \"pointer\",\n        onClick: function onClick() {\n          // setSelectedLineIndex([]);\n          setSelectedOrderIndex(null);\n        }\n      }, \"Empty\"), React.createElement(Button, {\n        intent: \"primary\",\n        height: 20,\n        onClick: function onClick() {\n          return overwrite(JSON.parse(theOrder.mpCart), theOrder.lineItems, upsertMatch.mutation);\n        },\n        disabled: theOrder.mpCart && theOrder.mpCart.lineItems && theOrder.mpCart.lineItems.edges.length === 0 || !theOrder.mpCart\n      }, \"Match\")))), React.createElement(Pane, null, React.createElement(Pane, {\n        display: \"flex\"\n      }, React.createElement(Text, {\n        contenteditable: \"true\",\n        size: 300,\n        marginRight: 4\n      }, theOrder.first_name), React.createElement(Text, {\n        contenteditable: \"true\",\n        size: 300\n      }, theOrder.last_name)), React.createElement(Text, {\n        contenteditable: \"true\",\n        size: 300\n      }, theOrder.streetAddress1), theOrder.streetAddress2 && React.createElement(Text, {\n        contenteditable: \"true\",\n        size: 300\n      }, theOrder.streetAddress2), React.createElement(Pane, {\n        display: \"flex\"\n      }, React.createElement(Text, {\n        contenteditable: \"true\",\n        size: 300,\n        marginRight: 4\n      }, theOrder.city), React.createElement(Text, {\n        contenteditable: \"true\",\n        size: 300,\n        marginRight: 4\n      }, theOrder.state), React.createElement(Text, {\n        contenteditable: \"true\",\n        size: 300\n      }, theOrder.zip))), React.createElement(Pane, {\n        paddingTop: 10\n      }, React.createElement(Pane, {\n        marginLeft: \"-3px\",\n        background: \"#F7F9FD\",\n        border: \"muted\",\n        paddingY: \".7em\",\n        paddingX: \"1em\"\n      }, React.createElement(Pane, {\n        marginBottom: 10\n      }, React.createElement(Text, {\n        size: 400,\n        fontWeight: 500,\n        color: \"#084B8A\"\n      }, \"Line Items\")), theOrder.lineItems.map(function (a) {\n        return React.createElement(OrderLine, {\n          key: a.id,\n          item: a.node ? a.node : a\n        });\n      }))), React.createElement(MPCart, {\n        checkout: JSON.parse(theOrder.mpCart),\n        removeItem: function removeItem(a) {\n          return removeMPItem(a, JSON.parse(theOrder.mpCart).id, checkoutLineItemsRemove, updateOrder.mutation);\n        },\n        checkoutLineItemsUpdate: function checkoutLineItemsUpdate(a) {\n          return updateMPItem(a, JSON.parse(theOrder.mpCart).id, _checkoutLineItemsUpdate, updateOrder.mutation);\n        },\n        loading: updateOrder.result.loading\n      }), React.createElement(ZincCart, {\n        cart: JSON.parse(theOrder.zincCart),\n        removeItem:\n        /*#__PURE__*/\n        function () {\n          var _ref15 = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee3(productID) {\n            var res;\n            return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.next = 2;\n                    return updateOrder.mutation({\n                      variables: {\n                        id: selectedOrderIndex,\n                        zincCart: _JSON$stringify({\n                          products: JSON.parse(theOrder.zincCart).products.filter(function (a) {\n                            return a.product_id !== productID;\n                          })\n                        })\n                      }\n                    });\n\n                  case 2:\n                    res = _context3.sent;\n\n                  case 3:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee3);\n          }));\n\n          return function (_x36) {\n            return _ref15.apply(this, arguments);\n          };\n        }(),\n        checkoutLineItemsUpdate:\n        /*#__PURE__*/\n        function () {\n          var _ref16 = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee4(productID, quantity) {\n            var res, find, newQ, _res;\n\n            return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    if (!(quantity === 0)) {\n                      _context4.next = 6;\n                      break;\n                    }\n\n                    _context4.next = 3;\n                    return updateOrder.mutation({\n                      variables: {\n                        id: selectedOrderIndex,\n                        zincCart: _JSON$stringify({\n                          products: JSON.parse(theOrder.zincCart).products.filter(function (a) {\n                            return a.product_id !== productID;\n                          })\n                        })\n                      }\n                    });\n\n                  case 3:\n                    res = _context4.sent;\n                    _context4.next = 12;\n                    break;\n\n                  case 6:\n                    find = JSON.parse(theOrder.zincCart).products.find(function (obj) {\n                      return obj.product_id === productID;\n                    });\n                    newQ = quantity;\n                    find.quantity = newQ;\n                    _context4.next = 11;\n                    return updateOrder.mutation({\n                      variables: {\n                        id: selectedOrderIndex,\n                        zincCart: _JSON$stringify({\n                          products: [find].concat(_toConsumableArray(JSON.parse(theOrder.zincCart).products.filter(function (a) {\n                            return a.product_id !== productID;\n                          })))\n                        })\n                      }\n                    });\n\n                  case 11:\n                    _res = _context4.sent;\n\n                  case 12:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, _callee4);\n          }));\n\n          return function (_x37, _x38) {\n            return _ref16.apply(this, arguments);\n          };\n        }(),\n        loading: updateOrder.result.loading\n      }))) : React.createElement(Pane, _extends({}, CardStyle, {\n        padding: 10\n      }), React.createElement(Alert, {\n        intent: \"warning\",\n        title: \"Please choose an order or a line item.\"\n      })), React.createElement(Mutation, {\n        mutation: CHECKOUT_ADD_MUTATION\n      }, function (checkoutLineItemsAdd, _ref17) {\n        var error = _ref17.error,\n            loading = _ref17.loading;\n        return React.createElement(Find, {\n          headerSize: 600,\n          atcDisabled: !theOrder,\n          addMPItem: function addMPItem(a, b) {\n            if (theOrder.mpCart && JSON.parse(theOrder.mpCart).id) {\n              addVariant(a, b, JSON.parse(theOrder.mpCart).id, checkoutLineItemsAdd, updateOrder.mutation);\n            } else {\n              toaster.success(\"checkout does not exist\");\n              createCheck({\n                shippingAddress: {\n                  address1: theOrder.streetAddress1,\n                  address2: theOrder.streetAddress2 && theOrder.streetAddress2,\n                  city: theOrder.city,\n                  province: theOrder.state,\n                  country: \"US\",\n                  zip: theOrder.zip,\n                  firstName: theOrder.first_name,\n                  lastName: theOrder.last_name\n                },\n                lineItems: [{\n                  variantId: a,\n                  quantity: b\n                }]\n              }, theOrder.id, _createCheckout.mutation, updateOrder.mutation);\n            }\n          },\n          addZincItem: function addZincItem(a, b, c, d, e) {\n            return _addZincItem2(a, b, c, d, e, JSON.parse(theOrder.zincCart), updateOrder.mutation);\n          }\n        });\n      })));\n    });\n  })));\n}\n\nexport default PendingOrders;","map":null,"metadata":{},"sourceType":"module"}