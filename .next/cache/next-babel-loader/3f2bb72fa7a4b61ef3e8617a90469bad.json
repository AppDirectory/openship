{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getItemGroup($itemID: String) {\\n    getItemGroup(itemID: $itemID) {\\n      item\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Box, Button, InputGroup, InputLeftElement, Input, Icon, Heading, Text, useToast } from '@chakra-ui/core';\nimport { CURRENT_USER_QUERY } from '../user/User';\nimport Pagination from '../common/Pagination';\nimport { CardStyle } from '../common/DefaultStyles';\nimport MarketplaceSearch from './MarketplaceSearch';\nimport ZincSearch from './ZincSearch';\nimport ShopifySearch from './ShopifySearch';\nimport { CHANNELS_QUERY, channelsQueryVars } from '../layout/Page';\nexport var getItemGroup = gql(_templateObject());\nvar sortOptions = [{\n  label: 'Lowest Price',\n  value: 'price'\n}, {\n  label: 'Highest Price',\n  value: '-price'\n}, {\n  label: 'Best Match',\n  value: 'match'\n}];\nexport var option = function option(name, options, update, selected) {\n  return __jsx(Box, {\n    marginBottom: 2,\n    marginRight: 5\n  }, __jsx(Heading, {\n    fontSize: \"sm\",\n    color: \"text\",\n    fontWeight: 500,\n    marginBottom: 0\n  }, name), __jsx(Box, {\n    display: \"flex\"\n  }, options.length > 0 ? options.map(function (a, index) {\n    return __jsx(Box, {\n      id: a,\n      key: index,\n      p: 1,\n      mr: 2,\n      mt: 2,\n      borderRadius: 3,\n      bg: a === selected ? '#e2e9f2' : 'transparent',\n      onClick: function onClick() {\n        return update(a);\n      },\n      cursor: \"pointer\"\n    }, __jsx(Heading, {\n      fontSize: \"xs\",\n      fontWeight: 500,\n      px: 1,\n      color: a === selected ? '#1070ca' : '#425a70',\n      letterSpacing: \"wide\",\n      textTransform: \"uppercase\"\n    }, a));\n  }) : __jsx(Text, {\n    mt: 2,\n    fontSize: \"sm\",\n    color: \"text\"\n  }, \"No Channels Added\")));\n};\n\nvar Find = function Find(_ref) {\n  var headerSize = _ref.headerSize,\n      atcDisabled = _ref.atcDisabled,\n      addMPItem = _ref.addMPItem,\n      _addCustomItem = _ref.addCustomItem,\n      addZincItem = _ref.addZincItem;\n  var allChannels = useQuery(CHANNELS_QUERY, {\n    variables: channelsQueryVars\n  });\n  var channels = allChannels.data.channels,\n      channelsError = allChannels.error,\n      channelsLoading = allChannels.loading;\n\n  var _useState = useState('price'),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var _useState2 = useState(''),\n      searchBar = _useState2[0],\n      setSearchBar = _useState2[1];\n\n  var _useState3 = useState(''),\n      searchEntry = _useState3[0],\n      setSearchEntry = _useState3[1];\n\n  var _useState4 = useState(10),\n      limit = _useState4[0],\n      setLimit = _useState4[1];\n\n  var _useState5 = useState(0),\n      pageNum = _useState5[0],\n      setPageNum = _useState5[1];\n\n  var _useState6 = useState(''),\n      min = _useState6[0],\n      setMin = _useState6[1];\n\n  var _useState7 = useState(''),\n      max = _useState7[0],\n      setMax = _useState7[1];\n\n  var _useState8 = useState(null),\n      price = _useState8[0],\n      setPrice = _useState8[1];\n\n  var _useState9 = useState('USD'),\n      priceCurrency = _useState9[0],\n      setPriceCurrency = _useState9[1];\n\n  var _useState10 = useState('US'),\n      itemLocationCountry = _useState10[0],\n      setItemLocationCountry = _useState10[1];\n\n  var _useState11 = useState([]),\n      include = _useState11[0],\n      setInclude = _useState11[1];\n\n  var _useState12 = useState([]),\n      exclude = _useState12[0],\n      setExclude = _useState12[1];\n\n  var _useState13 = useState(channels.length ? channels[0].name : ''),\n      selectedChannel = _useState13[0],\n      setSelectedChannel = _useState13[1];\n\n  var _useQuery = useQuery(CURRENT_USER_QUERY),\n      me = _useQuery.data.me;\n\n  var toast = useToast();\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    display: \"flex\",\n    py: 4\n  }, __jsx(Box, {\n    flex: 1,\n    alignItems: \"center\",\n    display: \"flex\"\n  }, __jsx(Heading, {\n    fontSize: \"2xl\",\n    color: \"text\",\n    fontWeight: 500\n  }, \"Marketplace\"))), __jsx(Box, _extends({}, CardStyle, {\n    background: \"white\"\n  }), function () {\n    if (!me) return null;\n\n    if (me.buyer && me.buyer.status) {\n      return __jsx(React.Fragment, null, __jsx(Box, {\n        display: \"flex\",\n        paddingX: \"1em\",\n        paddingY: \"1em\",\n        flexWrap: \"wrap\"\n      }, __jsx(Pagination, {\n        leftDisabled: pageNum === 0,\n        onLeft: function onLeft() {\n          return setPageNum(pageNum - 1);\n        },\n        onRight: function onRight() {\n          return setPageNum(pageNum + 1);\n        }\n      }), __jsx(Box, {\n        flex: 1\n      }, __jsx(InputGroup, {\n        width: \"100%\",\n        borderColor: \"gray.300\"\n      }, __jsx(InputLeftElement, {\n        children: __jsx(Icon, {\n          name: \"search\",\n          color: \"gray.300\"\n        })\n      }), __jsx(Input, {\n        value: searchBar,\n        onChange: function onChange(e) {\n          setSearchBar(e.target.value);\n          setPageNum(0);\n        },\n        onKeyPress: function onKeyPress(e) {\n          if (e.key === 'Enter') {\n            setSearchEntry(searchBar);\n          }\n        },\n        placeholder: \"Search\"\n      })))), function () {\n        if (channelsError || !channels) return null;\n        return __jsx(React.Fragment, null, __jsx(Box, {\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          background: \"#f5f5f5\",\n          paddingY: \".7em\",\n          paddingX: \"1em\"\n        }, option('Channel', channels.map(function (a) {\n          return a.name;\n        }), function (a) {\n          return setSelectedChannel(a);\n        }, selectedChannel), option('Location', ['US', 'CN', 'All'], function (a) {\n          return setItemLocationCountry(a);\n        }, itemLocationCountry), option('Items per page', [10, 50, 100], function (a) {\n          return setLimit(a);\n        }, limit)), channels.filter(function (channel) {\n          return channel.type === 'MARKETPLACE';\n        }).length > 0 && __jsx(MarketplaceSearch, {\n          search: searchEntry,\n          limit: limit,\n          sort: value,\n          pageNum: pageNum,\n          exclude: exclude,\n          include: include,\n          priceCurrency: priceCurrency,\n          price: price,\n          itemLocationCountry: itemLocationCountry,\n          atcDisabled: atcDisabled,\n          addMPItem: addMPItem\n        }), channels.filter(function (channel) {\n          return channel.type === 'ZINC';\n        }).length > 0 && __jsx(ZincSearch, {\n          addZincItem: addZincItem,\n          atcDisabled: atcDisabled,\n          searchEntry: searchEntry,\n          token: channels.filter(function (c) {\n            return c.type === 'ZINC';\n          })[0].settings.key\n        }), channels.filter(function (channel) {\n          return channel.type === 'SHOPIFY';\n        }).length > 0 && __jsx(ShopifySearch, {\n          addCustomItem: function addCustomItem(a, b) {\n            return _addCustomItem(a, b, channels.filter(function (channel) {\n              return channel.type === 'SHOPIFY';\n            })[0].settings.shopURL, channels.filter(function (channel) {\n              return channel.type === 'SHOPIFY';\n            })[0].settings.key);\n          },\n          checkout: function checkout() {\n            return toast({\n              position: 'top-right',\n              title: \"Checkout\",\n              status: 'success',\n              duration: 2000,\n              isClosable: true\n            });\n          },\n          client: \"Marketplace\",\n          atcDisabled: atcDisabled,\n          searchEntry: searchEntry,\n          apiKey: channels.filter(function (channel) {\n            return channel.type === 'SHOPIFY';\n          })[0].settings.key,\n          url: channels.filter(function (channel) {\n            return channel.type === 'SHOPIFY';\n          })[0].settings.shopURL\n        }));\n      }());\n    }\n\n    return __jsx(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: \"100%\",\n      height: \"200px\"\n    }, __jsx(Link, {\n      href: \"/settings\"\n    }, __jsx(\"a\", null, __jsx(Button, {\n      background: \"#DDEBF7\",\n      borderRadius: 3\n    }, __jsx(Heading, {\n      fontSize: \"lg\",\n      fontWeight: 700,\n      color: \"#1070CA\"\n    }, \"APPLY FOR BETA ACCESS\")))));\n  }()));\n};\n\nexport default Find;","map":null,"metadata":{},"sourceType":"module"}