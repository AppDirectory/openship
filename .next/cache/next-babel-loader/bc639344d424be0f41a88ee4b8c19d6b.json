{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _JSXStyle from \"styled-jsx/style\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation createCustomer($userInput: Json!) {\\n    createCustomer(userInput: $userInput) {\\n      cardObj\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { CardElement, StripeProvider, Elements, injectStripe } from 'react-stripe-elements';\nimport { Pane, Heading, TextInput } from 'evergreen-ui';\nimport { gql } from 'apollo-boost';\nimport { Mutation } from 'react-apollo';\nimport Button from '../common/Button';\nimport { CURRENT_USER_QUERY } from '../user/User';\n\nvar createOptions = function createOptions(fontSize, padding) {\n  return {\n    style: {\n      base: {\n        fontSize: fontSize,\n        color: '#424770',\n        letterSpacing: '0.025em',\n        fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n        '::placeholder': {\n          color: '#aab7c4'\n        },\n        padding: padding\n      },\n      invalid: {\n        color: '#9e2146'\n      }\n    }\n  };\n};\n\nvar CREATE_CUSTOMER = gql(_templateObject());\n\nvar _CardForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_CardForm, _React$Component);\n\n  function _CardForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, _CardForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(_CardForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      name: '',\n      addressLine1: '',\n      addressLine2: '',\n      addressCity: '',\n      addressState: '',\n      addressZip: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (ev, createCustomerFunc) {\n      ev.preventDefault();\n      var stripe = _this.props.stripe;\n\n      if (stripe) {\n        stripe.createToken(_objectSpread({}, _this.state)).then(\n        /*#__PURE__*/\n        function () {\n          var _ref = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee(payload) {\n            var customer;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return createCustomerFunc({\n                      variables: {\n                        userInput: {\n                          token: {\n                            id: payload.token.id\n                          }\n                        }\n                      }\n                    });\n\n                  case 2:\n                    customer = _context.sent;\n\n                  case 3:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      } else {}\n    });\n\n    return _this;\n  }\n\n  _createClass(_CardForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var fontSize = this.props.fontSize;\n      var _this$state = this.state,\n          name = _this$state.name,\n          addressLine1 = _this$state.addressLine1,\n          addressLine2 = _this$state.addressLine2;\n      return React.createElement(React.Fragment, null, React.createElement(_JSXStyle, {\n        id: \"3374452525\"\n      }, [\".card{box-shadow:none;}\", \".card:active{z-index:2;outline:none;box-shadow:inset 0 0 2px rgba(67,90,111,0.14), inset 0 0 0 1px #579ad9,0 0 0 3px rgba(16,112,202,0.14);z-index:2;outline:none;}\", \".card:selected{opacity:0.8;border-color:transparent;border:'none';}\", \".card:focus{z-index:2;outline:none;box-shadow:inset 0 0 2px rgba(67,90,111,0.14), inset 0 0 0 1px #579ad9,0 0 0 3px rgba(16,112,202,0.14);z-index:2;outline:none;}\"]), React.createElement(Mutation, {\n        mutation: CREATE_CUSTOMER,\n        refetchQueries: [{\n          query: CURRENT_USER_QUERY\n        }]\n      }, function (createCustomer, _ref2) {\n        var error = _ref2.error,\n            loading = _ref2.loading;\n        return React.createElement(\"form\", {\n          onSubmit: function onSubmit(e) {\n            return _this2.handleSubmit(e, createCustomer);\n          },\n          className: \"jsx-3374452525\"\n        }, React.createElement(Pane, {\n          padding: 16,\n          paddingBottom: 10\n        }, React.createElement(Heading, {\n          size: 400,\n          marginBottom: 4,\n          fontWeight: 500,\n          color: \"#425A70\"\n        }, \"Name\"), React.createElement(Pane, {\n          elevation: 1,\n          borderRadius: 3,\n          marginBottom: 10,\n          width: \"100%\"\n        }, React.createElement(TextInput, {\n          placeholder: \"James Michael\",\n          fontFamily: \"\\\"Helvetica Neue\\\", Helvetica, sans-serif\",\n          fontSize: 14,\n          letterSpacing: \"0.025em\",\n          background: \"#fff\",\n          borderRadius: 3,\n          width: \"100%\",\n          className: \"card\",\n          value: name,\n          onChange: function onChange(e) {\n            return _this2.setState({\n              name: e.target.value\n            });\n          }\n        })), React.createElement(Heading, {\n          size: 400,\n          marginBottom: 4,\n          fontWeight: 500,\n          color: \"#425A70\"\n        }, \"Address\"), React.createElement(Pane, {\n          elevation: 1,\n          borderRadius: 3,\n          marginBottom: 10,\n          width: \"100%\"\n        }, React.createElement(TextInput, {\n          placeholder: \"2 Infinite Loop\",\n          fontFamily: \"\\\"Helvetica Neue\\\", Helvetica, sans-serif\",\n          fontSize: 14,\n          letterSpacing: \"0.025em\",\n          background: \"#fff\",\n          borderRadius: 3,\n          width: \"100%\",\n          className: \"card\",\n          value: addressLine1,\n          onChange: function onChange(e) {\n            return _this2.setState({\n              addressLine1: e.target.value\n            });\n          }\n        })), React.createElement(Heading, {\n          size: 400,\n          marginBottom: 4,\n          fontWeight: 500,\n          color: \"#425A70\"\n        }, \"Suite (optional)\"), React.createElement(Pane, {\n          elevation: 1,\n          borderRadius: 3,\n          marginBottom: 10,\n          width: \"100%\"\n        }, React.createElement(TextInput, {\n          placeholder: \"Suite 5\",\n          fontFamily: \"\\\"Helvetica Neue\\\", Helvetica, sans-serif\",\n          fontSize: 14,\n          letterSpacing: \"0.025em\",\n          background: \"#fff\",\n          width: \"100%\",\n          borderRadius: 3,\n          className: \"card\",\n          value: addressLine2,\n          onChange: function onChange(e) {\n            return _this2.setState({\n              addressLine2: e.target.value\n            });\n          }\n        })), React.createElement(Heading, {\n          size: 400,\n          marginBottom: 4,\n          fontWeight: 500,\n          color: \"#425A70\"\n        }, \"Credit or Debit Card Number\"), React.createElement(Pane, {\n          marginBottom: 10,\n          background: \"#fff\",\n          padding: 8,\n          borderRadius: 3,\n          elevation: 1\n        }, React.createElement(CardElement, createOptions(fontSize)))), React.createElement(Button, {\n          height: 35,\n          fontSize: 15,\n          width: \"100%\" // intent=\"primary\"\n          ,\n          textColor: \"#fff\",\n          background: \"#1070ca\",\n          borderBottomLeftRadius: \"5\",\n          borderBottomRightRadius: \"5\",\n          borderTopLeftRadius: \"0\",\n          borderTopRightRadius: \"0\"\n        }, \"Submit\"));\n      }));\n    }\n  }]);\n\n  return _CardForm;\n}(React.Component);\n\nvar CardForm = injectStripe(_CardForm);\n/* eslint-disable */\n\nvar AddCard =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(AddCard, _React$Component2);\n\n  function AddCard() {\n    var _this3;\n\n    _classCallCheck(this, AddCard);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(AddCard).call(this));\n    _this3.state = {\n      renderElements: false\n    };\n    return _this3;\n  }\n\n  _createClass(AddCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        renderElements: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var renderElements = this.state.renderElements;\n      return renderElements && React.createElement(StripeProvider, {\n        apiKey: \"pk_test_8DBiS9gU5BhsZZ0KkXllJppT00APOMomgF\"\n      }, React.createElement(Elements, null, React.createElement(CardForm, {\n        fontSize: 12\n      })));\n    }\n  }]);\n\n  return AddCard;\n}(React.Component);\n/* eslint-disable */\n\n\nexport default AddCard;","map":null,"metadata":{},"sourceType":"module"}