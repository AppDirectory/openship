{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Box, Heading } from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\nimport { front, prodFront } from '../../config';\nimport Playground from './playground';\nimport Tracking from './apps/tracking';\nexport const SHOP_QUERY = gql`\n  query($domain: String!) {\n    shop(domain: $domain) {\n      name\n      accessToken\n      settings\n      user {\n        id\n      }\n    }\n  }\n`;\nexport default function Shop({\n  shop\n}) {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(SHOP_QUERY, {\n    variables: {\n      domain: shop\n    }\n  });\n  if (loading) return __jsx(\"p\", null, \"Loading...\");\n  if (!data) return __jsx(\"h1\", null, \"This shop is not added to your account.\");\n  if (error || !data.shop) return __jsx(\"h1\", null, \"Error loading shops: \", error);\n  const {\n    shop: {\n      name,\n      accessToken\n    }\n  } = data;\n  return __jsx(Box, {\n    width: \"100%\",\n    borderWidth: \"0\"\n  }, __jsx(Box, {\n    paddingY: 4\n  }, __jsx(Heading, {\n    fontSize: \"2xl\",\n    color: \"text\",\n    fontWeight: 500\n  }, name), __jsx(Heading, {\n    fontSize: \"lg\",\n    my: 4,\n    fontWeight: 500\n  }, \"Apps\"), __jsx(Box, {\n    display: \"flex\"\n  }, __jsx(Tracking, {\n    url: `${true ? front : prodFront}/${accessToken}/graphql`\n  })), __jsx(Heading, {\n    fontSize: \"lg\",\n    marginTop: 25,\n    fontWeight: 500\n  }, \"Playground\")), __jsx(Playground, {\n    accessToken: accessToken,\n    shop: shop,\n    url: `${true ? front : prodFront}/${accessToken}/graphql`\n  }));\n}\nShop.propTypes = {\n  shop: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/Users/junaid/openship/components/shop/Shop.js"],"names":["React","useQuery","gql","Box","Heading","PropTypes","front","prodFront","Playground","Tracking","SHOP_QUERY","Shop","shop","data","loading","error","variables","domain","name","accessToken","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,GAAT,EAAcC,OAAd,QAA6B,iBAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,cAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,OAAO,MAAMC,UAAU,GAAGR,GAAI;;;;;;;;;;;CAAvB;AAaP,eAAe,SAASS,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAwB;AACrC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2Bd,QAAQ,CAACS,UAAD,EAAa;AACpDM,IAAAA,SAAS,EAAE;AAAEC,MAAAA,MAAM,EAAEL;AAAV;AADyC,GAAb,CAAzC;AAIA,MAAIE,OAAJ,EAAa,OAAO,8BAAP;AACb,MAAI,CAACD,IAAL,EAAW,OAAO,4DAAP;AAEX,MAAIE,KAAK,IAAI,CAACF,IAAI,CAACD,IAAnB,EAAyB,OAAO,2CAA0BG,KAA1B,CAAP;AAEzB,QAAM;AACJH,IAAAA,IAAI,EAAE;AAAEM,MAAAA,IAAF;AAAQC,MAAAA;AAAR;AADF,MAEFN,IAFJ;AAIA,SACE,MAAC,GAAD;AAAK,IAAA,KAAK,EAAC,MAAX;AAAkB,IAAA,WAAW,EAAC;AAA9B,KACE,MAAC,GAAD;AAAK,IAAA,QAAQ,EAAE;AAAf,KAIE,MAAC,OAAD;AAAS,IAAA,QAAQ,EAAC,KAAlB;AAAwB,IAAA,KAAK,EAAC,MAA9B;AAAqC,IAAA,UAAU,EAAE;AAAjD,KACGK,IADH,CAJF,EAOE,MAAC,OAAD;AAAS,IAAA,QAAQ,EAAC,IAAlB;AAAuB,IAAA,EAAE,EAAE,CAA3B;AAA8B,IAAA,UAAU,EAAE;AAA1C,YAPF,EAUE,MAAC,GAAD;AAAK,IAAA,OAAO,EAAC;AAAb,KACE,MAAC,QAAD;AACE,IAAA,GAAG,EAAG,GACJ,OAAyCZ,KAAzC,GAAiDC,SAClD,IAAGY,WAAY;AAHlB,IADF,CAVF,EAiBE,MAAC,OAAD;AAAS,IAAA,QAAQ,EAAC,IAAlB;AAAuB,IAAA,SAAS,EAAE,EAAlC;AAAsC,IAAA,UAAU,EAAE;AAAlD,kBAjBF,CADF,EAuBE,MAAC,UAAD;AACE,IAAA,WAAW,EAAEA,WADf;AAEE,IAAA,IAAI,EAAEP,IAFR;AAGE,IAAA,GAAG,EAAG,GACJ,OAAyCN,KAAzC,GAAiDC,SAClD,IAAGY,WAAY;AALlB,IAvBF,CADF;AAiCD;AAEDR,IAAI,CAACS,SAAL,GAAiB;AACfR,EAAAA,IAAI,EAAEP,SAAS,CAACgB,MAAV,CAAiBC;AADR,CAAjB","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Box, Heading } from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\nimport { front, prodFront } from '../../config';\nimport Playground from './playground';\nimport Tracking from './apps/tracking';\n\nexport const SHOP_QUERY = gql`\n  query($domain: String!) {\n    shop(domain: $domain) {\n      name\n      accessToken\n      settings\n      user {\n        id\n      }\n    }\n  }\n`;\n\nexport default function Shop({ shop }) {\n  const { data, loading, error } = useQuery(SHOP_QUERY, {\n    variables: { domain: shop },\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (!data) return <h1>This shop is not added to your account.</h1>;\n\n  if (error || !data.shop) return <h1>Error loading shops: {error}</h1>;\n\n  const {\n    shop: { name, accessToken },\n  } = data;\n\n  return (\n    <Box width=\"100%\" borderWidth=\"0\">\n      <Box paddingY={4}>\n        {/* <Box alignItems=\"center\" display=\"flex\" marginBottom={2}>\n          <Heading size={700}>{name}</Heading>\n        </Box> */}\n        <Heading fontSize=\"2xl\" color=\"text\" fontWeight={500}>\n          {name}\n        </Heading>\n        <Heading fontSize=\"lg\" my={4} fontWeight={500}>\n          Apps\n        </Heading>\n        <Box display=\"flex\">\n          <Tracking\n            url={`${\n              process.env.NODE_ENV === 'development' ? front : prodFront\n            }/${accessToken}/graphql`}\n          />\n        </Box>\n        <Heading fontSize=\"lg\" marginTop={25} fontWeight={500}>\n          Playground\n        </Heading>\n      </Box>\n\n      <Playground\n        accessToken={accessToken}\n        shop={shop}\n        url={`${\n          process.env.NODE_ENV === 'development' ? front : prodFront\n        }/${accessToken}/graphql`}\n      />\n    </Box>\n  );\n}\n\nShop.propTypes = {\n  shop: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}