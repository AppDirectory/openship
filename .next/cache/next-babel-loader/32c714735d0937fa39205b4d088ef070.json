{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Box, Heading, Text, Button, Icon } from '@chakra-ui/core';\nimport MPCart from '../../pending/Cart/MPCart';\nimport ZincCart from '../../pending/Cart/ZincCart';\nimport OrderLine from './OrderLine';\n\nconst priceString = (price, quantity) => {\n  const total = Math.round(price * quantity * 100).toString();\n  return `${total.substring(0, total.length - 2)}.${total.substring(total.length - 2)}`;\n};\n\nexport default function OrderListItem(props) {\n  const {\n    0: open,\n    1: setOpen\n  } = useState();\n  useEffect(() => {\n    setOpen(props.open);\n  }, [props.open]);\n\n  async function onCheckAllChange(e, updateIndexFunc) {\n    updateIndexFunc(e ? props.index : null);\n  }\n\n  function handleToggleClick(e) {\n    e.stopPropagation();\n    setOpen(prevOpen => !prevOpen);\n  }\n\n  function parseMP(name, string, checkout) {\n    const parse = JSON.parse(string);\n    return parse.lineItems && __jsx(MPCart, {\n      cart: parse,\n      checkout: checkout,\n      cartName: name\n    });\n  }\n\n  function parseZinc(string, checkout) {\n    const parse = JSON.parse(string);\n    return parse.products && __jsx(ZincCart, {\n      cart: parse,\n      checkout: checkout\n    });\n  }\n\n  const {\n    id,\n    orderId,\n    orderName,\n    email,\n    first_name,\n    last_name,\n    streetAddress1,\n    streetAddress2,\n    city,\n    state,\n    zip,\n    shopName,\n    phone,\n    lineItems,\n    currency,\n    totalPrice,\n    subTotalPrice,\n    totalDiscount,\n    totalTax,\n    createAt,\n    mpCheckout,\n    mpCart,\n    zincCheckout,\n    zincCart,\n    note,\n    disabled,\n    buttons,\n    selectedOrderIndex,\n    updateIndex,\n    createCheckout\n  } = props;\n  return __jsx(Box, null, __jsx(Box, {\n    display: \"flex\",\n    paddingX: \"1em\",\n    paddingY: \".7em\",\n    onClick: !disabled ? () => onCheckAllChange(!selectedOrderIndex, updateIndex, // createCheckout,\n    mpCart) : undefined,\n    pointerEvents: !selectedOrderIndex || selectedOrderIndex === id ? null : 'none',\n    className: !selectedOrderIndex || selectedOrderIndex === id ? 'hover' : null,\n    cursor: !selectedOrderIndex || selectedOrderIndex === id ? 'pointer' : null\n  }, __jsx(Box, null, __jsx(Box, {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    mb: 1\n  }, __jsx(Heading, {\n    fontSize: \"sm\",\n    marginRight: 3\n  }, __jsx(\"a\", {\n    href: `https://${shopName.split('.')[0]}.myshopify.com/admin/orders/${orderId}`,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, orderName)), __jsx(Heading, {\n    fontSize: \"xs\",\n    fontWeight: 500,\n    letterSpacing: \"wide\",\n    textTransform: \"uppercase\",\n    color: \"gray.500\",\n    mr: 3\n  }, shopName.split('.')[0]), __jsx(Heading, {\n    fontSize: \"xs\",\n    color: \"gray.500\"\n  }, Intl.DateTimeFormat('en-US').format(Date.parse(createAt)))), __jsx(Box, {\n    as: \"p\",\n    fontSize: \"sm\",\n    color: \"#425A70\",\n    lineHeight: \"short\"\n  }, first_name, \" \", last_name, __jsx(\"br\", null), streetAddress1, \" \", streetAddress2, __jsx(\"br\", null), city, ', ', state, \" \", zip)), __jsx(Box, {\n    display: \"flex\",\n    marginLeft: \"auto\",\n    justifyContent: \"center\" // alignItems=\"center\"\n\n  }, buttons, __jsx(Button, {\n    bg: open && '#EDF2F7',\n    onClick: handleToggleClick,\n    color: \"#66788a\",\n    \"aria-label\": \"show line-items\",\n    height: \"1.3rem\",\n    minWidth: \"1.3rem\",\n    px: 0,\n    ml: 1\n  }, __jsx(Icon, {\n    name: \"chevron-down\",\n    size: \"22px\"\n  })))), open && __jsx(React.Fragment, null, __jsx(Box, {\n    marginLeft: \"-3px\",\n    background: \"#F7F9FD\",\n    border: \"muted\",\n    paddingY: \".7em\",\n    paddingX: \"1em\"\n  }, __jsx(Box, {\n    marginBottom: 2\n  }, __jsx(Text, {\n    fontSize: \"sm\",\n    fontWeight: 500,\n    color: \"#084B8A\"\n  }, \"Line Items\")), lineItems.map(a => __jsx(OrderLine, {\n    key: a.id,\n    item: a.node ? a.node : a\n  }))), mpCart && JSON.parse(mpCart).lineItems && __jsx(MPCart, {\n    cart: JSON.parse(mpCart),\n    cartName: \"Marketplace\"\n  }), zincCart && parseZinc(zincCart, zincCheckout), mpCheckout && __jsx(Box, {\n    marginLeft: \"-3px\",\n    background: \"#F1FAF5\",\n    border: \"muted\",\n    paddingY: \".7em\",\n    paddingX: \"1em\"\n  }, __jsx(Box, {\n    marginBottom: 10\n  }, __jsx(Text, {\n    size: 400,\n    fontWeight: 500,\n    color: \"#00783E\"\n  }, \"Marketplace Order\")), mpCheckout[0].marketLineItems.map(a => __jsx(Box, {\n    background: \"#fff\",\n    border: \"muted\",\n    marginBottom: 5\n  }, __jsx(Box, {\n    display: \"flex\",\n    alignItems: \"center\"\n  }, __jsx(Box, {\n    height: \"100%\",\n    background: \"white\",\n    borderRight: \"1px solid #e8e9ea\"\n  }, __jsx(Box, {\n    as: \"img\",\n    src: a.variantImg,\n    width: \"100px\"\n  })), __jsx(Box, {\n    padding: 5,\n    paddingLeft: 10\n  }, __jsx(Heading, {\n    size: 300\n  }, a.title), __jsx(Box, {\n    display: \"flex\"\n  }, a.quantity > 1 && __jsx(Box, null, __jsx(Text, {\n    size: 300,\n    color: \"muted\"\n  }, \"$\", a.variantPrice, \" x \", a.quantity)), __jsx(Heading, {\n    size: 300,\n    marginRight: 10,\n    color: \"green\"\n  }, \"$\", a.variantPrice && priceString(a.variantPrice, a.quantity))))))))));\n}","map":null,"metadata":{},"sourceType":"module"}