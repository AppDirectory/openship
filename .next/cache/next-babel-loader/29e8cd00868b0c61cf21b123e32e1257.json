{"ast":null,"code":"import fetch from 'isomorphic-unfetch';\nexport default (async (req, res) => {\n  console.log('hi');\n\n  if (req.body) {\n    const checkoutObj = req.body;\n    const shippingInfo = checkoutObj.shippingAddress;\n    const checkoutEmail = checkoutObj.email;\n    const allShopItems = [];\n\n    if (checkoutObj.lineItems.edges.length > 0) {\n      for (let k = 0; k < checkoutObj.lineItems.edges.length; k++) {\n        const shpVId = checkoutObj.lineItems.edges[k].node.variant.id;\n        const shpVQty = checkoutObj.lineItems.edges[k].node.quantity; // Preparing order items array to place shopify order\n\n        allShopItems.push({\n          variantId: shpVId,\n          quantity: shpVQty\n        });\n      }\n\n      const resp = await doShopifyOrder(allShopItems, shippingInfo, checkoutEmail);\n      console.log(resp);\n      res.status(200).send(resp);\n    }\n  }\n\n  async function doShopifyOrder(shopItems, shippingInfo, email) {\n    // const sp = 'osmarketplace.myshopify.com';\n    const sp = `${process.env.CUSTOM_SHOP_NAME}.myshopify.com`; // const accessTk = 'ae5584ba3aa15573e072e228414a5d65';\n\n    const accessTk = process.env.CUSTOM_SHOP_ADMIN;\n    const query = `\n    mutation draftOrderCreate($input: DraftOrderInput!) {\n        draftOrderCreate(input: $input) {\n        draftOrder {\n            id\n        }\n        userErrors {\n            field\n            message\n        }\n        }\n    }\n    `;\n    const response = await fetch(`https://${sp}/admin/api/graphql.json`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Shopify-Access-Token': accessTk\n      },\n      body: JSON.stringify({\n        query,\n        variables: {\n          input: {\n            email,\n            note: 'Openship order placed',\n            shippingAddress: {\n              address1: shippingInfo.address1,\n              address2: shippingInfo.address2,\n              city: shippingInfo.city,\n              countryCode: 'US',\n              firstName: shippingInfo.firstName,\n              lastName: shippingInfo.lastName,\n              provinceCode: shippingInfo.provinceCode,\n              zip: shippingInfo.zip,\n              phone: shippingInfo.phone\n            },\n            lineItems: shopItems,\n            customAttributes: [{\n              key: 'prisma_order_id',\n              value: req.body.pId\n            }]\n          }\n        }\n      })\n    }).then(response => response.json()).then(function (data) {\n      const jsonData = JSON.stringify(data);\n      const obj = JSON.parse(jsonData);\n\n      if (typeof obj.errors !== 'undefined' && obj.errors.length > 0) {\n        return obj.errors[0].message;\n      }\n\n      const markPaid = `mutation draftComplete($id: ID!,$paymentPending: Boolean){\n            draftOrderComplete(id: $id, paymentPending: $paymentPending) {\n                draftOrder { order { id } }\n                userErrors { field message }\n            }\n            }`;\n      return fetch(`https://${sp}/admin/api/graphql.json`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Shopify-Access-Token': accessTk\n        },\n        body: JSON.stringify({\n          query: markPaid,\n          variables: {\n            id: obj.data.draftOrderCreate.draftOrder.id,\n            paymentPending: false\n          }\n        })\n      }).then(response => response.json()).then(function (data) {\n        const jsonData = JSON.stringify(data);\n        const obj = JSON.parse(jsonData);\n        return obj.data.draftOrderComplete.draftOrder; // return data;\n      });\n    });\n    return response;\n  }\n});","map":null,"metadata":{},"sourceType":"module"}