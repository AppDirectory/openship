{"version":3,"file":"static/development/pages/completed.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/common/DefaultStyles.js","webpack:///./components/common/DeleteShop.js","webpack:///./components/common/OrderDetails.js","webpack:///./components/common/Pagination.js","webpack:///./components/common/Reshipment.js","webpack:///./components/common/ReshipmentLineItem.js","webpack:///./components/common/ShopSelect.js","webpack:///./components/common/orderListItem/OrderLine.js","webpack:///./components/common/orderListItem/OrderListItem.js","webpack:///./components/completed/Completed.js","webpack:///./components/completed/completedOrderList/CompletedOrderList.js","webpack:///./components/find/Find.js","webpack:///./components/find/MarketplaceSearch/MktProduct.js","webpack:///./components/find/MarketplaceSearch/VariantSelector.js","webpack:///./components/find/MarketplaceSearch/index.js","webpack:///./components/find/ShopifySearch/index.js","webpack:///./components/find/ZincSearch/AmzProduct.js","webpack:///./components/find/ZincSearch/index.js","webpack:///./components/layout/Header.js","webpack:///./components/layout/Meta.js","webpack:///./components/layout/Page.js","webpack:///./components/logo/Logo.js","webpack:///./components/pending/Cart/MPCart.js","webpack:///./components/pending/Cart/MPCartItem.js","webpack:///./components/pending/Cart/ZincCart.js","webpack:///./components/pending/Cart/ZincCartItem.js","webpack:///./components/pending/Pending.js","webpack:///./components/shops/ShopList.js","webpack:///./components/shops/ShopListItem.js","webpack:///./components/shops/WebhookSwitch.js","webpack:///./components/user/Signout.js","webpack:///./components/user/User.js","webpack:///./config.js","webpack:///./node_modules/next/dist/client/link.js","webpack:///./node_modules/next/dist/client/router.js","webpack:///./node_modules/next/dist/client/with-router.js","webpack:///./node_modules/next/dist/next-server/lib/mitt.js","webpack:///./node_modules/next/dist/next-server/lib/router-context.js","webpack:///./node_modules/next/dist/next-server/lib/router/router.js","webpack:///./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js","webpack:///./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js","webpack:///./node_modules/next/dist/next-server/lib/router/utils/route-regex.js","webpack:///./node_modules/next/dist/next-server/lib/utils.js","webpack:///./node_modules/next/link.js","webpack:///./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack:///./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireWildcard.js","webpack:///./node_modules/next/node_modules/@babel/runtime/helpers/typeof.js","webpack:///./node_modules/next/node_modules/react-is/cjs/react-is.development.js","webpack:///./node_modules/next/node_modules/react-is/index.js","webpack:///./pages/completed/index.js","webpack:///external \"@apollo/react-hooks\"","webpack:///external \"@chakra-ui/core\"","webpack:///external \"apollo-boost\"","webpack:///external \"graphql-tag\"","webpack:///external \"isomorphic-unfetch\"","webpack:///external \"next/head\"","webpack:///external \"next/router\"","webpack:///external \"prop-types\"","webpack:///external \"prop-types-exact\"","webpack:///external \"react\"","webpack:///external \"url\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","export const CardStyle = {\n  overflow: 'hidden',\n  boxShadow:\n    '0 0 0 1px rgba(63, 63, 68, 0.05), 0 1px 3px 0 rgba(63, 63, 68, 0.15)',\n  backgroundColor: 'white',\n  borderRadius: 3,\n};\n","import { gql } from 'apollo-boost';\nimport { useMutation } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\nimport { Text } from '@chakra-ui/core';\nimport { ALL_SHOPS_QUERY, shopsQueryVars } from '../shops/ShopList';\n\nconst CREATE_SHOP_MUTATION = gql`\n  mutation deleteShop($id: ID!) {\n    deleteShop(id: $id) {\n      id\n    }\n  }\n`;\n\nconst DeleteShop = ({ id, button }) => {\n  const [deleteShop] = useMutation(CREATE_SHOP_MUTATION, {\n    refetchQueries: [{ query: ALL_SHOPS_QUERY, variables: shopsQueryVars }],\n  });\n\n  return (\n    <Text\n      fontSize=\"sm\"\n      fontWeight={500}\n      marginLeft=\"auto\"\n      color=\"#ea645f\"\n      className=\"hover\"\n      cursor=\"pointer\"\n      onClick={async () => {\n        await deleteShop({\n          variables: { id },\n        });\n      }}\n    >\n      {button}\n    </Text>\n  );\n};\n\nexport default DeleteShop;\n\nDeleteShop.propTypes = {\n  id: PropTypes.string,\n  button: PropTypes.string,\n};\n","import React from 'react';\nimport {\n  Box,\n  Heading,\n  Text,\n  Icon,\n  Badge,\n  Button,\n  useDisclosure,\n} from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\nimport Reshipment from './Reshipment';\n\nconst secondaryLayout = {\n  flex: '1 1 10rem',\n  marginLeft: '1.5rem',\n  marginTop: '.3rem',\n};\n\nconst Layout = {\n  flex: '2 2 20rem',\n  marginLeft: '1.5rem',\n  marginTop: '.3rem',\n};\n\nconst OrderDetailsComp = ({\n  backgroundColor,\n  name,\n  store,\n  email,\n  processedAt,\n  fulfillments,\n  lineItems,\n  shippingAddress,\n  onOpen,\n}) => (\n  <>\n    <Box\n      display=\"flex\"\n      paddingY={4}\n      backgroundColor={backgroundColor}\n      boxShadow={backgroundColor && '0 0 1px rgba(67, 90, 111, 0.3)'}\n      paddingX={backgroundColor && 4}\n    >\n      <Box flex={1} alignItems=\"center\" display=\"flex\">\n        <Box>\n          <Heading size=\"lg\" fontWeight={600} color=\"text\">\n            {name}\n          </Heading>\n          <Heading\n            fontSize=\"xs\"\n            fontWeight={600}\n            color=\"gray.500\"\n            letterSpacing=\"wide\"\n            textTransform=\"uppercase\"\n            display=\"flex\"\n            alignItems=\"center\"\n          >\n            {store} Â·\n            <Text ml={1} color=\"#234361\" fontSize=\"xs\" fontWeight={400}>\n              {processedAt &&\n                Intl.DateTimeFormat('en-US').format(Date.parse(processedAt))}\n            </Text>\n          </Heading>\n          <Badge\n            marginTop={2}\n            variantColor={fulfillments.length > 0 ? 'green' : 'red'}\n            variant=\"solid\"\n          >\n            {fulfillments.length > 0 ? 'Processed' : 'Not Processed'}\n          </Badge>\n        </Box>\n      </Box>\n      {/* <Button\n          background=\"#DDEBF7\"\n          borderRadius={3}\n          marginRight={5}\n          onClick={onOpen}\n        >\n          <Box padding={3} display=\"flex\" alignItems=\"center\">\n            <Heading\n              size={100}\n              fontSize={13}\n              fontWeight={700}\n              color=\"#1070CA\"\n              marginRight={2}\n            >\n              RESHIP\n            </Heading>\n            <Icon size={4} color=\"#1070CA\" name=\"repeat\" />\n          </Box>\n        </Button> */}\n      <Button\n        background=\"#DDEBF7\"\n        borderRadius={3}\n        marginRight={1}\n        px={3}\n        height={8}\n        onClick={onOpen}\n      >\n        <Heading fontSize=\"sm\" fontWeight={700} color=\"#1070CA\" marginRight={2}>\n          RESHIP\n        </Heading>\n        <Icon size={4} color=\"#1070CA\" name=\"repeat\" />\n      </Button>\n    </Box>\n    <Box\n      display=\"flex\"\n      flexWrap=\"wrap\"\n      marginLeft=\"-1.5rem\"\n      marginTop=\"-.3rem\"\n      padding={backgroundColor && 4}\n    >\n      <Box {...Layout}>\n        {lineItems.edges.map(a => {\n          const ID = a.node.id\n            .toString()\n            .split('/')\n            .pop();\n          return (\n            <Box\n              boxShadow=\"sm\"\n              background=\"white\"\n              padding={2}\n              marginBottom={15}\n              key={ID}\n            >\n              <Box display=\"flex\" alignItems=\"center\">\n                <Box>\n                  <Box\n                    as=\"img\"\n                    src={a.node.image && a.node.image.originalSrc}\n                    borderStyle=\"solid\"\n                    borderWidth=\"1px\"\n                    borderRadius={3}\n                    borderColor=\"#e8e9ea\"\n                    width=\"130px\"\n                  />\n                </Box>\n                <Box marginLeft={4}>\n                  <Heading size=\"sm\" fontWeight={600} color=\"text\">\n                    {a.node.name}\n                  </Heading>\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <Text color=\"#66788a\" fontSize={14} mr={1}>\n                      {ID}\n                    </Text>\n                    -\n                    <Text color=\"#234361\" fontSize=\"sm\" ml={1}>\n                      QUANTITY: {a.node.quantity}\n                    </Text>\n                  </Box>\n                </Box>\n              </Box>\n              {/* {props.note && mOrderLineItem(props.note, Number(ID))} */}\n            </Box>\n          );\n        })}\n      </Box>\n      <Box {...secondaryLayout}>\n        <Box boxShadow=\"sm\" background=\"white\" padding={3} marginBottom={15}>\n          <Heading\n            fontSize=\"xs\"\n            fontWeight={500}\n            color=\"gray.500\"\n            letterSpacing=\"wide\"\n            textTransform=\"uppercase\"\n            mb={2}\n          >\n            Customer\n          </Heading>\n          <Box display=\"block\">\n            <Box fontSize=\"sm\" color=\"#425A70\" fontWeight={500}>\n              <Box>\n                {shippingAddress.name.split(' ')[0]}{' '}\n                {shippingAddress.name.split(' ').pop()}\n              </Box>\n              {shippingAddress.address1} {shippingAddress.address2}\n              <br />\n              {shippingAddress.city}\n              {', '}\n              {shippingAddress.province} {shippingAddress.zip}\n            </Box>\n          </Box>\n        </Box>\n        <Box boxShadow=\"sm\" background=\"white\" padding={3} marginBottom={15}>\n          <Heading\n            fontSize=\"xs\"\n            fontWeight={500}\n            color=\"gray.500\"\n            letterSpacing=\"wide\"\n            textTransform=\"uppercase\"\n            mb={2}\n          >\n            Email\n          </Heading>\n          <Box display=\"block\">\n            <Box fontSize=\"sm\" color=\"#425A70\" fontWeight={500}>\n              {email}\n            </Box>\n          </Box>\n        </Box>\n        {fulfillments.length > 0 && (\n          <Box boxShadow=\"sm\" background=\"white\" padding={3} marginBottom={15}>\n            <Heading\n              fontSize=\"xs\"\n              fontWeight={500}\n              color=\"gray.500\"\n              letterSpacing=\"wide\"\n              textTransform=\"uppercase\"\n              mb={2}\n            >\n              Shipments\n            </Heading>\n            <Box display=\"block\">\n              {fulfillments.map(a =>\n                a.trackingInfo.map((b, index) => (\n                  <Box key={index} display=\"flex\" alignItems=\"center\">\n                    <Icon\n                      size={4}\n                      name=\"check-circle\"\n                      color=\"#47B881\"\n                      marginRight={2}\n                    />\n                    <a href={b.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                      <Box fontSize=\"md\" color=\"#425A70\" fontWeight={500}>\n                        {b.number}\n                      </Box>\n                    </a>\n                  </Box>\n                ))\n              )}\n            </Box>\n          </Box>\n        )}\n      </Box>\n    </Box>\n  </>\n);\n\nconst OrderDetails = props => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      <Reshipment\n        isOpen={isOpen}\n        onClose={onClose}\n        order={props}\n        shop={props.store}\n      />\n      <OrderDetailsComp {...props} onOpen={onOpen} />\n    </>\n  );\n};\n\nexport default OrderDetails;\n\nexport { OrderDetailsComp };\n\nOrderDetails.propTypes = {\n  store: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  name: PropTypes.string,\n  processedAt: PropTypes.string,\n  note: PropTypes.object,\n  lineItems: PropTypes.array,\n  shippingAddress: PropTypes.object,\n  fulfillments: PropTypes.array,\n};\n","import { Box, IconButton } from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\n\nconst Pagination = ({ leftDisabled, onLeft, rightDisabled, onRight }) => (\n  <Box display=\"flex\" marginRight={3}>\n    <Box\n      display=\"flex\"\n      borderRadius={3}\n      boxShadow=\"inset 0 0 0 1px rgba(67, 90, 111, 0.14), inset 0 -1px 1px 0 rgba(67, 90, 111, 0.06);\"\n    >\n      <IconButton\n        borderTopRightRadius={0}\n        borderBottomRightRadius={0}\n        icon=\"arrow-back\"\n        color=\"#657889\"\n        height={10}\n        disabled={leftDisabled}\n        onClick={onLeft}\n        backgroundImage=\"linear-gradient(rgb(255, 255, 255), rgb(244, 245, 247))\"\n        boxShadow=\"rgba(67, 90, 111, 0.14) 0px 0px 0px 1px inset, rgba(67, 90, 111, 0.06) 0px -1px 1px 0px inset\"\n      />\n      <IconButton\n        borderTopLeftRadius={0}\n        borderBottomLeftRadius={0}\n        icon=\"arrow-forward\"\n        color=\"#657889\"\n        height={10}\n        onClick={onRight}\n        disabled={rightDisabled}\n        backgroundImage=\"linear-gradient(rgb(255, 255, 255), rgb(244, 245, 247))\"\n        boxShadow=\"rgba(67, 90, 111, 0.14) 0px 0px 0px 1px inset, rgba(67, 90, 111, 0.06) 0px -1px 1px 0px inset\"\n      />\n    </Box>\n  </Box>\n);\n\nexport default Pagination;\n\nPagination.propTypes = {\n  leftDisabled: PropTypes.bool,\n  rightDisabled: PropTypes.bool,\n  onLeft: PropTypes.func,\n  onRight: PropTypes.func,\n};\n","import { useState, useEffect } from 'react';\nimport { gql } from 'apollo-boost';\nimport { useMutation } from '@apollo/react-hooks';\nimport {\n  Text,\n  Box,\n  Heading,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalCloseButton,\n  ModalBody,\n  ModalFooter,\n  useToast,\n  Button,\n} from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\nimport ReshipmentLineItem from './ReshipmentLineItem';\nimport { ORDER_QUERY, PAGINATION_QUERY } from '../pending/Pending';\n\nconst Layout = {\n  flex: '1 1 10rem',\n  marginLeft: '2rem',\n  marginTop: '2rem',\n};\n\nconst wideText = {\n  fontSize: 'xs',\n  fontWeight: 500,\n  color: 'gray.500',\n  letterSpacing: 'wide',\n  textTransform: 'uppercase',\n};\n\nconst CREATE_ORDER = gql`\n  mutation createOrder(\n    $shopName: String!\n    $orderId: Float!\n    $orderName: String!\n    $email: String\n    $first_name: String\n    $last_name: String\n    $streetAddress1: String!\n    $streetAddress2: String\n    $city: String!\n    $state: String!\n    $zip: String!\n    $lineItems: Json!\n    $currency: String!\n    $totalPrice: String!\n    $subTotalPrice: String!\n    $totalDiscount: String!\n    $totalTax: String!\n    $mpCart: String!\n    $zincCart: String!\n    $processed: Processed\n    $createAt: String!\n  ) {\n    createOrder(\n      shopName: $shopName\n      orderId: $orderId\n      orderName: $orderName\n      email: $email\n      first_name: $first_name\n      last_name: $last_name\n      streetAddress1: $streetAddress1\n      streetAddress2: $streetAddress2\n      city: $city\n      state: $state\n      zip: $zip\n      lineItems: $lineItems\n      currency: $currency\n      totalPrice: $totalPrice\n      totalDiscount: $totalDiscount\n      subTotalPrice: $subTotalPrice\n      totalTax: $totalTax\n      mpCart: $mpCart\n      zincCart: $zincCart\n      processed: $processed\n      createAt: $createAt\n    ) {\n      id\n      email\n    }\n  }\n`;\n\nfunction readFormField(data, field, onInput) {\n  return (\n    <Box marginBottom={2}>\n      <Text\n        contentEditable=\"true\"\n        onInput={onInput}\n        fontWeight={500}\n        fontSize=\"md\"\n        color=\"text\"\n      >\n        {data}\n      </Text>\n      <Heading {...wideText}>{field}</Heading>\n    </Box>\n  );\n}\n\nconst Reshipment = ({ order, shop, isOpen, onClose }) => {\n  const [first, setFirst] = useState(null);\n  const [last, setLast] = useState(null);\n  const [address, setAddress] = useState(null);\n  const [address2, setAddress2] = useState(null);\n  const [city, setCity] = useState(null);\n  const [state, setState] = useState(null);\n  const [zip, setZip] = useState(null);\n  const [lineItems, setLineItems] = useState(null);\n  const initialItems = [];\n\n  const toast = useToast();\n\n  const [createOrder, { loading }] = useMutation(CREATE_ORDER, {\n    refetchQueries: [\n      {\n        query: ORDER_QUERY,\n        variables: {\n          skip: 0,\n          first: 100,\n          orderBy: 'createdAt_ASC',\n          processed: 'FALSE',\n        },\n      },\n      {\n        query: PAGINATION_QUERY,\n      },\n    ],\n  });\n\n  useEffect(() => {\n    if (order) {\n      setFirst(order.shippingAddress.name.split(' ')[0]);\n      setLast(order.shippingAddress.name.split(' ').pop());\n      setAddress(order.shippingAddress.address1);\n      setAddress2(order.shippingAddress.address2);\n      setCity(order.shippingAddress.city);\n      setState(order.shippingAddress.province);\n      setZip(order.shippingAddress.zip);\n      setLineItems(order.lineItems.edges);\n    }\n  }, [order]);\n\n  const handleLine = (ID, quantity, initialQty) => {\n    const temp = lineItems;\n\n    temp.map(item => {\n      if (item.node.id === ID) {\n        item.node.quantity = quantity;\n        const itemObj = {};\n        itemObj.id = ID;\n        itemObj.quantity = initialQty;\n        initialItems.push(itemObj);\n      }\n      return null;\n    });\n    setLineItems(temp);\n  };\n\n  const resetLineItems = () => {\n    const temp = lineItems;\n    initialItems.reverse();\n    temp.map(item => {\n      initialItems.forEach(function(initialItem) {\n        if (item.node.id === initialItem.id) {\n          item.node.quantity = initialItem.quantity;\n        }\n      });\n      return null;\n    });\n    setLineItems(temp);\n  };\n\n  return order ? (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Request Reshipment</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Box\n            display=\"flex\"\n            flexWrap=\"wrap\"\n            marginLeft=\"-2rem\"\n            marginTop=\"-2rem\"\n          >\n            <Box {...Layout}>\n              <Box marginBottom={4}>\n                <Text fontWeight={600} fontSize=\"md\" color=\"text\">\n                  {order.name}\n                </Text>\n                <Heading {...wideText}>Order Number</Heading>\n              </Box>\n              {readFormField(\n                order.shippingAddress.name.split(' ')[0],\n                'First Name',\n                e => setFirst(e.target.textContent)\n              )}\n              {readFormField(\n                order.shippingAddress.name.split(' ').pop(),\n                'Last Name',\n                e => setLast(e.target.textContent)\n              )}\n              {readFormField(\n                order.shippingAddress.address1,\n                'Street Address',\n                e => setAddress(e.target.textContent)\n              )}\n              {order.shippingAddress.address2 &&\n                readFormField(\n                  order.shippingAddress.address2,\n                  'Apt, Suite, etc.',\n                  e => setAddress2(e.target.textContent)\n                )}\n              {readFormField(order.shippingAddress.city, 'City', e =>\n                setCity(e.target.textContent)\n              )}\n              {readFormField(order.shippingAddress.province, 'State', e =>\n                setState(e.target.textContent)\n              )}\n              {readFormField(order.shippingAddress.zip, 'Zip Code', e =>\n                setZip(e.target.textContent)\n              )}\n            </Box>\n            <Box {...Layout}>\n              {order.lineItems.edges.map(a => (\n                <ReshipmentLineItem arg={a.node} handleLine={handleLine} />\n              ))}\n            </Box>\n          </Box>\n        </ModalBody>\n\n        <ModalFooter>\n          <Button variant=\"ghost\" mr={3} onClick={onClose}>\n            Cancel\n          </Button>\n          <Button\n            variant=\"ghost\"\n            variantColor=\"blue\"\n            bg=\"blue.50\"\n            _hover={{ bg: 'blue.100' }}\n            isLoading={loading}\n            onClick={async () => {\n              const res = await createOrder({\n                variables: {\n                  shopName: `${shop}.myshopify.com`,\n                  orderId: order.id.split('/').pop(),\n                  orderName: order.name,\n                  email: order.email || 'noemail@noemail.com',\n                  first_name: first,\n                  last_name: last,\n                  streetAddress1: address,\n                  streetAddress2: address2,\n                  city,\n                  state,\n                  zip,\n                  phone: order.shippingAddress.phone,\n                  lineItems: lineItems\n                    .filter(a => a.node.quantity > 0)\n                    .map(b => {\n                      b.node.id = parseFloat(b.node.id.split('/').pop());\n                      return b.node;\n                    }),\n                  currency: 'USD',\n                  totalPrice: order.totalReceivedSet.shopMoney.amount,\n                  subTotalPrice: 0,\n                  totalDiscount: 0,\n                  totalTax: 0,\n                  createAt: order.processedAt,\n                  mpCart: '{}',\n                  zincCart: '{}',\n                  processed: 'FALSE',\n                },\n              });\n              onClose();\n              toast({\n                position: 'top-right',\n                title: `${order.name} has been requested for reshipment.`,\n                status: 'success',\n                duration: 2000,\n                isClosable: true,\n              });\n            }}\n          >\n            Confirm Reshipment\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  ) : (\n    <></>\n  );\n};\n\nexport default Reshipment;\n\nReshipment.propTypes = {\n  order: PropTypes.object,\n  isShown: PropTypes.bool,\n  onCloseComplete: PropTypes.func,\n  shop: PropTypes.string,\n};\n","import { useState } from 'react';\nimport {\n  Box,\n  Text,\n  Heading,\n  PseudoBox,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  Icon,\n} from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\n\nfunction LineItem({ arg, handleLine }) {\n  const initialQty = arg.quantity;\n  const [quantity, setQuantity] = useState(arg.quantity);\n\n  function onInputChange(e) {\n    handleLine(arg.id, e, initialQty);\n    setQuantity(e);\n  }\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\" marginBottom={15}>\n      <Box display=\"block\">\n        <Box>\n          <Box\n            as=\"img\"\n            src={arg.img ? arg.img : arg.image && arg.image.originalSrc}\n            borderStyle=\"solid\"\n            borderWidth=\"1px\"\n            borderRadius={3}\n            borderColor=\"#e8e9ea\"\n            width=\"70px\"\n          />\n        </Box>\n      </Box>\n      <Box flex={2} display=\"block\" marginLeft={2}>\n        <Heading fontSize=\"sm\" color=\"text\" mb={2} fontWeight={600}>\n          {arg.name}\n        </Heading>\n\n        <PseudoBox>\n          <Text fontSize=\".65rem\" fontWeight=\"600\" color=\"gray.500\">\n            QUANTITY\n          </Text>\n          <NumberInput\n            size=\"sm\"\n            value={quantity}\n            onChange={onInputChange}\n            min={0}\n            width=\"80px\"\n          >\n            <NumberInputField\n              focusBorderColor=\"blue.500\"\n              textAlign=\"center\"\n              _hover={{ borderColor: 'blue.500' }}\n              height=\"25px\"\n            />\n            <NumberInputStepper width=\"25px\">\n              <NumberIncrementStepper\n                bg=\"#f6f7f9\"\n                color=\"blue.500\"\n                _active={{ bg: 'blue.500' }}\n                _hover={{ bg: 'blue.500', color: 'white' }}\n                children={<Icon name=\"add\" color=\"currentColor\" />}\n                marginTop=\"0px !important\"\n                borderTopWidth=\"0px !important\"\n              />\n            </NumberInputStepper>\n            <NumberInputStepper left=\"0\" width=\"25px\">\n              <NumberDecrementStepper\n                bg=\"#f6f7f9\"\n                color=\"blue.500\"\n                _active={{ bg: 'blue.500' }}\n                _hover={{ bg: 'blue.500', color: 'white' }}\n                children={<Icon name=\"minus\" color=\"currentColor\" />}\n                borderLeft=\"0px\"\n                borderRight=\"1px solid #E2E8F0\"\n                marginTop=\"0px !important\"\n                borderTopWidth=\"0px !important\"\n              />\n            </NumberInputStepper>\n          </NumberInput>\n        </PseudoBox>\n      </Box>\n    </Box>\n  );\n}\n\nexport default LineItem;\n\nLineItem.propTypes = {\n  arg: PropTypes.object,\n  handleLine: PropTypes.func,\n};\n","import { Heading, Box } from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\n\nconst ShopSelect = ({ shops, client, updateClient }) => (\n  <Box display=\"flex\" flexWrap=\"wrap\">\n    {shops.map(shop => (\n      <Box\n        p={2}\n        mr={2}\n        mt={2}\n        borderRadius={2}\n        bg={client === shop.domain.split('.')[0] ? 'blue.50' : 'gray.50'}\n        onClick={() => updateClient(shop.domain.split('.')[0])}\n        cursor=\"pointer\"\n      >\n        <Heading\n          fontSize=\"xs\"\n          fontWeight={500}\n          color={client === shop.domain.split('.')[0] ? 'blue.600' : 'gray.500'}\n          letterSpacing=\"wide\"\n          textTransform=\"uppercase\"\n        >\n          {shop.domain.split('.')[0]}\n        </Heading>\n      </Box>\n    ))}\n  </Box>\n);\nexport default ShopSelect;\n\nShopSelect.propTypes = {\n  shops: PropTypes.array,\n  client: PropTypes.string,\n  updateClient: PropTypes.func,\n};\n","import { Box, Heading, Text } from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\n\nconst OrderLine = props => {\n  const { item } = props;\n\n  const priceString = (price, quantity) => {\n    const total = Math.round(price * quantity * 100).toString();\n    return `${total.substring(0, total.length - 2)}.${total.substring(\n      total.length - 2\n    )}`;\n  };\n\n  return (\n    <Box\n      background=\"#fff\"\n      borderStyle=\"solid\"\n      borderWidth=\"1px\"\n      borderColor=\"#e8e9ea\"\n      marginBottom={2}\n    >\n      <Box display=\"flex\" alignItems=\"center\">\n        <Box height=\"100%\" background=\"white\" borderRight=\"1px solid #e8e9ea\">\n          <Box\n            as=\"img\"\n            src={item.img ? item.img : item.image && item.image.originalSrc}\n            width=\"100px\"\n          />\n        </Box>\n        <Box borderLeft=\"muted\" padding={2} paddingLeft={4}>\n          <Heading fontSize=\"xs\" color=\"text\">\n            {item.name}\n          </Heading>\n          <Text fontSize=\"xs\" color=\"text\">\n            {item.id}\n          </Text>\n          <Text fontSize=\"xs\">{item.product_id}</Text>\n          <Box display=\"flex\">\n            {item.quantity > 1 && (\n              <Box>\n                <Text fontSize=\"xs\" color=\"muted\">\n                  $\n                  {item.price\n                    ? item.price\n                    : item.discountedUnitPriceSet.shopMoney.amount}{' '}\n                  x {item.quantity}\n                </Text>\n              </Box>\n            )}\n            <Heading fontSize=\"xs\" marginRight={10} color=\"green.600\">\n              $\n              {item.price\n                ? priceString(item.price, item.quantity)\n                : item.discountedUnitPriceSet.shopMoney.amount * item.quantity}\n            </Heading>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default OrderLine;\n\nOrderLine.propTypes = {\n  item: PropTypes.object.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Box, Heading, Text, Button, Icon } from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\nimport MPCart from '../../pending/Cart/MPCart';\nimport ZincCart from '../../pending/Cart/ZincCart';\nimport OrderLine from './OrderLine';\nimport { CHANNELS_QUERY, channelsQueryVars } from '../../layout/Page';\n\nconst priceString = (price, quantity) => {\n  const total = Math.round(price * quantity * 100).toString();\n  return `${total.substring(0, total.length - 2)}.${total.substring(\n    total.length - 2\n  )}`;\n};\n\nexport default function OrderListItem(props) {\n  const [open, setOpen] = useState();\n\n  const {\n    data: { channels },\n    error,\n    loading,\n  } = useQuery(CHANNELS_QUERY, {\n    variables: channelsQueryVars,\n  });\n\n  useEffect(() => {\n    setOpen(props.open);\n  }, [props.open]);\n\n  async function onCheckAllChange(e, updateIndexFunc) {\n    updateIndexFunc(e ? props.index : null);\n  }\n\n  function handleToggleClick(e) {\n    e.stopPropagation();\n    setOpen(prevOpen => !prevOpen);\n  }\n\n  function parseMP(name, string, checkout) {\n    const parse = JSON.parse(string);\n    return (\n      parse.lineItems && (\n        <MPCart cart={parse} checkout={checkout} cartName={name} />\n      )\n    );\n  }\n  function parseZinc(string, checkout) {\n    const parse = JSON.parse(string);\n    return parse.products && <ZincCart cart={parse} checkout={checkout} />;\n  }\n\n  const {\n    id,\n    orderId,\n    orderName,\n    email,\n    first_name,\n    last_name,\n    streetAddress1,\n    streetAddress2,\n    city,\n    state,\n    zip,\n    shopName,\n    phone,\n    lineItems,\n    currency,\n    totalPrice,\n    subTotalPrice,\n    totalDiscount,\n    totalTax,\n    createAt,\n    mpCheckout,\n    mpCart,\n    zincCheckout,\n    zincCart,\n    customCheckout,\n    customCart,\n    note,\n    disabled,\n    buttons,\n    selectedOrderIndex,\n    updateIndex,\n    createCheckout,\n  } = props;\n  return (\n    <Box>\n      <Box\n        display=\"flex\"\n        paddingX=\"1em\"\n        paddingY=\".7em\"\n        onClick={\n          !disabled\n            ? () =>\n                onCheckAllChange(\n                  !selectedOrderIndex,\n                  updateIndex,\n                  // createCheckout,\n                  mpCart\n                )\n            : undefined\n        }\n        pointerEvents={\n          !selectedOrderIndex || selectedOrderIndex === id ? null : 'none'\n        }\n        className={\n          !selectedOrderIndex || selectedOrderIndex === id ? 'hover' : null\n        }\n        cursor={\n          !selectedOrderIndex || selectedOrderIndex === id ? 'pointer' : null\n        }\n      >\n        <Box>\n          <Box display=\"flex\" flexWrap=\"wrap\" alignItems=\"center\" mb={1}>\n            <Heading fontSize=\"sm\" marginRight={3} color=\"text\">\n              <a\n                href={`https://${\n                  shopName.split('.')[0]\n                }.myshopify.com/admin/orders/${orderId}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {orderName}\n              </a>\n            </Heading>\n            <Heading\n              fontSize=\"xs\"\n              fontWeight={500}\n              letterSpacing=\"wide\"\n              textTransform=\"uppercase\"\n              color=\"gray.500\"\n              mr={3}\n            >\n              {shopName.split('.')[0]}\n            </Heading>\n\n            <Heading fontSize=\"xs\" color=\"gray.500\">\n              {Intl.DateTimeFormat('en-US').format(Date.parse(createAt))}\n            </Heading>\n          </Box>\n          <Box as=\"p\" fontSize=\"sm\" color=\"#425A70\" lineHeight=\"short\">\n            {first_name} {last_name}\n            <br />\n            {streetAddress1} {streetAddress2}\n            <br />\n            {city}\n            {', '}\n            {state} {zip}\n          </Box>\n        </Box>\n        <Box\n          display=\"flex\"\n          marginLeft=\"auto\"\n          justifyContent=\"center\"\n          // alignItems=\"center\"\n        >\n          {buttons}\n\n          <Button\n            bg={open && '#EDF2F7'}\n            onClick={handleToggleClick}\n            color=\"#66788a\"\n            aria-label=\"show line-items\"\n            height=\"1.3rem\"\n            minWidth=\"1.3rem\"\n            px={0}\n            ml={1}\n          >\n            <Icon name=\"chevron-down\" size=\"22px\" />\n          </Button>\n        </Box>\n      </Box>\n      {open && (\n        <>\n          <Box\n            marginLeft=\"-3px\"\n            background=\"#F7F9FD\"\n            border=\"muted\"\n            paddingY=\".7em\"\n            paddingX=\"1em\"\n          >\n            <Box marginBottom={2}>\n              <Text fontSize=\"sm\" fontWeight={500} color=\"#084B8A\">\n                Line Items\n              </Text>\n            </Box>\n            {lineItems.map(a => (\n              <OrderLine key={a.id} item={a.node ? a.node : a} />\n            ))}\n          </Box>\n\n          {channels.filter(channel => channel.type === 'MARKETPLACE').length >\n            0 &&\n            mpCart &&\n            JSON.parse(mpCart).lineItems &&\n            JSON.parse(mpCart).lineItems.edges.length > 0 && (\n              <MPCart cart={JSON.parse(mpCart)} cartName=\"Marketplace\" />\n            )}\n          {channels.filter(channel => channel.type === 'SHOPIFY').length > 0 &&\n            customCart &&\n            JSON.parse(customCart).lineItems &&\n            JSON.parse(customCart).lineItems.edges.length > 0 && (\n              <MPCart\n                cart={JSON.parse(customCart)}\n                cartName=\"BN\"\n                background=\"#F1FBFC\"\n                color=\"#007489\"\n              />\n            )}\n          {channels.filter(channel => channel.type === 'ZINC').length > 0 &&\n            zincCart &&\n            JSON.parse(zincCart).products &&\n            JSON.parse(zincCart).products.length > 0 &&\n            parseZinc(zincCart, zincCheckout)}\n          {mpCheckout && (\n            <Box\n              marginLeft=\"-3px\"\n              background=\"#F1FAF5\"\n              border=\"muted\"\n              paddingY=\".7em\"\n              paddingX=\"1em\"\n            >\n              <Box marginBottom={10}>\n                <Text size={400} fontWeight={500} color=\"#00783E\">\n                  Marketplace Order\n                </Text>\n              </Box>\n              {mpCheckout[0].marketLineItems.map(a => (\n                <Box background=\"#fff\" border=\"muted\" marginBottom={5}>\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <Box\n                      height=\"100%\"\n                      background=\"white\"\n                      borderRight=\"1px solid #e8e9ea\"\n                    >\n                      <Box as=\"img\" src={a.variantImg} width=\"100px\" />\n                    </Box>\n                    <Box padding={5} paddingLeft={10}>\n                      <Heading size={300}>{a.title}</Heading>\n                      <Box display=\"flex\">\n                        {a.quantity > 1 && (\n                          <Box>\n                            <Text size={300} color=\"muted\">\n                              ${a.variantPrice} x {a.quantity}\n                            </Text>\n                          </Box>\n                        )}\n                        <Heading size={300} marginRight={10} color=\"green\">\n                          $\n                          {a.variantPrice &&\n                            priceString(a.variantPrice, a.quantity)}\n                        </Heading>\n                      </Box>\n                    </Box>\n                  </Box>\n                </Box>\n              ))}\n            </Box>\n          )}\n        </>\n      )}\n    </Box>\n  );\n}\n\nOrderListItem.propTypes = {\n  id: PropTypes.string,\n  orderId: PropTypes.string,\n  orderName: PropTypes.string,\n  email: PropTypes.string,\n  first_name: PropTypes.string,\n  last_name: PropTypes.string,\n  streetAddress1: PropTypes.string,\n  streetAddress2: PropTypes.string,\n  city: PropTypes.string,\n  state: PropTypes.string,\n  zip: PropTypes.string,\n  shopName: PropTypes.string,\n  phone: PropTypes.string,\n  lineItems: PropTypes.object,\n  currency: PropTypes.string,\n  totalPrice: PropTypes.number,\n  subTotalPrice: PropTypes.number,\n  totalDiscount: PropTypes.number,\n  totalTax: PropTypes.number,\n  createAt: PropTypes.number,\n  mpCheckout: PropTypes.object,\n  mpCart: PropTypes.object,\n  note: PropTypes.object,\n  disabled: PropTypes.bool,\n  selectedOrderIndex: PropTypes.number,\n  selectedLineIndex: PropTypes.array,\n  open: PropTypes.bool,\n  updateIndex: PropTypes.func,\n  index: PropTypes.number,\n  createCheckout: PropTypes.func,\n  buttons: PropTypes.element,\n};\n","import { useQuery } from '@apollo/react-hooks';\nimport Router from 'next/router';\nimport PropTypes from 'prop-types';\nimport CompletedOrderList from './completedOrderList/CompletedOrderList';\nimport { ALL_SHOPS_QUERY, shopsQueryVars } from '../shops/ShopList';\n\nfunction Completed(props) {\n  const {\n    data: { shops },\n    loading,\n    error,\n  } = useQuery(ALL_SHOPS_QUERY, {\n    variables: shopsQueryVars,\n  });\n\n  function formatNote(noteObj) {\n    return noteObj.split('||').map(a => {\n      const obj = {};\n\n      a.split(',').forEach(b => {\n        obj[b.split(':')[0].trim()] = b.split(':')[1].trim();\n      });\n\n      obj.lineID = obj.lineID.split('|').map(c => parseFloat(c));\n      obj.marketID = obj.marketID;\n      obj.transID = parseFloat(obj.transID);\n\n      return obj;\n    });\n  }\n\n  return <>{error || !shops ? null : <CompletedOrderList shops={shops} />}</>;\n}\n\nexport default Completed;\n\nCompleted.propTypes = {\n  name: PropTypes.string,\n  lineItems: PropTypes.array,\n  shippingAddress: PropTypes.string,\n  fulfillments: PropTypes.string,\n  note: PropTypes.string,\n  client: PropTypes.string,\n};\n","import React, { useState } from 'react';\nimport { gql } from 'apollo-boost';\nimport Link from 'next/link';\nimport {\n  Box,\n  Heading,\n  Spinner,\n  Drawer,\n  DrawerOverlay,\n  DrawerContent,\n  Button,\n  DrawerBody,\n  InputGroup,\n  InputLeftElement,\n  Icon,\n  Input,\n  useDisclosure,\n} from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\nimport { useQuery } from '@apollo/react-hooks';\nimport ShopSelect from '../../common/ShopSelect';\nimport OrderListItem from '../../common/orderListItem/OrderListItem';\nimport Reshipment from '../../common/Reshipment';\nimport { OrderDetailsComp } from '../../common/OrderDetails';\nimport { CardStyle } from '../../common/DefaultStyles';\n\nexport const SHOP_ORDERS_QUERY = gql`\n  query shopOrders(\n    $domain: String!\n    $first: Int\n    $after: String\n    $before: String\n    $last: Int\n    $query: String\n  ) {\n    shopOrders(\n      domain: $domain\n      first: $first\n      after: $after\n      before: $before\n      last: $last\n      query: $query\n    ) {\n      pageInfo\n      edges\n    }\n  }\n`;\n\nexport default function CompletedOrderList({ shops }) {\n  const [client, setClient] = useState(\n    shops.length && shops[0].domain.split('.')[0]\n  );\n  const [afterCursor, setAfterCursor] = useState(null);\n  const [beforeCursor, setBeforeCursor] = useState(null);\n  const [query, setQuery] = useState('');\n  const [first, setFirst] = useState(10);\n  const [last, setLast] = useState(null);\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const [selectedOrder2, setSelectedOrder2] = useState(null);\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const {\n    isOpen: drawerIsOpen,\n    onOpen: drawerOnOpen,\n    onClose: drawerOnClose,\n  } = useDisclosure();\n\n  const { data, error, loading } = useQuery(SHOP_ORDERS_QUERY, {\n    variables: {\n      domain: `${client}.myshopify.com`,\n      after: afterCursor,\n      before: beforeCursor,\n      first,\n      last,\n      query,\n    },\n  });\n\n  function updateClient(arg) {\n    setClient(arg);\n    setAfterCursor(null);\n    setBeforeCursor(null);\n    setFirst(10);\n    setLast(null);\n  }\n\n  function onPrevious(arg) {\n    setAfterCursor(null);\n    setBeforeCursor(arg);\n    setFirst(null);\n    setLast(10);\n  }\n\n  function onNext(arg) {\n    setAfterCursor(arg);\n    setBeforeCursor(null);\n    setFirst(10);\n    setLast(null);\n  }\n\n  function updateDialog(arg) {\n    onOpen();\n    setSelectedOrder(arg);\n  }\n\n  function updateDrawer(arg) {\n    drawerOnOpen();\n    setSelectedOrder2(arg);\n  }\n  return (\n    <>\n      <Box display=\"flex\" py={4}>\n        <Box flex={1} alignItems=\"center\" display=\"flex\">\n          <Heading fontSize=\"2xl\" color=\"text\" fontWeight={500}>\n            Completed Orders\n          </Heading>\n        </Box>\n      </Box>\n      {selectedOrder2 && (\n        <Drawer\n          size=\"md\"\n          isOpen={drawerIsOpen}\n          placement=\"right\"\n          onClose={drawerOnClose}\n        >\n          <DrawerOverlay />\n          <DrawerContent>\n            {/* <DrawerCloseButton /> */}\n            <DrawerBody bg=\"#f9f9fb\" p={0}>\n              <Box>\n                <OrderDetailsComp\n                  {...data.shopOrders.edges.filter(\n                    order => order.node.id.split('/').pop() === selectedOrder2\n                  )[0].node}\n                  store={client}\n                  backgroundColor=\"white\"\n                  onOpen={() => updateDialog(selectedOrder2)}\n                />\n              </Box>\n            </DrawerBody>\n          </DrawerContent>\n        </Drawer>\n      )}\n      {client ? (\n        <Box {...CardStyle}>\n          <Box display=\"block\" padding=\"1em\">\n            <Box display=\"flex\">\n              <InputGroup width=\"100%\" borderColor=\"gray.300\">\n                <InputLeftElement\n                  children={<Icon name=\"search\" color=\"gray.300\" />}\n                />\n                <Input\n                  value={query}\n                  onChange={e => setQuery(e.target.value)}\n                  type=\"phone\"\n                  placeholder=\"Search\"\n                />\n              </InputGroup>\n            </Box>\n            <Box>\n              <ShopSelect\n                client={client}\n                shops={shops}\n                updateClient={updateClient}\n              />\n            </Box>\n          </Box>\n\n          {(() => {\n            if (loading)\n              return (\n                <Box\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  justifyContent=\"center\"\n                  height=\"100vh\"\n                >\n                  <Spinner\n                    thickness=\"4px\"\n                    speed=\"0.65s\"\n                    emptyColor=\"gray.200\"\n                    color=\"blue.500\"\n                    size=\"xl\"\n                  />\n                </Box>\n              );\n            if (error || !data.shopOrders) return <div>{error}</div>;\n            return (\n              <>\n                <Box width=\"100%\">\n                  {selectedOrder && (\n                    <Reshipment\n                      isOpen={isOpen}\n                      onClose={onClose}\n                      order={\n                        data.shopOrders.edges.filter(\n                          order =>\n                            order.node.id.split('/').pop() === selectedOrder\n                        ).length > 0 &&\n                        data.shopOrders.edges.filter(\n                          order =>\n                            order.node.id.split('/').pop() === selectedOrder\n                        )[0].node\n                      }\n                      shop={client}\n                    />\n                  )}\n                  {data.shopOrders.edges.map((order, index) => (\n                    <Box borderTop=\"0.1rem solid #dfe3e8\">\n                      <OrderListItem\n                        key={index}\n                        disabled\n                        client={client}\n                        orderName={order.node.name}\n                        first_name={\n                          order.node.shippingAddress.name.split(' ')[0]\n                        }\n                        last_name={order.node.shippingAddress.name\n                          .split(' ')\n                          .pop()}\n                        streetAddress1={order.node.shippingAddress.address1}\n                        streetAddress2={order.node.shippingAddress.address2}\n                        city={order.node.shippingAddress.city}\n                        state={order.node.shippingAddress.province}\n                        zip={order.node.shippingAddress.zip}\n                        shopName={client}\n                        lineItems={order.node.lineItems.edges}\n                        createAt={order.node.processedAt}\n                        note={order.node.note && order.node.note}\n                        email={order.node.email}\n                        // errorText={order.node.note && order.node.note}\n                        // processText={order.node.note && order.node.note}\n                        orderId={order.node.id.split('/').pop()}\n                        buttons={\n                          <>\n                            <Button\n                              background=\"#DDEBF7\"\n                              borderRadius={3}\n                              marginRight={1}\n                              px={2}\n                              height={5}\n                              onClick={() =>\n                                updateDialog(order.node.id.split('/').pop())\n                              }\n                            >\n                              <Heading\n                                fontSize=\"xs\"\n                                fontWeight={700}\n                                color=\"#1070CA\"\n                                marginRight={2}\n                              >\n                                RESHIP\n                              </Heading>\n                              <Icon size={3} color=\"#1070CA\" name=\"repeat\" />\n                            </Button>\n                            <Link\n                              href={{\n                                pathname: '/completed',\n                              }}\n                              as={`/order?store=${client}&name=${\n                                order.node.name\n                              }`}\n                            >\n                              <Button\n                                onClick={() =>\n                                  updateDrawer(order.node.id.split('/').pop())\n                                }\n                                bg=\"transparent\"\n                                color=\"#66788a\"\n                                aria-label=\"show order\"\n                                height=\"1.3rem\"\n                                minWidth=\"1.3rem\"\n                                px={0}\n                                ml={1}\n                              >\n                                <Icon name=\"arrow-forward\" size=\"18px\" />\n                              </Button>\n                            </Link>\n                          </>\n                        }\n                      />\n                    </Box>\n                  ))}\n                </Box>\n              </>\n            );\n          })()}\n        </Box>\n      ) : (\n        <Box\n          background=\"white\"\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          flexDirection=\"column\"\n          borderRadius={3}\n        >\n          <Heading margin=\"1em\" size={600}>\n            Your orders will appear here after you add a shop.\n          </Heading>\n        </Box>\n      )}\n    </>\n  );\n}\n\nCompletedOrderList.propTypes = {\n  shops: PropTypes.string,\n};\n","import React, { useState } from 'react';\nimport Link from 'next/link';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport {\n  Box,\n  Button,\n  InputGroup,\n  InputLeftElement,\n  Input,\n  Icon,\n  Heading,\n  Text,\n  useToast,\n} from '@chakra-ui/core';\nimport { CURRENT_USER_QUERY } from '../user/User';\nimport Pagination from '../common/Pagination';\nimport { CardStyle } from '../common/DefaultStyles';\nimport MarketplaceSearch from './MarketplaceSearch';\nimport ZincSearch from './ZincSearch';\nimport ShopifySearch from './ShopifySearch';\nimport { CHANNELS_QUERY, channelsQueryVars } from '../layout/Page';\n\nexport const getItemGroup = gql`\n  query getItemGroup($itemID: String) {\n    getItemGroup(itemID: $itemID) {\n      item\n    }\n  }\n`;\n\nconst sortOptions = [\n  {\n    label: 'Lowest Price',\n    value: 'price',\n  },\n  {\n    label: 'Highest Price',\n    value: '-price',\n  },\n  {\n    label: 'Best Match',\n    value: 'match',\n  },\n];\n\nexport const option = (name, options, update, selected) => (\n  <Box marginBottom={2} marginRight={5}>\n    <Heading fontSize=\"sm\" color=\"text\" fontWeight={500} marginBottom={0}>\n      {name}\n    </Heading>\n    <Box display=\"flex\">\n      {options.length > 0 ? (\n        options.map((a, index) => (\n          <Box\n            id={a}\n            key={index}\n            p={1}\n            mr={2}\n            mt={2}\n            borderRadius={3}\n            bg={a === selected ? '#e2e9f2' : 'transparent'}\n            onClick={() => update(a)}\n            cursor=\"pointer\"\n          >\n            <Heading\n              fontSize=\"xs\"\n              fontWeight={500}\n              px={1}\n              color={a === selected ? '#1070ca' : '#425a70'}\n              letterSpacing=\"wide\"\n              textTransform=\"uppercase\"\n            >\n              {a}\n            </Heading>\n          </Box>\n        ))\n      ) : (\n        <Text mt={2} fontSize=\"sm\" color=\"text\">\n          No Channels Added\n        </Text>\n      )}\n    </Box>\n  </Box>\n);\n\nconst Find = ({\n  headerSize,\n  atcDisabled,\n  addMPItem,\n  addCustomItem,\n  addZincItem,\n}) => {\n  const allChannels = useQuery(CHANNELS_QUERY, {\n    variables: channelsQueryVars,\n  });\n\n  const { data, error: channelsError, loading: channelsLoading } = allChannels;\n\n  const [selectedChannel, setSelectedChannel] = useState(\n    data.channels.length ? data.channels[0].name : ''\n  );\n  const [value, setValue] = useState('price');\n  const [searchBar, setSearchBar] = useState('');\n  const [searchEntry, setSearchEntry] = useState('');\n  const [limit, setLimit] = useState(10);\n  const [pageNum, setPageNum] = useState(0);\n  const [min, setMin] = useState('');\n  const [max, setMax] = useState('');\n  const [price, setPrice] = useState(null);\n  const [priceCurrency, setPriceCurrency] = useState('USD');\n  const [itemLocationCountry, setItemLocationCountry] = useState('US');\n  const [include, setInclude] = useState([]);\n  const [exclude, setExclude] = useState([]);\n\n  const {\n    data: { me },\n  } = useQuery(CURRENT_USER_QUERY);\n\n  const toast = useToast();\n\n  return (\n    <>\n      <Box display=\"flex\" py={4}>\n        <Box flex={1} alignItems=\"center\" display=\"flex\">\n          <Heading fontSize=\"2xl\" color=\"text\" fontWeight={500}>\n            Marketplace\n          </Heading>\n        </Box>\n      </Box>\n      <Box {...CardStyle} background=\"white\">\n        {/* {(() => {\n          if (!me) return null;\n          if (me.buyer && me.buyer.status) {\n            return ( */}\n        <>\n          <Box display=\"flex\" paddingX=\"1em\" paddingY=\"1em\" flexWrap=\"wrap\">\n            <Pagination\n              leftDisabled={pageNum === 0}\n              onLeft={() => setPageNum(pageNum - 1)}\n              onRight={() => setPageNum(pageNum + 1)}\n            />\n            <Box flex={1}>\n              <InputGroup width=\"100%\" borderColor=\"gray.300\">\n                <InputLeftElement\n                  children={<Icon name=\"search\" color=\"gray.300\" />}\n                />\n                <Input\n                  value={searchBar}\n                  onChange={e => {\n                    setSearchBar(e.target.value);\n                    setPageNum(0);\n                  }}\n                  onKeyPress={e => {\n                    if (e.key === 'Enter') {\n                      setSearchEntry(searchBar);\n                    }\n                  }}\n                  placeholder=\"Search\"\n                />\n              </InputGroup>\n            </Box>\n          </Box>\n          {(() => {\n            if (channelsError || !data || !data.channels) return null;\n            return (\n              <>\n                <Box\n                  display=\"flex\"\n                  flexWrap=\"wrap\"\n                  background=\"#f5f5f5\"\n                  paddingY=\".7em\"\n                  paddingX=\"1em\"\n                >\n                  {option(\n                    'Channel',\n                    data.channels.map(a => a.name),\n                    a => setSelectedChannel(a),\n                    selectedChannel\n                  )}\n                  {option(\n                    'Location',\n                    ['US', 'CN', 'All'],\n                    a => setItemLocationCountry(a),\n                    itemLocationCountry\n                  )}\n                  {option(\n                    'Items per page',\n                    [10, 50, 100],\n                    a => setLimit(a),\n                    limit\n                  )}\n                </Box>\n                {searchEntry &&\n                  data.channels.filter(\n                    order => order.name === selectedChannel\n                  )[0].type === 'MARKETPLACE' && (\n                    <MarketplaceSearch\n                      {...{\n                        search: searchEntry,\n                        limit,\n                        sort: value,\n                        pageNum,\n                        exclude,\n                        include,\n                        priceCurrency,\n                        price,\n                        itemLocationCountry,\n                        atcDisabled,\n                        addMPItem,\n                      }}\n                    />\n                  )}\n                {data.channels.length > 0 &&\n                  data.channels.filter(\n                    order => order.name === selectedChannel\n                  )[0].type === 'ZINC' && (\n                    <ZincSearch\n                      addZincItem={addZincItem}\n                      atcDisabled={atcDisabled}\n                      searchEntry={searchEntry}\n                      token={\n                        data.channels.filter(c => c.type === 'ZINC')[0].settings\n                          .key\n                      }\n                    />\n                  )}\n                {data.channels.length > 0 &&\n                  data.channels.filter(\n                    order => order.name === selectedChannel\n                  )[0].type === 'SHOPIFY' && (\n                    <ShopifySearch\n                      addCustomItem={(a, b) =>\n                        addCustomItem(\n                          a,\n                          b,\n                          data.channels.filter(\n                            order => order.name === selectedChannel\n                          )[0].settings.shopURL,\n                          data.channels.filter(\n                            order => order.name === selectedChannel\n                          )[0].settings.key\n                        )\n                      }\n                      checkout={() =>\n                        toast({\n                          position: 'top-right',\n                          title: `Checkout`,\n                          status: 'success',\n                          duration: 2000,\n                          isClosable: true,\n                        })\n                      }\n                      client=\"Marketplace\"\n                      atcDisabled={atcDisabled}\n                      searchEntry={searchEntry}\n                      apiKey={\n                        data.channels.filter(\n                          order => order.name === selectedChannel\n                        )[0].settings.key\n                      }\n                      url={\n                        data.channels.filter(\n                          order => order.name === selectedChannel\n                        )[0].settings.shopURL\n                      }\n                    />\n                  )}\n              </>\n            );\n          })()}\n        </>\n        {/* );\n          }\n          return (\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              width=\"100%\"\n              height=\"200px\"\n            >\n              <Link href=\"/settings\">\n                <a>\n                  <Button background=\"#DDEBF7\" borderRadius={3}>\n                    <Heading fontSize=\"lg\" fontWeight={700} color=\"#1070CA\">\n                      APPLY FOR BETA ACCESS\n                    </Heading>\n                  </Button>\n                </a>\n              </Link>\n            </Box>\n          );\n        })()} */}\n      </Box>\n    </>\n  );\n};\n\nexport default Find;\n","import React, { Component } from 'react';\nimport {\n  Box,\n  Button,\n  Heading,\n  Text,\n  Icon,\n  PseudoBox,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n} from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\nimport VariantSelector from './VariantSelector';\n\nclass MktProduct extends Component {\n  static propTypes = {\n    product: PropTypes.object,\n    addVariantToCart: PropTypes.func,\n    atcDisabled: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedOptions: {},\n      selectedVariantQuantity: 1,\n    };\n  }\n\n  componentWillMount() {\n    const { product } = this.props;\n    product.options.forEach(selector => {\n      this.setState(prevState => ({\n        selectedOptions: {\n          ...prevState.selectedOptions,\n          [selector.name]: selector.values[0],\n        },\n      }));\n    });\n  }\n\n  handleOptionChange = event => {\n    const { product } = this.props;\n    const { target } = event;\n    const { selectedOptions } = this.state;\n    selectedOptions[target.name] = target.value;\n\n    const selectedVariant = product.variants.edges.find(variant =>\n      variant.node.selectedOptions.every(\n        selectedOption =>\n          selectedOptions[selectedOption.name] === selectedOption.value\n      )\n    ).node;\n\n    this.setState({\n      selectedVariant,\n      selectedVariantImage: selectedVariant.image.src,\n    });\n  };\n\n  handleQuantityChange = event => {\n    this.setState({\n      selectedVariantQuantity: event,\n    });\n  };\n\n  handleQuantityDown = () => {\n    this.setState(prevState => ({\n      selectedVariantQuantity: prevState.selectedVariantQuantity - 1 || 1,\n    }));\n  };\n\n  handleQuantityUp = () => {\n    this.setState(prevState => ({\n      selectedVariantQuantity: prevState.selectedVariantQuantity + 1,\n    }));\n  };\n\n  findImage = (images, variantId) => {\n    const primary = images[0];\n\n    const image = images.filter(function(a) {\n      return a.variant_ids.includes(variantId);\n    })[0];\n\n    return (image || primary).src;\n  };\n\n  render() {\n    const { product, addVariantToCart, atcDisabled } = this.props;\n    const {\n      selectedVariantImage,\n      selectedVariantQuantity,\n      selectedVariant,\n    } = this.state;\n    const variantImage =\n      selectedVariantImage || product.images.edges[0].node.src;\n    const variant = selectedVariant || product.variants.edges[0].node;\n    const variantQuantity = selectedVariantQuantity || 1;\n    const variantSelectors = product.options.map(option => (\n      <VariantSelector\n        handleOptionChange={this.handleOptionChange}\n        key={option.id.toString()}\n        option={option}\n      />\n    ));\n    return (\n      <>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          borderTop=\"0.1rem solid #dfe3e8\"\n        >\n          <Box padding={4}>\n            {product.images.edges.length && (\n              <Box\n                background=\"white\"\n                border=\"1px solid #e8e9ea\"\n                borderRadius={3}\n                height=\"90px\"\n                width=\"90px\"\n              >\n                <Box\n                  as=\"img\"\n                  src={variantImage}\n                  alt={`${product.title} product shot`}\n                />\n              </Box>\n            )}\n          </Box>\n          <Box padding={4} paddingLeft={0} marginTop={1} marginBottom=\"auto\">\n            <Heading fontSize=\"md\" color=\"text\" fontWeight={500}>\n              {product.title}\n            </Heading>\n            <Heading size={400} marginRight={10} color=\"green.600\">\n              ${variant.price}\n            </Heading>\n            <Box display=\"flex\" marginTop={1} marginBottom={7}>\n              {variantSelectors}\n            </Box>\n            {!atcDisabled && (\n              <Box display=\"flex\">\n                <Box\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  justifyContent=\"center\"\n                  paddingRight={5}\n                >\n                  <PseudoBox>\n                    <Text fontSize=\".65rem\" fontWeight=\"600\" color=\"gray.500\">\n                      QUANTITY\n                    </Text>\n                    <NumberInput\n                      size=\"sm\"\n                      value={selectedVariantQuantity}\n                      onChange={this.handleQuantityChange}\n                      min={1}\n                      width=\"80px\"\n                    >\n                      <NumberInputField\n                        focusBorderColor=\"blue.500\"\n                        textAlign=\"center\"\n                        _hover={{ borderColor: 'blue.500' }}\n                        height=\"25px\"\n                      />\n                      <NumberInputStepper width=\"25px\">\n                        <NumberIncrementStepper\n                          bg=\"#f6f7f9\"\n                          color=\"blue.500\"\n                          _active={{ bg: 'blue.500' }}\n                          _hover={{ bg: 'blue.500', color: 'white' }}\n                          children={<Icon name=\"add\" color=\"currentColor\" />}\n                          marginTop=\"0px !important\"\n                          borderTopWidth=\"0px !important\"\n                        />\n                      </NumberInputStepper>\n                      <NumberInputStepper left=\"0\" width=\"25px\">\n                        <NumberDecrementStepper\n                          bg=\"#f6f7f9\"\n                          color=\"blue.500\"\n                          _active={{ bg: 'blue.500' }}\n                          _hover={{ bg: 'blue.500', color: 'white' }}\n                          children={<Icon name=\"minus\" color=\"currentColor\" />}\n                          borderLeft=\"0px\"\n                          borderRight=\"1px solid #E2E8F0\"\n                          marginTop=\"0px !important\"\n                          borderTopWidth=\"0px !important\"\n                        />\n                      </NumberInputStepper>\n                    </NumberInput>\n                  </PseudoBox>\n                  <Button\n                    background=\"#DDEBF7\"\n                    borderRadius={3}\n                    marginRight={1}\n                    px={2}\n                    mx={3}\n                    mt=\"auto\"\n                    height={6}\n                    onClick={() =>\n                      addVariantToCart(variant.id, selectedVariantQuantity)\n                    }\n                    disabled={atcDisabled}\n                  >\n                    <Heading\n                      letterSpacing=\"wide\"\n                      fontSize=\"sm\"\n                      fontWeight={700}\n                      color=\"#1070CA\"\n                    >\n                      ADD TO CART\n                    </Heading>\n                  </Button>\n                </Box>\n              </Box>\n            )}\n          </Box>\n        </Box>\n      </>\n    );\n  }\n}\n\nexport default MktProduct;\n","import React, { Component } from 'react';\nimport { Box, Heading, Select } from '@chakra-ui/core';\n\nclass VariantSelector extends Component {\n  render() {\n    const {\n      option: { name, values },\n      handleOptionChange,\n    } = this.props;\n\n    return (\n      <Box marginRight={10}>\n        <Heading\n          fontSize=\"sm\"\n          color=\"gray.500\"\n          letterSpacing=\"wide\"\n          fontWeight={600}\n        >\n          {name}\n        </Heading>\n        <Select\n          mt={1}\n          height={6}\n          fontSize=\"12px\"\n          name={name}\n          key={name}\n          onChange={handleOptionChange}\n          iconSize={4}\n          borderRadius={3}\n          background=\"#f7f7f7\"\n        >\n          {values.map(value => (\n            <option value={value} key={`${name}-${value}`}>{`${value}`}</option>\n          ))}\n        </Select>\n      </Box>\n    );\n  }\n}\n\nexport default VariantSelector;\n","import React from 'react';\nimport Link from 'next/link';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Box, Spinner, Heading, Button } from '@chakra-ui/core';\nimport { gql } from 'apollo-boost';\nimport MktProduct from './MktProduct';\nimport { CURRENT_USER_QUERY } from '../../user/User';\n\nconst getItemsQuery = gql`\n  query getItems(\n    $search: String\n    $limit: Int\n    $sort: String\n    $pageNum: Int\n    $exclude: Json\n    $include: Json\n    $priceCurrency: String\n    $price: String\n    $itemLocationCountry: String\n  ) {\n    getItems(\n      search: $search\n      limit: $limit\n      sort: $sort\n      pageNum: $pageNum\n      exclude: $exclude\n      include: $include\n      priceCurrency: $priceCurrency\n      price: $price\n      itemLocationCountry: $itemLocationCountry\n    ) {\n      item\n    }\n  }\n`;\n\nfunction MarketplaceSearch({\n  search,\n  limit,\n  sort,\n  pageNum,\n  exclude,\n  include,\n  priceCurrency,\n  price,\n  itemLocationCountry,\n  atcDisabled,\n  addMPItem,\n}) {\n  const {\n    data: { me },\n  } = useQuery(CURRENT_USER_QUERY);\n\n  const allItems = useQuery(getItemsQuery, {\n    variables: {\n      search,\n      limit,\n      sort: sort.value,\n      pageNum,\n      exclude,\n      include,\n      priceCurrency,\n      price,\n      itemLocationCountry,\n    },\n  });\n\n  const { data, error, loading } = allItems;\n\n  if (me && (!me.buyer || !me.buyer.status)) {\n    return (\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        width=\"100%\"\n        height=\"200px\"\n      >\n        <Link href=\"/settings\">\n          <a>\n            <Button background=\"#DDEBF7\" borderRadius={3}>\n              <Heading fontSize=\"lg\" fontWeight={700} color=\"#1070CA\">\n                GET MARKETPLACE BETA ACCESS\n              </Heading>\n            </Button>\n          </a>\n        </Link>\n      </Box>\n    );\n  }\n\n  if (loading)\n    return (\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        height=\"100vh\"\n      >\n        <Spinner\n          thickness=\"4px\"\n          speed=\"0.65s\"\n          emptyColor=\"gray.200\"\n          color=\"blue.500\"\n          size=\"xl\"\n        />\n      </Box>\n    );\n  if (error || !data.getItems.item || data.getItems.item.length < 1)\n    return (\n      <Box paddingX=\"1em\" paddingY=\"1em\">\n        <Box\n          background=\"tint2\"\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          flexDirection=\"column\"\n          borderRadius={3}\n        >\n          <Heading margin=\"1em\" size={600}>\n            No items found.\n          </Heading>\n        </Box>\n      </Box>\n    );\n  return (\n    <>\n      {data.getItems.item.data.products.edges.map(product => (\n        <MktProduct\n          addVariantToCart={(a, b) => addMPItem(a, b)}\n          checkout={() => toaster.success(`checkout`)}\n          key={product.node.id.toString()}\n          product={product.node}\n          client=\"Marketplace\"\n          atcDisabled={atcDisabled}\n        />\n      ))}\n    </>\n  );\n}\n\nexport default MarketplaceSearch;\n","import React, { useState, useEffect } from 'react';\nimport MktProduct from '../MarketplaceSearch/MktProduct';\n\nfunction ShopifySearch({\n  addCustomItem,\n  atcDisabled,\n  searchEntry,\n  token,\n  apiKey,\n  url,\n}) {\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    async function findItems() {\n      const query = `\n      query AllOrdersQuery($query: String)\n      {\n        products(query: $query first:5) \n        {\n          pageInfo {\n            hasNextPage\n            hasPreviousPage\n          }\n          edges {\n            node {\n              id\n              title\n              options {\n                id\n                name\n                values\n              }\n              variants(first: 250) {\n                pageInfo {\n                  hasNextPage\n                  hasPreviousPage\n                }\n                edges {\n                  node {\n                    id\n                    title\n                    selectedOptions {\n                      name\n                      value\n                    }\n                    image {\n                      src\n                    }\n                    price\n                  }\n                }\n              }\n              images(first: 250) {\n                pageInfo {\n                  hasNextPage\n                  hasPreviousPage\n                }\n                edges {\n                  node {\n                    src\n                  }\n                }\n              }\n            }\n          }\n          }\n        }\n      `;\n\n      const variables = {\n        query: searchEntry,\n      };\n\n      const items = await fetch(`https://${url}.myshopify.com/api/graphql`, {\n        method: 'POST',\n        body: JSON.stringify({ query, variables }),\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Shopify-Storefront-Access-Token': apiKey,\n        },\n      })\n        .then(res => res.json())\n        .then(json => setResults(json.data.products.edges));\n    }\n\n    searchEntry && findItems();\n  }, [apiKey, searchEntry, url]);\n\n  return results.map(product => (\n    <MktProduct\n      addVariantToCart={(a, b) => addCustomItem(a, b)}\n      checkout={() => toaster.success(`checkout`)}\n      key={product.node.id.toString()}\n      product={product.node}\n      client=\"Marketplace\"\n      atcDisabled={atcDisabled}\n    />\n  ));\n}\n\nexport default ShopifySearch;\n","import React, { Component } from 'react';\nimport {\n  Box,\n  Heading,\n  Text,\n  Icon,\n  Button,\n  PseudoBox,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n} from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\n\nclass AmzProduct extends Component {\n  static propTypes = {\n    product: PropTypes.object,\n    addZincItem: PropTypes.func,\n    atcDisabled: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedOptions: {},\n      selectedVariantQuantity: 1,\n    };\n  }\n\n  handleQuantityChange = event => {\n    this.setState({\n      selectedVariantQuantity: event,\n    });\n  };\n\n  handleQuantityDown = () => {\n    this.setState(prevState => ({\n      selectedVariantQuantity: prevState.selectedVariantQuantity - 1 || 1,\n    }));\n  };\n\n  handleQuantityUp = () => {\n    this.setState(prevState => ({\n      selectedVariantQuantity: prevState.selectedVariantQuantity + 1,\n    }));\n  };\n\n  findImage = (images, variantId) => {\n    const primary = images[0];\n\n    const image = images.filter(function(a) {\n      return a.variant_ids.includes(variantId);\n    })[0];\n\n    return (image || primary).src;\n  };\n\n  render() {\n    const { product, addZincItem, atcDisabled } = this.props;\n    console.log(product);\n    const {\n      selectedVariantImage,\n      selectedVariantQuantity,\n      selectedVariant,\n    } = this.state;\n\n    return (\n      <>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          borderTop=\"0.1rem solid #dfe3e8\"\n        >\n          <Box flex={1} padding={15}>\n            {product.image && (\n              <Box\n                background=\"white\"\n                border=\"1px solid #e8e9ea\"\n                borderRadius={3}\n              >\n                <Box\n                  as=\"img\"\n                  src={product.image}\n                  alt={`${product.title} product shot`}\n                />\n              </Box>\n            )}\n          </Box>\n          <Box\n            flex={6}\n            padding={15}\n            paddingLeft={0}\n            marginTop={3}\n            marginBottom=\"auto\"\n          >\n            <Heading fontSize=\"md\" color=\"text\" fontWeight={500}>\n              {`${product.title.slice(0, 70)}...`}\n            </Heading>\n            <Box display=\"flex\" alignItems=\"center\">\n              <Icon name=\"star\" color=\"yellow.400\" mr={2} />\n              <Text paddingRight={3} color=\"gray.600\">\n                {product.stars}\n              </Text>\n              <Text fontSize=\"sm\" color=\"gray.400\">\n                ({product.num_reviews})\n              </Text>\n              <Text fontSize=\"sm\" mx={2}>\n                Â·\n              </Text>\n              <a\n                href={`https://amazon.com/gp/product/${product.product_id}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Text fontSize=\"sm\">{product.product_id}</Text>\n              </a>\n            </Box>\n\n            <Heading fontSize=\"md\" marginRight={10} color=\"green.600\" mb={2}>\n              ${product.price / 100}\n            </Heading>\n            {!atcDisabled && (\n              <Box display=\"flex\">\n                <Box\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  justifyContent=\"center\"\n                  paddingRight={5}\n                >\n                  <PseudoBox>\n                    <Text fontSize=\".65rem\" fontWeight=\"600\" color=\"gray.500\">\n                      QUANTITY\n                    </Text>\n                    <NumberInput\n                      size=\"sm\"\n                      value={selectedVariantQuantity}\n                      onChange={this.handleQuantityChange}\n                      min={1}\n                      width=\"80px\"\n                    >\n                      <NumberInputField\n                        focusBorderColor=\"blue.500\"\n                        textAlign=\"center\"\n                        _hover={{ borderColor: 'blue.500' }}\n                        height=\"25px\"\n                      />\n                      <NumberInputStepper width=\"25px\">\n                        <NumberIncrementStepper\n                          bg=\"#f6f7f9\"\n                          color=\"blue.500\"\n                          _active={{ bg: 'blue.500' }}\n                          _hover={{ bg: 'blue.500', color: 'white' }}\n                          children={<Icon name=\"add\" color=\"currentColor\" />}\n                          marginTop=\"0px !important\"\n                          borderTopWidth=\"0px !important\"\n                        />\n                      </NumberInputStepper>\n                      <NumberInputStepper left=\"0\" width=\"25px\">\n                        <NumberDecrementStepper\n                          bg=\"#f6f7f9\"\n                          color=\"blue.500\"\n                          _active={{ bg: 'blue.500' }}\n                          _hover={{ bg: 'blue.500', color: 'white' }}\n                          children={<Icon name=\"minus\" color=\"currentColor\" />}\n                          borderLeft=\"0px\"\n                          borderRight=\"1px solid #E2E8F0\"\n                          marginTop=\"0px !important\"\n                          borderTopWidth=\"0px !important\"\n                        />\n                      </NumberInputStepper>\n                    </NumberInput>\n                  </PseudoBox>\n                  <Button\n                    background=\"#DDEBF7\"\n                    borderRadius={3}\n                    marginRight={1}\n                    px={2}\n                    mx={3}\n                    mt=\"auto\"\n                    height={6}\n                    onClick={() =>\n                      addZincItem(\n                        product.product_id,\n                        selectedVariantQuantity,\n                        `${product.title.slice(0, 70)}...`,\n                        product.image,\n                        product.price / 100\n                      )\n                    }\n                    disabled={atcDisabled}\n                  >\n                    <Heading\n                      letterSpacing=\"wide\"\n                      fontSize=\"sm\"\n                      fontWeight={700}\n                      color=\"#1070CA\"\n                    >\n                      ADD TO CART\n                    </Heading>\n                  </Button>\n                </Box>\n              </Box>\n              // <Box display=\"flex\">\n              //   <Box\n              //     display=\"flex\"\n              //     alignItems=\"center\"\n              //     justifyContent=\"center\"\n              //     paddingRight={5}\n              //   >\n              //     <Box display=\"flex\" paddingRight={5} height={20}>\n              //       <Box\n              //         display=\"flex\"\n              //         alignItems=\"center\"\n              //         background=\"#f4f4f4\"\n              //         paddingX={5}\n              //         borderRadius={2}\n              //         boxShadow=\"0 0 2px rgba(67, 90, 111, 0.3)\"\n              //       >\n              //         <Icon\n              //           color=\"#425A70\"\n              //           icon=\"minus\"\n              //           appearance=\"minimal\"\n              //           size={12}\n              //           cursor=\"pointer\"\n              //           onClick={this.handleQuantityDown}\n              //         />\n\n              //         <Text size={300} marginX={9}>\n              //           {selectedVariantQuantity}\n              //         </Text>\n\n              //         <Icon\n              //           color=\"#425A70\"\n              //           icon=\"plus\"\n              //           appearance=\"minimal\"\n              //           size={12}\n              //           cursor=\"pointer\"\n              //           onClick={this.handleQuantityUp}\n              //         />\n              //       </Box>\n              //     </Box>\n              //     <Box height={20}>\n              //       <Button\n              //         boxShadow=\"0 0 2px rgba(67, 90, 111, 0.3)\"\n              //         intent=\"primary\"\n              //         height={20}\n              //         disabled={atcDisabled}\n              //         onClick={() =>\n              //           addZincItem(\n              //             product.product_id,\n              //             selectedVariantQuantity,\n              //             `${product.title.slice(0, 70)}...`,\n              //             product.image,\n              //             product.price / 100\n              //           )\n              //         }\n              //       >\n              //         Add to Cart\n              //       </Button>\n              //     </Box>\n              //   </Box>\n              // </Box>\n            )}\n          </Box>\n        </Box>\n      </>\n    );\n  }\n}\n\nexport default AmzProduct;\n","import React, { useState, useEffect } from 'react';\n\nimport AmzProduct from './AmzProduct';\nimport { front, prodFront } from '../../../config';\n\nfunction ZincSearch({ addZincItem, atcDisabled, searchEntry, token }) {\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    async function findItems() {\n      const res = await fetch(\n        `${\n          process.env.NODE_ENV === 'development' ? front : prodFront\n        }/api/zinc/search?query=${searchEntry}&token=${token}`\n      )\n        .then(res => res.json())\n        .then(json => setResults(json))\n        .catch(error => setError('Error: ', error));\n    }\n\n    searchEntry && findItems();\n  }, [searchEntry, token]);\n\n  return results.map(product => (\n    <>\n      <div>{error}</div>\n      <AmzProduct\n        product={product}\n        addVariantToCart={a => toaster.success(a)}\n        atcDisabled={atcDisabled}\n        addZincItem={(a, b, c, d, e) => addZincItem(a, b, c, d, e)}\n      />\n    </>\n  ));\n}\n\nexport default ZincSearch;\n","import { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport { withRouter } from 'next/router';\nimport {\n  Box,\n  PseudoBox,\n  Heading,\n  Icon,\n  Input,\n  Text,\n  Button,\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n  useToast,\n} from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { CHANNELS_QUERY, channelsQueryVars } from './Page';\nimport Signout from '../user/Signout';\nimport { front, prodFront } from '../../config';\n\nconst CREATE_CHANNEL_MUTATION = gql`\n  mutation CREATE_CHANNEL_MUTATION(\n    $name: String!\n    $type: ChannelType!\n    $settings: Json!\n  ) {\n    createChannel(name: $name, type: $type, settings: $settings) {\n      id\n      type\n      name\n      createdAt\n      settings\n    }\n  }\n`;\n\nconst Divider = (\n  <Box\n    flexShrink={0}\n    height=\"3px\"\n    backgroundColor=\"rgb(44, 71, 118)\"\n    borderRadius={1}\n    marginY={1}\n    marginX={3}\n  />\n);\n\nconst option = (name, options, update, selected) => (\n  <Box marginBottom={2}>\n    <Heading fontSize=\"sm\" fontWeight={500} marginBottom={2} color=\"gray.600\">\n      {name}\n    </Heading>\n    <Box width=\"100%\">\n      {options.map((a, index) => (\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          p={2}\n          mt={2}\n          borderRadius={2}\n          bg={a === selected ? 'blue.50' : 'gray.50'}\n          onClick={() => update(a)}\n          cursor=\"pointer\"\n        >\n          <Icon\n            name=\"check-circle\"\n            color={a === selected ? 'blue.200' : 'gray.400'}\n            mr={3}\n          />\n\n          <Heading\n            fontSize=\"xs\"\n            fontWeight={500}\n            color={a === selected ? 'blue.600' : 'gray.500'}\n            letterSpacing=\"wide\"\n            textTransform=\"uppercase\"\n          >\n            {a}\n          </Heading>\n        </Box>\n      ))}\n    </Box>\n  </Box>\n);\n\nexport const NavGroupTitle = ({ title, icon, fd }) => (\n  <Box display=\"flex\" flexDirection={fd || 'row'} alignItems=\"center\">\n    <Heading\n      my={2}\n      ml={4}\n      mr=\"auto\"\n      textTransform=\"uppercase\"\n      letterSpacing=\"wide\"\n      fontSize=\"sm\"\n      fontWeight={800}\n      color=\"#d7dae0\"\n    >\n      {title}\n    </Heading>\n    {icon}\n  </Box>\n);\n\nfunction postRequest(url, data) {\n  return fetch(url, {\n    credentials: 'same-origin', // 'include', default: 'omit'\n    method: 'POST', // 'GET', 'PUT', 'DELETE', etc.\n    body: JSON.stringify({ shops: data }), // Use correct payload (matching 'Content-Type')\n    headers: { 'Content-Type': 'application/json' },\n  });\n}\n\nconst Header = ({\n  router,\n  logo,\n  onClick,\n  channels,\n  channelsError,\n  shops,\n  shopsError,\n}) => {\n  const [type, setType] = useState('zinc');\n  const [shopURL, setShopURL] = useState('');\n  const [name, setName] = useState('');\n  const [key, setKey] = useState('');\n  const [secret, setSecret] = useState('');\n  const toast = useToast();\n\n  const [createChannel] = useMutation(CREATE_CHANNEL_MUTATION, {\n    refetchQueries: [\n      {\n        query: CHANNELS_QUERY,\n        variables: channelsQueryVars,\n      },\n    ],\n  });\n\n  useEffect(() => {\n    postRequest(\n      `${process.env.NODE_ENV === 'development' ? front : prodFront}/_shopify`,\n      shops\n    );\n  }, [shops]);\n\n  const { asPath } = router;\n\n  const NavItem = ({ icon, iconColor, title, href }) => (\n    <Box\n      borderLeft={`3px solid ${\n        asPath && asPath.startsWith(href) ? 'rgb(66, 95, 146)' : 'transparent'\n      }`}\n      background={asPath && asPath.startsWith(href) ? 'rgb(35, 61, 106)' : null}\n      onSelect={onClick}\n    >\n      <Link href={href}>\n        <PseudoBox\n          onSelect={onClick}\n          cursor=\"pointer\"\n          width=\"100%\"\n          height=\"40px\"\n          display=\"flex\"\n          alignItems=\"center\"\n          _hover={asPath && !asPath.startsWith(href) && { bg: '#192c4e' }}\n        >\n          <Icon\n            name={icon}\n            color={iconColor || '#ffffff'}\n            marginLeft=\"13px\"\n            // size={15}\n          />\n          <Heading\n            color=\"#fff\"\n            ml={2}\n            fontSize={15}\n            overflow=\"visible\"\n            textTransform=\"capitalize\"\n          >\n            {title}\n          </Heading>\n        </PseudoBox>\n      </Link>\n    </Box>\n  );\n\n  return (\n    <Box\n      background=\"rgb(23, 43, 77)\"\n      minHeight=\"100vh\"\n      display=\"flex\"\n      flexDirection=\"column\"\n    >\n      <Box>\n        <Box width=\"100%\">\n          {logo}\n          <Box py={2}>\n            <NavGroupTitle title=\"Orders\" />\n            <NavItem icon=\"delta\" title=\"Pending\" href=\"/pending\" />\n            <NavItem icon=\"time\" title=\"Processed\" href=\"/processed\" />\n            <NavItem icon=\"check-circle\" title=\"Completed\" href=\"/completed\" />\n          </Box>\n          {Divider}\n          <Box py={2}>\n            <NavGroupTitle title=\"Products\" />\n            <NavItem icon=\"database\" title=\"All Products\" href=\"/products\" />\n            <NavItem icon=\"globe\" title=\"Marketplace\" href=\"/find\" />\n          </Box>\n          {Divider}\n          <Box py={2}>\n            <NavGroupTitle\n              title={\n                <Link href=\"/shops\">\n                  <Box color=\"#d7dae0\" cursor=\"pointer\">\n                    Shops\n                  </Box>\n                </Link>\n              }\n              fd={shops && shops.length === 0 && 'column'}\n              icon={\n                <Popover>\n                  {shops.length > 0 ? (\n                    <PopoverTrigger>\n                      <Button\n                        variantColor=\"green\"\n                        backgroundImage=\"linear-gradient(to bottom, #23C277, #399D6C)\"\n                        borderRadius=\"50%\"\n                        height=\"20px\"\n                        minWidth=\"20px\"\n                        px={0}\n                        mr={4}\n                      >\n                        <Icon size={5} name=\"small-add\" />\n                      </Button>\n                    </PopoverTrigger>\n                  ) : (\n                    <PopoverTrigger>\n                      <Box px={4} mt={2} width=\"100%\">\n                        <Button\n                          variantColor=\"green\"\n                          variant=\"ghost\"\n                          bg=\"green.50\"\n                          width=\"100%\"\n                          borderRadius={3}\n                          marginRight={1}\n                          px={2}\n                          textTransform=\"uppercase\"\n                          letterSpacing=\"wide\"\n                          fontSize=\"md\"\n                          fontWeight={700}\n                          _hover={{ opacity: 0.8 }}\n                        >\n                          Add first shop\n                        </Button>\n                      </Box>\n                    </PopoverTrigger>\n                  )}\n                  <PopoverContent zIndex={4}>\n                    <Box\n                      width=\"100%\"\n                      display=\"flex\"\n                      alignItems=\"left\"\n                      justifyContent=\"center\"\n                      flexDirection=\"column\"\n                      padding={15}\n                    >\n                      <form\n                        method=\"GET\"\n                        action=\"/shopify/auth\"\n                        style={{ width: '100%' }}\n                      >\n                        <Text\n                          fontSize=\"sm\"\n                          color=\"gray.600\"\n                          mb={1}\n                          fontWeight={500}\n                        >\n                          Shop Name\n                        </Text>\n                        <Input label=\"Shop Name\" mb={2} />\n\n                        <Text\n                          fontSize=\"sm\"\n                          color=\"gray.600\"\n                          mb={1}\n                          fontWeight={500}\n                        >\n                          Shop URL\n                        </Text>\n                        <Input label=\"Shop URL\" mb={1} id=\"shop\" name=\"shop\" />\n                        <Text fontSize=\"xs\" color=\"gray.500\" mb={1}>\n                          Must end in .myshopify.com\n                        </Text>\n\n                        <Button\n                          variantColor=\"green\"\n                          variant=\"ghost\"\n                          backgroundColor=\"green.50\"\n                          borderRadius={3}\n                          marginRight={1}\n                          px={3}\n                          height={8}\n                          width=\"100%\"\n                          type=\"submit\"\n                        >\n                          <Heading\n                            fontSize=\"sm\"\n                            fontWeight={700}\n                            textTransform=\"uppercase\"\n                            letterSpacing=\"wide\"\n                          >\n                            Add Shop\n                          </Heading>\n                        </Button>\n                      </form>\n                    </Box>\n                  </PopoverContent>\n                </Popover>\n              }\n            />\n            {(() => {\n              if (shopsError || !shops) return null;\n              return shops.map((shop, index) => (\n                <Box key={index}>\n                  <NavItem\n                    icon=\"vinyl\"\n                    iconColor=\"green.500\"\n                    title={shop.name}\n                    href={`/shop?shop=${shop.domain.split('.')[0]}`}\n                  />\n                </Box>\n              ));\n            })()}\n          </Box>\n          {Divider}\n          <Box py={2}>\n            <NavGroupTitle\n              title={\n                <Box color=\"#d7dae0\" cursor=\"pointer\">\n                  Channels\n                </Box>\n              }\n              fd={channels && channels.length === 0 && 'column'}\n              icon={\n                <Popover>\n                  {channels && channels.length === 0 ? (\n                    <PopoverTrigger>\n                      <Box px={4} mt={2} width=\"100%\">\n                        <Button\n                          variantColor=\"blue\"\n                          variant=\"ghost\"\n                          bg=\"blue.50\"\n                          width=\"100%\"\n                          borderRadius={3}\n                          marginRight={1}\n                          px={2}\n                          textTransform=\"uppercase\"\n                          letterSpacing=\"wide\"\n                          fontSize=\"md\"\n                          fontWeight={700}\n                          _hover={{ opacity: 0.8 }}\n                        >\n                          Add first channel\n                        </Button>\n                      </Box>\n                    </PopoverTrigger>\n                  ) : (\n                    <PopoverTrigger>\n                      <Button\n                        variantColor=\"green\"\n                        backgroundImage=\"linear-gradient(to bottom, #23C277, #399D6C)\"\n                        borderRadius=\"50%\"\n                        height=\"20px\"\n                        minWidth=\"20px\"\n                        px={0}\n                        mr={4}\n                      >\n                        <Icon size={5} name=\"small-add\" />\n                      </Button>\n                    </PopoverTrigger>\n                  )}\n                  <PopoverContent zIndex={4}>\n                    <Box\n                      width=\"100%\"\n                      display=\"flex\"\n                      alignItems=\"left\"\n                      justifyContent=\"center\"\n                      flexDirection=\"column\"\n                      padding={15}\n                    >\n                      {option(\n                        'Channel Type',\n                        ['zinc', 'shopify'],\n                        a => setType(a),\n                        type\n                      )}\n                      <Text\n                        fontSize=\"sm\"\n                        color=\"gray.600\"\n                        mb={1}\n                        fontWeight={500}\n                      >\n                        Name\n                      </Text>\n                      <Input\n                        label=\"Name\"\n                        mb={2}\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                      />\n                      {type === 'zinc' && (\n                        <>\n                          <Text\n                            fontSize=\"sm\"\n                            color=\"gray.600\"\n                            mb={1}\n                            fontWeight={500}\n                          >\n                            API Key\n                          </Text>\n                          <Input\n                            label=\"API Key\"\n                            mb={1}\n                            value={key}\n                            onChange={e => setKey(e.target.value)}\n                          />\n                          <Text fontSize=\"xs\" color=\"gray.500\" mb={2}>\n                            You must get the key at Zinc.io\n                          </Text>\n                        </>\n                      )}\n                      {type === 'shopify' && (\n                        <>\n                          <Text\n                            fontSize=\"sm\"\n                            color=\"gray.600\"\n                            mb={1}\n                            fontWeight={500}\n                          >\n                            Shop URL\n                          </Text>\n                          <Input\n                            label=\"Name\"\n                            mb={2}\n                            value={shopURL}\n                            onChange={e => setShopURL(e.target.value)}\n                          />\n                          <Text\n                            fontSize=\"sm\"\n                            color=\"gray.600\"\n                            mb={1}\n                            fontWeight={500}\n                          >\n                            API Key\n                          </Text>\n                          <Input\n                            label=\"key\"\n                            mb={2}\n                            value={key}\n                            onChange={e => setKey(e.target.value)}\n                          />\n                          <Text\n                            fontSize=\"sm\"\n                            color=\"gray.600\"\n                            mb={1}\n                            fontWeight={500}\n                          >\n                            Secret\n                          </Text>\n                          <Input\n                            label=\"Secret\"\n                            mb={2}\n                            value={secret}\n                            onChange={e => setSecret(e.target.value)}\n                          />\n                        </>\n                      )}\n\n                      <Button\n                        variantColor=\"green\"\n                        variant=\"ghost\"\n                        backgroundColor=\"green.50\"\n                        borderRadius={3}\n                        marginRight={1}\n                        px={3}\n                        height={8}\n                        width=\"100%\"\n                        onClick={async () => {\n                          await createChannel({\n                            variables: {\n                              type: type.toUpperCase(),\n                              name,\n                              settings: {\n                                ...(key && { key }),\n                                ...(secret && { secret }),\n                                ...(shopURL && { shopURL }),\n                              },\n                            },\n                          });\n                          setName('');\n                          setKey('');\n                          setSecret('');\n                          setShopURL('');\n                          toast({\n                            position: 'top-right',\n                            title: 'Channel has been added.',\n                            status: 'success',\n                            duration: 2000,\n                            isClosable: true,\n                          });\n                        }}\n                      >\n                        <Heading\n                          fontSize=\"sm\"\n                          fontWeight={700}\n                          textTransform=\"uppercase\"\n                          letterSpacing=\"wide\"\n                        >\n                          Add Channel\n                        </Heading>\n                      </Button>\n                    </Box>\n                  </PopoverContent>\n                </Popover>\n              }\n            />\n            {(() => {\n              if (channelsError || !channels) return null;\n              return channels.map((channel, index) => (\n                <Box key={index}>\n                  <NavItem\n                    icon=\"vinyl\"\n                    iconColor=\"green.500\"\n                    title={channel.name}\n                    href={`/channel?channel=${channel.name}`}\n                  />\n                </Box>\n              ));\n            })()}\n          </Box>\n          {Divider}\n          <Box>\n            {/* <NavGroupTitle title=\"Settings\" /> */}\n            <NavItem icon=\"settings\" title=\"Settings\" href=\"/settings\" />\n          </Box>\n        </Box>\n      </Box>\n      <Box marginTop=\"auto\">\n        <Signout />\n      </Box>\n    </Box>\n  );\n};\n\nexport default withRouter(Header);\n","import Head from 'next/head';\n\nconst Meta = () => (\n  <Head>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta charSet=\"utf-8\" />\n    <link rel=\"shortcut icon\" href=\"/static/favicon.png\" />\n    <title>Openship</title>\n  </Head>\n);\n\nexport default Meta;\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Drawer,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  Heading,\n  Text,\n  Button,\n  DrawerBody,\n  InputGroup,\n  Input,\n  InputLeftElement,\n  InputRightElement,\n  Icon,\n} from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport { ALL_SHOPS_QUERY, shopsQueryVars } from '../shops/ShopList';\nimport Logo from '../logo/Logo';\nimport Header from './Header';\nimport Meta from './Meta';\n\nexport const CHANNELS_QUERY = gql`\n  query($first: Int!, $skip: Int!) {\n    channels(orderBy: createdAt_ASC, first: $first, skip: $skip) {\n      id\n      type\n      name\n      createdAt\n      settings\n    }\n  }\n`;\n\nexport const channelsQueryVars = {\n  skip: 0,\n  first: 10,\n};\n\nconst Page = ({ children, shopsURL }) => {\n  const [isShown, setIsShown] = useState(false);\n\n  const {\n    data: channelsData,\n    error: channelsError,\n    loading: channelsLoading,\n  } = useQuery(CHANNELS_QUERY, {\n    variables: channelsQueryVars,\n  });\n\n  const {\n    data: shopsData,\n    error: shopsError,\n    loading: shopsLoading,\n  } = useQuery(ALL_SHOPS_QUERY, {\n    variables: shopsQueryVars,\n  });\n  return (\n    <>\n      <Meta />\n      <Box className=\"layout\">\n        {(() => {\n          if (shopsError || !shopsData || !shopsData.shops) return null;\n          const { shops } = shopsData;\n          return (\n            <>\n              <Box className=\"hidden\">\n                <Box\n                  position=\"sticky\"\n                  background=\"rgb(23, 43, 77)\"\n                  top=\"0\"\n                  display=\"grid\"\n                  boxShadow=\"0 0 1px rgba(67,90,111,.47), 0 2px 4px -2px rgba(67,90,111,.3)\"\n                  width=\"270px\"\n                >\n                  <Header\n                    channels={channelsData && channelsData.channels}\n                    channelsError={channelsError}\n                    shops={shopsData.shops}\n                    shopsError={shopsError}\n                    logo={\n                      <Box margin={18} marginBottom={0}>\n                        <Logo />\n                      </Box>\n                    }\n                  />\n                </Box>\n              </Box>\n              <Box className=\"show\">\n                <Drawer\n                  size=\"sm\"\n                  isOpen={isShown}\n                  placement=\"left\"\n                  onClose={() => setIsShown(false)}\n                >\n                  <DrawerOverlay />\n                  <DrawerContent>\n                    <DrawerCloseButton color=\"White\" />\n                    <DrawerBody bg=\"#f9f9fb\" p={0}>\n                      <Box>\n                        <Header\n                          channels={channelsData && channelsData.channels}\n                          channelsError={channelsError}\n                          shops={shopsData.shops}\n                          shopsError={shopsError}\n                          isShown={isShown}\n                          onClick={() => setIsShown(false)}\n                        />\n                      </Box>\n                    </DrawerBody>\n                  </DrawerContent>\n                </Drawer>\n                <Box display=\"flex\" padding={4} background=\"rgb(23, 43, 77)\">\n                  <Box\n                    marginLeft={2}\n                    flex={1}\n                    alignItems=\"center\"\n                    display=\"flex\"\n                    onClick={() => setIsShown(true)}\n                  >\n                    <Box className=\"hover\" borderRadius={7}>\n                      <svg\n                        width={38}\n                        height={38}\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"#fff\"\n                        strokeWidth={1.5}\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"bevel\"\n                      >\n                        <line x1={3} y1={12} x2={21} y2={12} />\n                        <line x1={3} y1={6} x2={13} y2={6} />\n                        <line x1={10} y1={18} x2={21} y2={18} />\n                      </svg>\n                    </Box>\n                  </Box>\n\n                  <Box width=\"200px\" marginRight={7}>\n                    <Logo />\n                  </Box>\n                </Box>\n              </Box>\n              <Box\n                padding=\"1.3rem\"\n                paddingTop=\"0rem\"\n                width=\"100%\"\n                background=\"rgb(245, 246, 247)\"\n                minHeight=\"100vh\"\n              >\n                {shops.length || shopsURL ? (\n                  <Box maxWidth=\"1100px\" marginY=\"0px\" marginX=\"auto\">\n                    {children}\n                  </Box>\n                ) : (\n                  <Box\n                    {...{\n                      backgroundImage: `url(\n                      \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 304 304' width='304' height='304'%3E%3Cpath fill='%23d0d0d0' fill-opacity='0.1' d='M44.1 224a5 5 0 1 1 0 2H0v-2h44.1zm160 48a5 5 0 1 1 0 2H82v-2h122.1zm57.8-46a5 5 0 1 1 0-2H304v2h-42.1zm0 16a5 5 0 1 1 0-2H304v2h-42.1zm6.2-114a5 5 0 1 1 0 2h-86.2a5 5 0 1 1 0-2h86.2zm-256-48a5 5 0 1 1 0 2H0v-2h12.1zm185.8 34a5 5 0 1 1 0-2h86.2a5 5 0 1 1 0 2h-86.2zM258 12.1a5 5 0 1 1-2 0V0h2v12.1zm-64 208a5 5 0 1 1-2 0v-54.2a5 5 0 1 1 2 0v54.2zm48-198.2V80h62v2h-64V21.9a5 5 0 1 1 2 0zm16 16V64h46v2h-48V37.9a5 5 0 1 1 2 0zm-128 96V208h16v12.1a5 5 0 1 1-2 0V210h-16v-76.1a5 5 0 1 1 2 0zm-5.9-21.9a5 5 0 1 1 0 2H114v48H85.9a5 5 0 1 1 0-2H112v-48h12.1zm-6.2 130a5 5 0 1 1 0-2H176v-74.1a5 5 0 1 1 2 0V242h-60.1zm-16-64a5 5 0 1 1 0-2H114v48h10.1a5 5 0 1 1 0 2H112v-48h-10.1zM66 284.1a5 5 0 1 1-2 0V274H50v30h-2v-32h18v12.1zM236.1 176a5 5 0 1 1 0 2H226v94h48v32h-2v-30h-48v-98h12.1zm25.8-30a5 5 0 1 1 0-2H274v44.1a5 5 0 1 1-2 0V146h-10.1zm-64 96a5 5 0 1 1 0-2H208v-80h16v-14h-42.1a5 5 0 1 1 0-2H226v18h-16v80h-12.1zm86.2-210a5 5 0 1 1 0 2H272V0h2v32h10.1zM98 101.9V146H53.9a5 5 0 1 1 0-2H96v-42.1a5 5 0 1 1 2 0zM53.9 34a5 5 0 1 1 0-2H80V0h2v34H53.9zm60.1 3.9V66H82v64H69.9a5 5 0 1 1 0-2H80V64h32V37.9a5 5 0 1 1 2 0zM101.9 82a5 5 0 1 1 0-2H128V37.9a5 5 0 1 1 2 0V82h-28.1zm16-64a5 5 0 1 1 0-2H146v44.1a5 5 0 1 1-2 0V18h-26.1zm102.2 270a5 5 0 1 1 0 2H98v14h-2v-16h124.1zM242 149.9V160h16v34h-16v62h48v48h-2v-46h-48v-66h16v-30h-16v-12.1a5 5 0 1 1 2 0zM53.9 18a5 5 0 1 1 0-2H64V2H48V0h18v18H53.9zm112 32a5 5 0 1 1 0-2H192V0h50v2h-48v48h-28.1zm-48-48a5 5 0 0 1-9.8-2h2.07a3 3 0 1 0 5.66 0H178v34h-18V21.9a5 5 0 1 1 2 0V32h14V2h-58.1zm0 96a5 5 0 1 1 0-2H137l32-32h39V21.9a5 5 0 1 1 2 0V66h-40.17l-32 32H117.9zm28.1 90.1a5 5 0 1 1-2 0v-76.51L175.59 80H224V21.9a5 5 0 1 1 2 0V82h-49.59L146 112.41v75.69zm16 32a5 5 0 1 1-2 0v-99.51L184.59 96H300.1a5 5 0 0 1 3.9-3.9v2.07a3 3 0 0 0 0 5.66v2.07a5 5 0 0 1-3.9-3.9H185.41L162 121.41v98.69zm-144-64a5 5 0 1 1-2 0v-3.51l48-48V48h32V0h2v50H66v55.41l-48 48v2.69zM50 53.9v43.51l-48 48V208h26.1a5 5 0 1 1 0 2H0v-65.41l48-48V53.9a5 5 0 1 1 2 0zm-16 16V89.41l-34 34v-2.82l32-32V69.9a5 5 0 1 1 2 0zM12.1 32a5 5 0 1 1 0 2H9.41L0 43.41V40.6L8.59 32h3.51zm265.8 18a5 5 0 1 1 0-2h18.69l7.41-7.41v2.82L297.41 50H277.9zm-16 160a5 5 0 1 1 0-2H288v-71.41l16-16v2.82l-14 14V210h-28.1zm-208 32a5 5 0 1 1 0-2H64v-22.59L40.59 194H21.9a5 5 0 1 1 0-2H41.41L66 216.59V242H53.9zm150.2 14a5 5 0 1 1 0 2H96v-56.6L56.6 162H37.9a5 5 0 1 1 0-2h19.5L98 200.6V256h106.1zm-150.2 2a5 5 0 1 1 0-2H80v-46.59L48.59 178H21.9a5 5 0 1 1 0-2H49.41L82 208.59V258H53.9zM34 39.8v1.61L9.41 66H0v-2h8.59L32 40.59V0h2v39.8zM2 300.1a5 5 0 0 1 3.9 3.9H3.83A3 3 0 0 0 0 302.17V256h18v48h-2v-46H2v42.1zM34 241v63h-2v-62H0v-2h34v1zM17 18H0v-2h16V0h2v18h-1zm273-2h14v2h-16V0h2v16zm-32 273v15h-2v-14h-14v14h-2v-16h18v1zM0 92.1A5.02 5.02 0 0 1 6 97a5 5 0 0 1-6 4.9v-2.07a3 3 0 1 0 0-5.66V92.1zM80 272h2v32h-2v-32zm37.9 32h-2.07a3 3 0 0 0-5.66 0h-2.07a5 5 0 0 1 9.8 0zM5.9 0A5.02 5.02 0 0 1 0 5.9V3.83A3 3 0 0 0 3.83 0H5.9zm294.2 0h2.07A3 3 0 0 0 304 3.83V5.9a5 5 0 0 1-3.9-5.9zm3.9 300.1v2.07a3 3 0 0 0-1.83 1.83h-2.07a5 5 0 0 1 3.9-3.9zM97 100a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0-16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-48 32a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm32 48a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-16 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm32-16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0-32a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16 32a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm32 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0-16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-16-64a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16 0a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16 96a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16-144a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0 32a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16-32a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16-16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-96 0a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16-32a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm96 0a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-16-64a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16-16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-32 0a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0-16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-16 0a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-16 0a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-16 0a3 3 0 1 0 0-6 3 3 0 0 0 0 6zM49 36a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-32 0a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm32 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zM33 68a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16-48a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0 240a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16 32a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-16-64a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-16-32a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm80-176a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16 0a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-16-16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm32 48a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16-16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0-32a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm112 176a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-16 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zM17 180a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0 16a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0-32a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16 0a3 3 0 1 0 0-6 3 3 0 0 0 0 6zM17 84a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm32 64a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm16-16a3 3 0 1 0 0-6 3 3 0 0 0 0 6z'%3E%3C/path%3E%3C/svg%3E\"\n                    )`,\n                    }}\n                    minHeight=\"100vh\"\n                  >\n                    <Box\n                      display=\"flex\"\n                      flexDirection=\"column\"\n                      justifyContent=\"center\"\n                      alignItems=\"center\"\n                      paddingTop={150}\n                    >\n                      <Heading\n                        fontSize=\"2xl\"\n                        fontWeight={500}\n                        color=\"text\"\n                        paddingBottom={15}\n                      >\n                        Take full control of your e-commerce operations\n                      </Heading>\n                      <Text fontSize=\"lg\" color=\"gray.600\">\n                        Get started by adding a Shopify shop\n                      </Text>\n                      <form method=\"GET\" action=\"/shopify/auth\">\n                        <InputGroup size=\"md\" marginTop={10} width=\"25rem\">\n                          <Input\n                            id=\"shop\"\n                            name=\"shop\"\n                            pr=\"4.5rem\"\n                            pl=\"2.4rem\"\n                            placeholder=\"franksbikeshop.myshopify.com\"\n                            borderColor=\"gray.300\"\n                          />\n                          <InputLeftElement\n                            children={<Icon name=\"shop\" color=\"gray.400\" />}\n                          />\n\n                          <InputRightElement width=\"3.5rem\">\n                            <Button\n                              type=\"submit\"\n                              h=\"1.75rem\"\n                              size=\"sm\"\n                              variantColor=\"green\"\n                            >\n                              GO\n                            </Button>\n                          </InputRightElement>\n                        </InputGroup>\n                      </form>\n                    </Box>\n                  </Box>\n                )}\n              </Box>\n            </>\n          );\n        })()}\n      </Box>\n    </>\n  );\n};\n\nexport default Page;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Logo = ({ color = '#fff' }) => (\n  <svg viewBox=\"0 180 495 110\">\n    <path\n      d=\"M363.113 225.168v34.25h4.485l.059-14.875.059-14.875.378-1.333c4.174-14.693 22.894-17.61 29.026-4.524 1.598 3.409 1.653 4.117 1.656 21.315l.003 14.292h4.334l-.001-15.292c0-18.154-.014-18.293-2.181-22.592-6.398-12.687-24.211-14.177-32.297-2.701l-.938 1.331-.043-14.623-.042-14.623h-4.498v34.25m58.255-33.16c-3.029 1.152-2.963 5.483.098 6.5 2.973.987 5.588-2.148 4.105-4.923-.76-1.423-2.698-2.15-4.203-1.577m-91.136 19.258c-10.35 1.515-16.239 12.834-10.094 19.403 2.404 2.569 5.247 4.08 10.808 5.745 7.354 2.201 10.19 3.454 12.148 5.368 3.745 3.66 1.265 10.937-4.498 13.203-3.121 1.228-8.388 1.342-11.109.24-2.793-1.131-4.367-2.164-6.672-4.379l-1.722-1.656-1.684 1.684-1.684 1.683.693.828c.711.849 2.302 2.209 3.778 3.229 11.074 7.656 26.697 3.412 28.849-7.836 1.477-7.719-2.752-12.598-13.599-15.691-10.536-3.003-13.267-4.896-13.234-9.169.069-8.786 13.141-11.463 20.564-4.21 1.897 1.854 1.434 1.871 3.423-.128l1.664-1.67-1.417-1.345c-1.304-1.237-3.41-2.697-4.833-3.35-1.965-.902-2.538-1.132-3.611-1.449-2.162-.64-5.393-.847-7.77-.5m131.297.076c-5.072.853-10.561 4.334-13.746 8.716-.41.565-.804 1.027-.875 1.027-.071 0-.129-2.025-.129-4.5v-4.5h-4.5v68.176l2.209-.046 2.208-.047.083-14.917.084-14.916.956 1.269c10.248 13.603 29.494 11.074 37.031-4.867 8.195-17.335-5.661-38.365-23.321-35.395m-351.504.742c-15.57 2.77-24.614 19.791-17.977 33.832 8.692 18.388 33.913 18.949 43.479.967 9.126-17.155-6.307-38.213-25.502-34.799m60.171-.067c-3.553.629-8.208 2.874-10.785 5.203-.896.809-.965.663-.965-2.064v-2.41l-4.792.044-4.791.045v66.666h9.5l.041-12.5c.023-6.875.079-12.6.125-12.722.057-.151.418.068 1.125.683 14.482 12.585 36.608 1.048 36.525-19.044-.046-11.341-6.423-20.026-17.233-23.469-2.092-.666-6.262-.872-8.75-.432m55.083-.178c-.137.027-.812.137-1.5.244-11.226 1.747-19.693 11.758-19.737 23.335-.062 16.186 14.997 27.977 30.64 23.991 2.622-.668 6.26-2.422 8.971-4.324 1.588-1.115 4.793-4.148 4.793-4.536 0-.12-1.377-1.593-3.059-3.274l-3.059-3.055-.732.807c-6.32 6.976-15.075 8.456-21.983 3.716-2.847-1.953-5.834-6.594-5.834-9.065 0-.234 1.824-.26 18.066-.26 16.543 0 18.074-.023 18.17-.272.057-.149.187-1.03.289-1.958 1.559-14.207-8.56-25.541-22.691-25.416-1.146.01-2.196.04-2.334.067m56.334.167c-3.486.625-7 2.269-9.857 4.611-.425.349-.817.634-.87.634-.053 0-.118-.993-.143-2.208l-.047-2.208-4.792-.045-4.791-.044v46.51l4.791-.044 4.792-.044.097-14.25c.06-8.859.161-14.502.268-14.917.42-1.641.612-2.21 1.076-3.191 3.937-8.333 16.619-8.509 20.629-.286 1.142 2.343 1.082 1.437 1.177 17.811l.086 14.833 4.792.044 4.792.044v-14.921c0-17.595-.047-18.134-1.915-22.194-3.456-7.507-11.659-11.646-20.085-10.135m138.5 23.745v23.667h4.333v-47.333h-4.333v23.666m48.583-19.764c15.991 4.474 19.104 27.686 4.993 37.232-13.886 9.394-31.402-6.828-25.88-23.968 3.027-9.397 12.717-15.55 20.887-13.264m-237.583 4.373c4.659.954 9.833 6.53 9.833 10.596 0 .071-6.038.129-13.417.129s-13.416-.063-13.416-.139c0-.335.741-2.353 1.202-3.273 2.981-5.95 8.954-8.714 15.798-7.313m-113.681.575c12.331 3.295 15.12 20.628 4.496 27.938-11.321 7.789-25.727-3.694-21.811-17.387 2.209-7.724 10.038-12.495 17.315-10.551m58.097-.073c9.184 2.318 13.84 13.745 9.21 22.602-5.756 11.009-20.066 10.313-24.972-1.216-4.758-11.18 4.804-24.153 15.762-21.386\"\n      fill={color || '#fff'}\n    />\n    <g transform=\"matrix(1.3, 0, 0, 1.3, 5.39868, 205.029358)\">\n      <rect\n        x={27}\n        y={28}\n        style={{ fill: color }}\n        width={2}\n        height={18}\n        data-original=\"#424A60\"\n        className=\"active-path\"\n        data-old_color=\"#ffffff\"\n      />\n      <rect\n        x=\"37.5\"\n        y=\"2.893\"\n        transform=\"matrix(0.7071 0.7071 -0.7071 0.7071 20.8223 -23.2696)\"\n        style={{ fill: color }}\n        width={2}\n        height=\"21.213\"\n        data-original=\"#424A60\"\n        className=\"active-path\"\n        data-old_color=\"#ffffff\"\n      />\n      <rect\n        x={15}\n        y=\"21.858\"\n        transform=\"matrix(0.7071 0.7071 -0.7071 0.7071 30.1421 -0.7696)\"\n        style={{ fill: color }}\n        width={2}\n        height=\"28.284\"\n        data-original=\"#424A60\"\n        className=\"active-path\"\n        data-old_color=\"#ffffff\"\n      />\n      <rect\n        x=\"10.722\"\n        y=\"13.5\"\n        transform=\"matrix(0.7071 0.7071 -0.7071 0.7071 15.6716 -8.8345)\"\n        style={{ fill: color }}\n        width=\"15.556\"\n        height={2}\n        data-original=\"#424A60\"\n        className=\"active-path\"\n        data-old_color=\"#ffffff\"\n      />\n      <rect\n        x=\"26.893\"\n        y=\"32.5\"\n        transform=\"matrix(0.7071 0.7071 -0.7071 0.7071 34.6716 -16.7046)\"\n        style={{ fill: color }}\n        width=\"21.213\"\n        height={2}\n        data-original=\"#424A60\"\n        className=\"active-path\"\n        data-old_color=\"#ffffff\"\n      />\n      <circle\n        style={{ fill: '#735DD0' }}\n        cx={48}\n        cy={5}\n        r={5}\n        data-original=\"#43B05C\"\n        data-old_color=\"#745CD4\"\n      />\n      <circle\n        style={{ fill: '#14B5D0' }}\n        cx={28}\n        cy={48}\n        r={5}\n        data-original=\"#7383BF\"\n        data-old_color=\"#7383BF\"\n      />\n      <circle\n        style={{ fill: '#47B881' }}\n        cx={5}\n        cy={46}\n        r={5}\n        data-original=\"#57D8AB\"\n        data-old_color=\"#43BC84\"\n      />\n      <circle\n        style={{ fill: '#EC4C47' }}\n        cx={12}\n        cy={8}\n        r={3}\n        data-original=\"#D75A4A\"\n        data-old_color=\"#F08F4C\"\n      />\n      <circle\n        style={{ fill: '#EBBA16' }}\n        cx={44}\n        cy={40}\n        r={3}\n        data-original=\"#EBBA16\"\n      />\n      <circle\n        style={{ fill: '#1070CA' }}\n        cx={28}\n        cy={24}\n        r={7}\n        data-original=\"#4B6DAA\"\n        data-old_color=\"#0A89CE\"\n      />\n    </g>\n  </svg>\n);\n\nexport default Logo;\n\nLogo.propTypes = {\n  color: PropTypes.string,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Text } from '@chakra-ui/core';\nimport CartItem from './MPCartItem';\n\nclass Cart extends Component {\n  static propTypes = {\n    checkout: PropTypes.object,\n    createCheckout: PropTypes.func,\n    setCheckout: PropTypes.func,\n    checkoutLineItemsRemove: PropTypes.func,\n  };\n\n  render() {\n    const {\n      cart,\n      checkout,\n      removeItem,\n      checkoutLineItemsUpdate,\n      loading,\n      cartName,\n      background,\n      color,\n    } = this.props;\n    return (\n      <Box\n        marginLeft=\"-3px\"\n        background={background || '#F1FAF5'}\n        paddingY=\".7em\"\n        paddingX=\"1em\"\n        border=\"1px solid #edf0f2\"\n      >\n        <Box marginBottom={2}>\n          {cart ? (\n            <a href={cart.webUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n              <Text fontSize=\"sm\" fontWeight={500} color={color || '#00783E'}>\n                {cartName} Cart\n              </Text>\n            </a>\n          ) : (\n            <Text fontWeight={500} color={color || '#00783E'}>\n              {cartName} Cart\n            </Text>\n          )}\n        </Box>\n        {cart && cart.lineItems && cart.lineItems.edges.length ? (\n          cart.lineItems.edges.map(a => (\n            <CartItem\n              removeItem={removeItem ? a => removeItem(a) : undefined}\n              checkoutID={cart.id}\n              checkoutLineItemsUpdate={\n                checkoutLineItemsUpdate\n                  ? a => checkoutLineItemsUpdate(a)\n                  : undefined\n              }\n              key={a.node.id.toString()}\n              lineItem={a.node}\n              loading={loading}\n            />\n          ))\n        ) : (\n          <Box\n            background=\"#fff\"\n            border=\"muted\"\n            padding={2}\n            display=\"flex\"\n            justifyContent=\"center\"\n          >\n            <Text fontSize=\"sm\" color=\"text\">\n              Cart is empty\n            </Text>\n          </Box>\n        )}\n      </Box>\n    );\n  }\n}\n\nexport default Cart;\n","import React, { Component } from 'react';\nimport {\n  Box,\n  Button,\n  Icon,\n  Heading,\n  Text,\n  Spinner,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n} from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\n\nfunction CartItem({\n  lineItem,\n  removeItem,\n  checkoutLineItemsUpdate,\n  checkoutID,\n  loading,\n}) {\n  function updateQuantity(lineItemId, quantity) {\n    checkoutLineItemsUpdate([\n      { id: lineItemId, quantity: parseInt(quantity, 10) },\n    ]);\n  }\n\n  return (\n    <Box background=\"#fff\" border=\"muted\" marginBottom={5}>\n      <Box display=\"flex\" alignItems=\"center\">\n        <Box height=\"100%\" background=\"white\">\n          {lineItem.variant.image && (\n            <Box\n              background=\"white\"\n              borderRight=\"1px solid #e8e9ea\"\n              height=\"70px\"\n              width=\"70px\"\n            >\n              <Box\n                as=\"img\"\n                src={lineItem.variant.image.src}\n                alt={`${lineItem.title} product shot`}\n              />\n            </Box>\n          )}\n        </Box>\n        <Box paddingRight={2} paddingLeft={3}>\n          <Heading fontSize=\"sm\" color=\"text\">\n            {lineItem.title}\n          </Heading>\n          <Box display=\"flex\" alignItems=\"center\">\n            <Text fontSize=\"xs\" color=\"gray.600\">\n              {lineItem.variant.title}\n            </Text>\n            <Box marginX={2}>Â·</Box>\n            <Heading fontSize=\"xs\" marginRight={10} color=\"green.600\">\n              ${(lineItem.quantity * lineItem.variant.price).toFixed(2)}\n            </Heading>\n          </Box>\n          {lineItem.quantity > 1 && (\n            <Text fontSize=\"xs\" color=\"gray.500\">\n              ${lineItem.variant.price} x {lineItem.quantity}\n            </Text>\n          )}\n        </Box>\n        <Box marginLeft=\"auto\" display=\"flex\" alignItems=\"center\">\n          {checkoutLineItemsUpdate && (\n            <>\n              {loading ? (\n                <Spinner size=\"sm\" color=\"blue.500\" mx={3} />\n              ) : (\n                <>\n                  <NumberInput\n                    size=\"sm\"\n                    value={lineItem.quantity}\n                    onChange={e => updateQuantity(lineItem.id, e)}\n                    min={0}\n                    width=\"80px\"\n                    mr={1}\n                  >\n                    <NumberInputField\n                      focusBorderColor=\"blue.500\"\n                      textAlign=\"center\"\n                      _hover={{ borderColor: 'blue.500' }}\n                      height=\"25px\"\n                    />\n                    <NumberInputStepper width=\"25px\">\n                      <NumberIncrementStepper\n                        bg=\"#f6f7f9\"\n                        color=\"blue.500\"\n                        _active={{ bg: 'blue.500' }}\n                        _hover={{ bg: 'blue.500', color: 'white' }}\n                        children={<Icon name=\"add\" color=\"currentColor\" />}\n                        marginTop=\"0px !important\"\n                        borderTopWidth=\"0px !important\"\n                      />\n                    </NumberInputStepper>\n                    <NumberInputStepper left=\"0\" width=\"25px\">\n                      <NumberDecrementStepper\n                        bg=\"#f6f7f9\"\n                        color=\"blue.500\"\n                        _active={{ bg: 'blue.500' }}\n                        _hover={{ bg: 'blue.500', color: 'white' }}\n                        children={<Icon name=\"minus\" color=\"currentColor\" />}\n                        borderLeft=\"0px\"\n                        borderRight=\"1px solid #E2E8F0\"\n                        marginTop=\"0px !important\"\n                        borderTopWidth=\"0px !important\"\n                      />\n                    </NumberInputStepper>\n                  </NumberInput>\n                </>\n              )}\n            </>\n          )}\n          {removeItem && (\n            <Button\n              aria-label=\"show line-items\"\n              height=\"1.3rem\"\n              minWidth=\"1.3rem\"\n              bg=\"transparent\"\n              color=\"#66788a\"\n              px={0}\n              mx={2}\n              onClick={() => removeItem([lineItem.id])}\n            >\n              <Icon name=\"small-close\" size={4} />\n            </Button>\n          )}\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default CartItem;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Text, Badge } from '@chakra-ui/core';\nimport CartItem from './ZincCartItem';\n\nclass Cart extends Component {\n  static propTypes = {\n    cart: PropTypes.object,\n    removeItem: PropTypes.func,\n    checkoutLineItemsUpdate: PropTypes.func,\n  };\n\n  render() {\n    const {\n      cart,\n      checkout,\n      removeItem,\n      checkoutLineItemsUpdate,\n      loading,\n    } = this.props;\n\n    return (\n      <Box\n        marginLeft=\"-3px\"\n        background=\"#EDF2F7\"\n        paddingY=\".7em\"\n        paddingX=\"1em\"\n        border=\"1px solid #edf0f2\"\n      >\n        <Box marginBottom={2} display=\"flex\" alignItems=\"center\">\n          <Text fontSize=\"sm\" fontWeight={500} color=\"#1A202C\">\n            Zinc Cart\n          </Text>\n          {checkout && checkout._type === 'error' && (\n            <Box marginLeft=\"auto\">\n              <a\n                href={`https://dash.zinc.io/orders/${checkout.request_id}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Badge variantColor=\"red\">Status: Error</Badge>\n              </a>\n            </Box>\n          )}\n          {checkout && checkout.tracking && (\n            <Box marginLeft=\"auto\">\n              <a\n                href={`https://dash.zinc.io/orders/${checkout.request_id}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Badge>\n                  Status: {checkout.tracking.length > 0 ? 'Shipped' : 'Pending'}\n                </Badge>\n              </a>\n            </Box>\n          )}\n        </Box>\n        {cart && cart.products && cart.products.length ? (\n          cart.products.map(a => (\n            <CartItem\n              removeItem={removeItem ? a => removeItem(a) : undefined}\n              checkoutLineItemsUpdate={\n                checkoutLineItemsUpdate\n                  ? (id, quantity) => checkoutLineItemsUpdate(id, quantity)\n                  : undefined\n              }\n              key={a.product_id}\n              lineItem={a}\n              loading={loading}\n            />\n          ))\n        ) : (\n          <Box\n            background=\"#fff\"\n            border=\"muted\"\n            padding={2}\n            display=\"flex\"\n            justifyContent=\"center\"\n          >\n            <Text fontSize=\"sm\">Cart is empty</Text>\n          </Box>\n        )}\n      </Box>\n    );\n  }\n}\n\nexport default Cart;\n","import React, { Component } from 'react';\nimport {\n  Box,\n  Button,\n  Icon,\n  Heading,\n  Text,\n  Spinner,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n} from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\n\nfunction CartItem({ lineItem, removeItem, checkoutLineItemsUpdate, loading }) {\n  return (\n    <Box background=\"#fff\" border=\"muted\" marginBottom={5}>\n      <Box display=\"flex\" alignItems=\"center\">\n        <Box height=\"100%\" background=\"white\">\n          {lineItem.src && (\n            <Box\n              background=\"white\"\n              borderRight=\"1px solid #e8e9ea\"\n              width=\"70px\"\n              maxHeight=\"100%\"\n            >\n              <Box\n                as=\"img\"\n                src={lineItem.src}\n                alt={`${lineItem.title} product shot`}\n              />\n            </Box>\n          )}\n        </Box>\n        <Box paddingRight={2} paddingLeft={3}>\n          <Heading fontSize=\"sm\" color=\"text\">\n            {lineItem.title}\n          </Heading>\n          <Box display=\"flex\" alignItems=\"center\">\n            <Text fontSize=\"xs\" color=\"gray.600\">\n              {lineItem.product_id}\n            </Text>\n            <Box marginX={2}>Â·</Box>\n            <Heading fontSize=\"xs\" marginRight={10} color=\"green.600\">\n              ${(lineItem.quantity * lineItem.price).toFixed(2)}\n            </Heading>\n          </Box>\n          {lineItem.quantity > 1 && (\n            <Text fontSize=\"xs\" color=\"gray.500\">\n              ${lineItem.price} x {lineItem.quantity}\n            </Text>\n          )}\n        </Box>\n        <Box marginLeft=\"auto\" display=\"flex\" alignItems=\"center\">\n          {checkoutLineItemsUpdate && (\n            <>\n              {loading ? (\n                <Spinner size=\"sm\" color=\"blue.500\" mx={3} />\n              ) : (\n                <>\n                  <NumberInput\n                    size=\"sm\"\n                    value={lineItem.quantity}\n                    onChange={e =>\n                      checkoutLineItemsUpdate(lineItem.product_id, e)\n                    }\n                    min={0}\n                    width=\"80px\"\n                    mr={1}\n                  >\n                    <NumberInputField\n                      focusBorderColor=\"blue.500\"\n                      textAlign=\"center\"\n                      _hover={{ borderColor: 'blue.500' }}\n                      height=\"25px\"\n                    />\n                    <NumberInputStepper width=\"25px\">\n                      <NumberIncrementStepper\n                        bg=\"#f6f7f9\"\n                        color=\"blue.500\"\n                        _active={{ bg: 'blue.500' }}\n                        _hover={{ bg: 'blue.500', color: 'white' }}\n                        children={<Icon name=\"add\" color=\"currentColor\" />}\n                        marginTop=\"0px !important\"\n                        borderTopWidth=\"0px !important\"\n                      />\n                    </NumberInputStepper>\n                    <NumberInputStepper left=\"0\" width=\"25px\">\n                      <NumberDecrementStepper\n                        bg=\"#f6f7f9\"\n                        color=\"blue.500\"\n                        _active={{ bg: 'blue.500' }}\n                        _hover={{ bg: 'blue.500', color: 'white' }}\n                        children={<Icon name=\"minus\" color=\"currentColor\" />}\n                        borderLeft=\"0px\"\n                        borderRight=\"1px solid #E2E8F0\"\n                        marginTop=\"0px !important\"\n                        borderTopWidth=\"0px !important\"\n                      />\n                    </NumberInputStepper>\n                  </NumberInput>\n                </>\n              )}\n            </>\n          )}\n          {removeItem && (\n            <Button\n              aria-label=\"show line-items\"\n              height=\"1.3rem\"\n              minWidth=\"1.3rem\"\n              bg=\"transparent\"\n              color=\"#66788a\"\n              px={0}\n              mx={2}\n              onClick={() => removeItem(lineItem.product_id)}\n            >\n              <Icon name=\"small-close\" size={4} />\n            </Button>\n          )}\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default CartItem;\n","import React, { useState } from 'react';\nimport { gql } from 'apollo-boost';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport {\n  Box,\n  Heading,\n  Spinner,\n  Text,\n  Icon,\n  Button,\n  useToast,\n} from '@chakra-ui/core';\nimport OrderListItem from '../common/orderListItem/OrderListItem';\nimport Find from '../find/Find';\nimport { CURRENT_USER_QUERY } from '../user/User';\nimport { CHANNELS_QUERY, channelsQueryVars } from '../layout/Page';\nimport OrderLine from '../common/orderListItem/OrderLine';\nimport { CardStyle } from '../common/DefaultStyles';\nimport MPCart from './Cart/MPCart';\nimport ZincCart from './Cart/ZincCart';\nimport { front, prodFront } from '../../config';\n\nasync function placeZincOrder(data, token, updateOrderFunc) {\n  try {\n    const response = await fetch(\n      `${\n        process.env.NODE_ENV === 'development' ? front : prodFront\n      }/api/zinc/purchase?token=${token}`,\n      {\n        credentials: 'same-origin',\n        mode: 'cors',\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-type': 'application/json',\n          'X-Requested-With': 'Fetch',\n        },\n        body: JSON.stringify({\n          data,\n        }),\n      }\n    );\n    const res = await response.json();\n    const update = await updateOrderFunc({\n      variables: {\n        id: data.client_notes.os_order_id,\n        zincCheckout: res,\n        processed: 'TRUE',\n      },\n    });\n    console.log('first2', res);\n  } catch (e) {\n    console.log('error', e);\n  }\n}\n\nasync function placeCustomOrder(cart, id, updateOrderFunc) {\n  try {\n    let cartObj = JSON.parse(cart);\n    cartObj[\"pId\"] = id;\n    let cartJson = JSON.stringify(cartObj);\n    const response = await fetch(\n      `${\n        process.env.NODE_ENV === 'development' ? front : prodFront\n      }/api/shopify/purchase`,\n      {\n        credentials: 'same-origin',\n        mode: 'cors',\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-type': 'application/json',\n          'X-Requested-With': 'Fetch',\n        },\n        body: cartJson,\n      }\n    );\n    const res = await response.json();\n    console.log(res);\n    // console.log(\"response received\");\n    const update = await updateOrderFunc({\n      variables: {\n        id,\n        customCheckout: res,\n        processed: 'TRUE',\n      },\n    }).then(function(data) {\n      // console.log(data, \"after update\");\n      // forceUpdate();\n    });\n    // console.log(\"first2\", res);\n  } catch (e) {\n    console.log('error', e);\n  }\n}\n\nexport const ORDER_QUERY = gql`\n  query OrdersQuery(\n    $skip: Int\n    $first: Int\n    $orderBy: OrderOrderByInput\n    $processed: Processed\n  ) {\n    orders(\n      first: $first\n      skip: $skip\n      orderBy: $orderBy\n      where: { processed: $processed }\n    ) {\n      id\n      orderId\n      orderName\n      email\n      first_name\n      last_name\n      streetAddress1\n      streetAddress2\n      city\n      state\n      zip\n      phone\n      lineItems\n      currency\n      totalPrice\n      subTotalPrice\n      totalDiscount\n      totalTax\n      createAt\n      mpCart\n      mpCheckout\n      zincCart\n      zincCheckout\n      customCheckout\n      customCart\n      processed\n      shopName\n    }\n  }\n`;\n\nexport const PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY {\n    ordersConnection(where: { processed: FALSE }) {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nconst UPDATE_ORDER_MUTATION = gql`\n  mutation updateOrder(\n    $id: ID!\n    $mpCart: String\n    $customCart: String\n    $customCheckout: Json\n    $zincCart: String\n    $zincCheckout: Json\n    $first_name: String\n    $last_name: String\n    $streetAddress1: String\n    $streetAddress2: String\n    $city: String\n    $state: String\n    $zip: String\n    $processed: Processed\n  ) {\n    updateOrder(\n      id: $id\n      mpCart: $mpCart\n      customCart: $customCart\n      customCheckout: $customCheckout\n      zincCart: $zincCart\n      zincCheckout: $zincCheckout\n      first_name: $first_name\n      last_name: $last_name\n      streetAddress1: $streetAddress1\n      streetAddress2: $streetAddress2\n      city: $city\n      state: $state\n      zip: $zip\n      processed: $processed\n    ) {\n      id\n      email\n    }\n  }\n`;\n\nconst UPSERT_MATCH_MUTATION = gql`\n  mutation upsertMatch($id: ID!) {\n    upsertMatch(id: $id) {\n      item\n    }\n  }\n`;\n\nconst PURCHASE_ORDER_MUTATION = gql`\n  mutation purchaseItems($ids: Json!) {\n    purchaseItems(ids: $ids) {\n      checkout\n      cart\n    }\n  }\n`;\n\nconst CREATE_CHECKOUT_MUTATION = gql`\n  mutation createCheckout($input: Json!) {\n    createCheckout(input: $input) {\n      checkout\n    }\n  }\n`;\n\nconst CHECKOUT_ADD_MUTATION = gql`\n  mutation checkoutLineItemsAdd($checkoutId: ID!, $lineItems: Json!) {\n    checkoutLineItemsAdd(checkoutId: $checkoutId, lineItems: $lineItems) {\n      checkout\n    }\n  }\n`;\n\nconst CHECKOUT_REMOVE_MUTATION = gql`\n  mutation checkoutLineItemsRemove($checkoutId: ID!, $lineItemIds: Json!) {\n    checkoutLineItemsRemove(\n      checkoutId: $checkoutId\n      lineItemIds: $lineItemIds\n    ) {\n      checkout\n    }\n  }\n`;\n\nconst CHECKOUT_UPDATE_MUTATION = gql`\n  mutation checkoutLineItemsUpdate($checkoutId: ID!, $lineItems: Json!) {\n    checkoutLineItemsUpdate(checkoutId: $checkoutId, lineItems: $lineItems) {\n      checkout\n    }\n  }\n`;\n\nconst DELETE_ORDER = gql`\n  mutation deleteOrder($id: ID!) {\n    deleteOrder(id: $id) {\n      id\n    }\n  }\n`;\n\nconst Layout = {\n  flex: '1 1 10rem',\n  marginLeft: '2rem',\n  marginTop: '2rem',\n};\n\nfunction PendingOrders() {\n  const [selectedOrderIndex, setSelectedOrderIndex] = useState(null);\n  const [skip, setSkip] = useState(0);\n  const [orderBy, setOrderBy] = useState('createdAt_ASC');\n  const [firstQ, setFirstQ] = useState(100);\n  const [open, setOpen] = useState(false);\n  const [cartLoading, setCartLoading] = useState(false);\n  const [processingOrder, setProcessingOrder] = useState(null);\n\n  const toast = useToast();\n\n  const {\n    data: { me },\n  } = useQuery(CURRENT_USER_QUERY);\n\n  const allOrders = useQuery(ORDER_QUERY, {\n    variables: {\n      skip,\n      first: firstQ,\n      orderBy,\n      processed: 'FALSE',\n    },\n  });\n\n  const allChannels = useQuery(CHANNELS_QUERY, {\n    variables: channelsQueryVars,\n  });\n\n  const {\n    data: channelsData,\n    error: channelsError,\n    loading: channelsLoading,\n  } = allChannels;\n\n  const pagination = useQuery(PAGINATION_QUERY);\n\n  const [deleteOrder] = useMutation(DELETE_ORDER, {\n    refetchQueries: [\n      {\n        query: ORDER_QUERY,\n        variables: { skip, first: firstQ, orderBy, processed: 'FALSE' },\n      },\n      {\n        query: PAGINATION_QUERY,\n      },\n    ],\n  });\n\n  const [\n    purchaseOrder,\n    { loading: purchaseOrderLoading, error: purchaseOrderError },\n  ] = useMutation(PURCHASE_ORDER_MUTATION, {\n    refetchQueries: [\n      {\n        query: ORDER_QUERY,\n        variables: { skip, first: firstQ, orderBy, processed: 'FALSE' },\n      },\n      {\n        query: PAGINATION_QUERY,\n      },\n    ],\n  });\n  const [updateOrder, { loading: updateOrderLoading }] = useMutation(\n    UPDATE_ORDER_MUTATION,\n    {\n      refetchQueries: [\n        {\n          query: ORDER_QUERY,\n          variables: { skip, first: firstQ, orderBy, processed: 'FALSE' },\n        },\n        {\n          query: PAGINATION_QUERY,\n        },\n      ],\n    }\n  );\n\n  const [createCheckout] = useMutation(CREATE_CHECKOUT_MUTATION, {\n    refetchQueries: [\n      {\n        query: ORDER_QUERY,\n        variables: { skip, first: firstQ, orderBy, processed: 'FALSE' },\n      },\n      {\n        query: PAGINATION_QUERY,\n      },\n    ],\n  });\n\n  const [checkoutLineItemsRemove] = useMutation(CHECKOUT_REMOVE_MUTATION, {\n    refetchQueries: [\n      {\n        query: ORDER_QUERY,\n        variables: { skip, first: firstQ, orderBy, processed: 'FALSE' },\n      },\n      {\n        query: PAGINATION_QUERY,\n      },\n    ],\n  });\n\n  const [checkoutLineItemsUpdate] = useMutation(CHECKOUT_UPDATE_MUTATION, {\n    refetchQueries: [\n      {\n        query: ORDER_QUERY,\n        variables: { skip, first: firstQ, orderBy, processed: 'FALSE' },\n      },\n      {\n        query: PAGINATION_QUERY,\n      },\n    ],\n  });\n\n  const [checkoutLineItemsAdd] = useMutation(CHECKOUT_ADD_MUTATION, {\n    refetchQueries: [\n      {\n        query: ORDER_QUERY,\n        variables: { skip, first: firstQ, orderBy, processed: 'FALSE' },\n      },\n      {\n        query: PAGINATION_QUERY,\n      },\n    ],\n  });\n\n  const [upsertMatch] = useMutation(UPSERT_MATCH_MUTATION);\n\n  async function _currentOrder(arg) {\n    setSelectedOrderIndex(arg);\n  }\n\n  async function overwrite(id) {\n    setCartLoading(true);\n\n    const upsertMatchRes = await upsertMatch({\n      variables: {\n        id,\n      },\n    });\n    toast({\n      position: 'top-right',\n      title: 'Line items have been matched to cart items',\n      status: 'success',\n      duration: 2000,\n      isClosable: true,\n    });\n    // setSelectedOrderIndex(null);\n    setCartLoading(false);\n  }\n\n  async function doPurchase(ids) {\n    const res = await purchaseOrder({\n      variables: {\n        ids,\n      },\n    });\n  }\n\n  async function createCheck(input, orderID) {\n    const varCheck = await createCheckout({\n      variables: {\n        input,\n      },\n    });\n\n    const newCheck = varCheck.data.createCheckout.checkout;\n\n    const res = await updateOrder({\n      variables: {\n        id: orderID,\n        mpCart: JSON.stringify(newCheck),\n      },\n    });\n  }\n\n  async function createCustomCheck(\n    input,\n    orderID,\n    createCheckoutFunc,\n    updateOrderFunc,\n    url,\n    key\n  ) {\n    const query = `\n    mutation checkoutCreate($input: CheckoutCreateInput!)\n    {\n      checkoutCreate(input: $input) {\n        userErrors {\n          message\n          field\n        }\n        checkout {\n          id\n          email\n          webUrl\n          subtotalPrice\n          totalTax\n          totalPrice\n          shippingAddress{\n            firstName\n            lastName\n            address1\n            address2\n            city\n            provinceCode\n            zip\n            country\n          }\n          lineItems (first:250) {\n            pageInfo {\n              hasNextPage\n              hasPreviousPage\n            }\n            edges {\n              node {\n                id\n                title\n                variant {\n                  id\n                  title\n                  image {\n                    src\n                  }\n                  price\n                }\n                quantity\n              }\n            }\n          }\n        }\n      }\n      }\n    `;\n\n    const variables = {\n      input,\n    };\n\n    const checkout = await fetch(`https://${url}.myshopify.com/api/graphql`, {\n      method: 'POST',\n      body: JSON.stringify({ query, variables }),\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Shopify-Storefront-Access-Token': key,\n      },\n    }).then(response => response.json());\n    console.log(checkout);\n\n    const newCheck = checkout.data.checkoutCreate.checkout;\n\n    const res = await updateOrderFunc({\n      variables: {\n        id: selectedOrderIndex,\n        customCart: JSON.stringify(newCheck),\n      },\n    });\n  }\n\n  async function addCustomVariant(\n    id,\n    quantity,\n    checkoutID,\n    checkoutLineItemsAddFunc,\n    updateOrderFunc,\n    url,\n    key\n  ) {\n    toast({\n      position: 'top-right',\n      title: 'custom checkout does exist',\n      status: 'success',\n      duration: 2000,\n      isClosable: true,\n    });\n    const query = `\n    mutation checkoutLineItemsAdd($lineItems: [CheckoutLineItemInput!]!, $checkoutId: ID!) {\n      checkoutLineItemsAdd(lineItems: $lineItems, checkoutId: $checkoutId) {\n        userErrors {\n          message\n          field\n        }\n        checkout {\n          id\n          email\n          webUrl\n          subtotalPrice\n          totalTax\n          totalPrice\n          shippingAddress {\n            address1\n            address2\n            city\n            countryCodeV2\n            provinceCode\n            zip\n            firstName\n            lastName\n          }\n          lineItems (first:250) {\n            pageInfo {\n              hasNextPage\n              hasPreviousPage\n            }\n            edges {\n              node {\n                id\n                title\n                variant {\n                  id\n                  title\n                  image {\n                    src\n                  }\n                  price\n                }\n                quantity\n              }\n            }\n          }\n        }\n      }\n    }\n    `;\n\n    const variables = {\n      checkoutId: checkoutID,\n      lineItems: [\n        {\n          variantId: id,\n          quantity,\n        },\n      ],\n    };\n\n    const checkout = await fetch(`https://${url}.myshopify.com/api/graphql`, {\n      method: 'POST',\n      body: JSON.stringify({ query, variables }),\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Shopify-Storefront-Access-Token': key,\n      },\n    }).then(res => res.json());\n    console.log(checkout);\n    const newCheck = checkout.data.checkoutLineItemsAdd.checkout;\n\n    const res = await updateOrderFunc({\n      variables: {\n        id: selectedOrderIndex,\n        customCart: JSON.stringify(newCheck),\n      },\n    });\n  }\n\n  async function addVariant(id, quantity, checkoutID) {\n    toast({\n      position: 'top-right',\n      title: 'checkout does exist',\n      status: 'success',\n      duration: 2000,\n      isClosable: true,\n    });\n    const varCheck = await checkoutLineItemsAdd({\n      variables: {\n        checkoutId: checkoutID,\n        lineItems: [\n          {\n            variantId: id,\n            quantity,\n          },\n        ],\n      },\n    });\n\n    const newCheck = varCheck.data.checkoutLineItemsAdd.checkout;\n\n    const res = await updateOrder({\n      variables: {\n        id: selectedOrderIndex,\n        mpCart: JSON.stringify(newCheck),\n      },\n    });\n  }\n\n  async function addZincItem(id, quantity, title, src, price, cart) {\n    const find =\n      cart &&\n      cart.products &&\n      cart.products.length &&\n      cart.products.find(obj => obj.product_id === id);\n\n    if (cart && cart.products && cart.products.length && find !== undefined) {\n      console.log(true);\n      console.log(find);\n      const newQ = find.quantity + quantity;\n      find.quantity = newQ;\n      console.log(find);\n      const res = await updateOrder({\n        variables: {\n          id: selectedOrderIndex,\n          zincCart: JSON.stringify({\n            products: [find, ...cart.products.filter(a => a.product_id !== id)],\n          }),\n        },\n      });\n    } else {\n      console.log(false);\n\n      const res = await updateOrder({\n        variables: {\n          id: selectedOrderIndex,\n          zincCart: JSON.stringify({\n            products: [\n              {\n                product_id: id,\n                quantity,\n                title,\n                price,\n                src,\n              },\n              ...(cart && cart.products && cart.products.length\n                ? cart.products\n                : []),\n            ],\n          }),\n        },\n      });\n    }\n  }\n\n  async function removeMPItem(lineItemIds, checkoutID) {\n    const varCheck = await checkoutLineItemsRemove({\n      variables: {\n        checkoutId: checkoutID,\n        lineItemIds,\n      },\n    });\n\n    const res = await updateOrder({\n      variables: {\n        id: selectedOrderIndex,\n        mpCart: JSON.stringify(varCheck.data.checkoutLineItemsRemove.checkout),\n      },\n    });\n  }\n\n  async function removeCustomItem(lineItemIds, checkoutID, key, url) {\n    const query = `\n    mutation checkoutLineItemsRemove($checkoutId: ID!, $lineItemIds: [ID!]!) {\n      checkoutLineItemsRemove(checkoutId: $checkoutId, lineItemIds: $lineItemIds) {\n        userErrors {\n          message\n          field\n        }\n        checkout {\n          id\n          email\n          webUrl\n          subtotalPrice\n          totalTax\n          totalPrice\n          shippingAddress {\n            address1\n            address2\n            city\n            countryCodeV2\n            provinceCode\n            zip\n            firstName\n            lastName\n          }\n          lineItems (first:250) {\n            pageInfo {\n              hasNextPage\n              hasPreviousPage\n            }\n            edges {\n              node {\n                id\n                title\n                variant {\n                  id\n                  title\n                  image {\n                    src\n                  }\n                  price\n                }\n                quantity\n              }\n            }\n          }\n        }\n      }\n    }\n    `;\n\n    const variables = {\n      checkoutId: checkoutID,\n      lineItemIds,\n    };\n\n    const checkout = await fetch(`https://${url}.myshopify.com/api/graphql`, {\n      method: 'POST',\n      body: JSON.stringify({ query, variables }),\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Shopify-Storefront-Access-Token': key,\n      },\n    }).then(res => res.json());\n\n    const res = await updateOrder({\n      variables: {\n        id: selectedOrderIndex,\n        customCart: JSON.stringify(\n          checkout.data.checkoutLineItemsRemove.checkout\n        ),\n      },\n    });\n  }\n\n  async function updateMPItem(lineItems, checkoutID) {\n    const varCheck = await checkoutLineItemsUpdate({\n      variables: {\n        checkoutId: checkoutID,\n        lineItems,\n      },\n    });\n\n    const res = await updateOrder({\n      variables: {\n        id: selectedOrderIndex,\n        mpCart: JSON.stringify(varCheck.data.checkoutLineItemsUpdate.checkout),\n      },\n    });\n  }\n\n  async function updateCustomItem(lineItems, checkoutID, key, url) {\n    const query = `\n    mutation checkoutLineItemsUpdate ($checkoutId: ID!, $lineItems: [CheckoutLineItemUpdateInput!]!) {\n      checkoutLineItemsUpdate(checkoutId: $checkoutId, lineItems: $lineItems) {\n        userErrors {\n          message\n          field\n        }\n        checkout {\n          id\n          email\n          webUrl\n          subtotalPrice\n          totalTax\n          totalPrice\n          shippingAddress {\n            address1\n            address2\n            city\n            countryCodeV2\n            provinceCode\n            zip\n            firstName\n            lastName\n          }\n          lineItems (first:250) {\n            pageInfo {\n              hasNextPage\n              hasPreviousPage\n            }\n            edges {\n              node {\n                id\n                title\n                variant {\n                  id\n                  title\n                  image {\n                    src\n                  }\n                  price\n                }\n                quantity\n              }\n            }\n          }\n        }\n      }\n    }\n    `;\n\n    const variables = {\n      checkoutId: checkoutID,\n      lineItems,\n    };\n\n    const checkout = await fetch(`https://${url}.myshopify.com/api/graphql`, {\n      method: 'POST',\n      body: JSON.stringify({ query, variables }),\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Shopify-Storefront-Access-Token': key,\n      },\n    }).then(res => res.json());\n\n    const res = await updateOrder({\n      variables: {\n        id: selectedOrderIndex,\n        customCart: JSON.stringify(\n          checkout.data.checkoutLineItemsUpdate.checkout\n        ),\n      },\n    });\n  }\n\n  function play() {\n    if (firstQ === 1) {\n      setFirstQ(100);\n      setOpen(false);\n      setSkip(0);\n    } else {\n      setFirstQ(1);\n      setOpen(true);\n    }\n    // setSkip(0);\n  }\n\n  return (\n    <>\n      <Box display=\"flex\" py={4}>\n        <Box flex={1} alignItems=\"center\" display=\"flex\">\n          <Heading fontSize=\"2xl\" color=\"text\" fontWeight={500}>\n            Pending Orders\n          </Heading>\n        </Box>\n      </Box>\n      <Box display=\"flex\" flexWrap=\"wrap\" marginLeft=\"-2rem\" marginTop=\"-2rem\">\n        {(() => {\n          if (allOrders.loading)\n            return (\n              <>\n                <Box {...Layout}>\n                  <Box {...CardStyle}>\n                    <Box\n                      display=\"flex\"\n                      alignItems=\"center\"\n                      justifyContent=\"center\"\n                      height=\"50vh\"\n                    >\n                      <Spinner\n                        thickness=\"4px\"\n                        speed=\"0.65s\"\n                        emptyColor=\"gray.200\"\n                        color=\"blue.500\"\n                        size=\"xl\"\n                      />\n                    </Box>\n                  </Box>\n                </Box>\n                <Box {...Layout}>\n                  <Box {...CardStyle} padding={3}>\n                    <Box\n                      p={2}\n                      display=\"flex\"\n                      borderLeft=\"3px solid #d9822b\"\n                      borderRight=\"1px solid #E2E8F0\"\n                      borderTop=\"1px solid #E2E8F0\"\n                      borderBottom=\"1px solid #E2E8F0\"\n                    >\n                      <Icon name=\"warning-2\" color=\"#d9812a\" mr={2} />\n                      <Heading fontSize=\"sm\" color=\"text\">\n                        Please choose an order or a line item.\n                      </Heading>\n                    </Box>\n                  </Box>\n                </Box>\n              </>\n            );\n          if (allOrders.error) return `Error! ${allOrders.error.message}`;\n\n          const { orders } = allOrders.data;\n          const theOrder = orders.filter(\n            order => order.id === selectedOrderIndex\n          )[0];\n\n          return (\n            <>\n              <Box {...Layout}>\n                <Box {...CardStyle}>\n                  <Box\n                    display=\"flex\"\n                    paddingX=\"1em\"\n                    paddingY=\".8em\"\n                    alignItems=\"center\"\n                  >\n                    {(() => {\n                      const count =\n                        pagination.data && pagination.data.ordersConnection\n                          ? pagination.data.ordersConnection.aggregate.count\n                          : 0;\n                      return (\n                        <>\n                          {firstQ === 1 ? (\n                            <Heading\n                              fontSize=\"xs\"\n                              letterSpacing=\"wider\"\n                              textTransform=\"uppercase\"\n                              color=\"gray.500\"\n                              fontWeight={400}\n                            >\n                              Order {skip + 1} of {count}\n                            </Heading>\n                          ) : (\n                            <Heading\n                              fontSize=\"xs\"\n                              letterSpacing=\"wider\"\n                              textTransform=\"uppercase\"\n                              color=\"gray.500\"\n                              fontWeight={400}\n                            >\n                              {count} Order{count !== 1 && 's'}\n                            </Heading>\n                          )}\n                          <Box marginLeft=\"auto\" display=\"flex\">\n                            <Button\n                              borderRadius={3}\n                              marginX={1}\n                              px={2}\n                              height={5}\n                              onClick={() =>\n                                setOrderBy(\n                                  orderBy === 'createdAt_DESC'\n                                    ? 'createdAt_ASC'\n                                    : 'createdAt_DESC'\n                                )\n                              }\n                            >\n                              <Heading\n                                fontSize=\"xs\"\n                                fontWeight={700}\n                                textTransform=\"uppercase\"\n                              >\n                                {orderBy.split('_')[1]}\n                              </Heading>\n                            </Button>\n\n                            <Button\n                              bg=\"#d4eee2\"\n                              color=\"#00783e\"\n                              _hover={{ bg: '#bfe3d2' }}\n                              borderRadius={3}\n                              marginX={1}\n                              px={2}\n                              height={5}\n                              onClick={() => play()}\n                            >\n                              <Heading\n                                fontSize=\"xs\"\n                                fontWeight={700}\n                                textTransform=\"uppercase\"\n                              >\n                                {firstQ !== 1 ? 'Play' : 'Show All'}\n                              </Heading>\n                              {/* {firstQ !== 1 && <Icon size={5} name=\"play\" />} */}\n                            </Button>\n                            {firstQ === 1 ? (\n                              <Button\n                                background=\"#fbe6a2\"\n                                color=\"#7e6514\"\n                                _hover={{ bg: '#f0d98d' }}\n                                borderRadius={3}\n                                ml={1}\n                                px={2}\n                                height={5}\n                                onClick={() => setSkip(skip + 1)}\n                                // disabled={firstQ !== 1 || skip + 1 === count}\n                              >\n                                <Heading\n                                  fontSize=\"xs\"\n                                  fontWeight={700}\n                                  marginRight={2}\n                                  textTransform=\"uppercase\"\n                                >\n                                  Skip\n                                </Heading>\n                                <Icon size={2} name=\"arrow-right\" />\n                              </Button>\n                            ) : (\n                              <Button\n                                borderRadius={3}\n                                marginX={1}\n                                px={2}\n                                height={5}\n                                bg=\"#ddebf7\"\n                                color=\"#1070ca\"\n                                _hover={{ bg: '#c0d8ed' }}\n                                disabled={firstQ !== 1 || skip + 1 === count}\n                                isLoading={purchaseOrderLoading}\n                              >\n                                <Heading\n                                  fontSize=\"xs\"\n                                  fontWeight={700}\n                                  textTransform=\"uppercase\"\n                                >\n                                  Process\n                                </Heading>\n                              </Button>\n                            )}\n                          </Box>\n                        </>\n                      );\n                    })()}\n                  </Box>\n                  {orders.length ? (\n                    orders.map(order => (\n                      <Box key={order.id}>\n                        <Box\n                          opacity={processingOrder === order.id && '0.2'}\n                          width=\"100%\"\n                          height=\"100%\"\n                          position=\"relative\"\n                        >\n                          {processingOrder === order.id && (\n                            <Box\n                              display=\"flex\"\n                              justifyContent=\"center\"\n                              alignItems=\"center\"\n                              position=\"absolute\"\n                              width=\"100%\"\n                              height=\"100%\"\n                            >\n                              <Spinner\n                                thickness=\"4px\"\n                                speed=\"0.65s\"\n                                emptyColor=\"gray.200\"\n                                color=\"blue.500\"\n                                size=\"xl\"\n                              />\n                            </Box>\n                          )}\n                          <Box borderTop=\"0.1rem solid #dfe3e8\">\n                            <Box\n                              borderLeft={`3px solid ${\n                                selectedOrderIndex === order.id\n                                  ? '#007489'\n                                  : 'transparent'\n                              }`}\n                            >\n                              <OrderListItem\n                                {...order}\n                                updateIndex={arg => _currentOrder(arg)}\n                                open={open}\n                                createCheckout={a => createCheck(a, order.id)}\n                                key={order.id}\n                                index={order.id}\n                                selectedOrderIndex={selectedOrderIndex}\n                                disabled={\n                                  !(\n                                    !selectedOrderIndex ||\n                                    selectedOrderIndex === order.id\n                                  )\n                                }\n                                buttons={\n                                  <>\n                                    <Button\n                                      aria-label=\"delete order\"\n                                      height=\"1.3rem\"\n                                      minWidth=\"1.3rem\"\n                                      bg=\"transparent\"\n                                      color=\"#66788a\"\n                                      px={0}\n                                      mx={1}\n                                      onClick={async e => {\n                                        e.stopPropagation();\n                                        setProcessingOrder(order.id);\n                                        const res = await deleteOrder({\n                                          variables: {\n                                            id: order.id,\n                                          },\n                                        });\n                                        setProcessingOrder(null);\n                                      }}\n                                    >\n                                      <Icon name=\"small-close\" size={4} />\n                                    </Button>\n                                    <Button\n                                      aria-label=\"show line-items\"\n                                      height=\"1.3rem\"\n                                      minWidth=\"1.3rem\"\n                                      bg=\"transparent\"\n                                      color=\"#66788a\"\n                                      px={0}\n                                      mx={1}\n                                      onClick={async e => {\n                                        e.stopPropagation();\n                                        setProcessingOrder(order.id);\n                                        setSelectedOrderIndex(null);\n                                        if (\n                                          JSON.parse(order.customCart).lineItems\n                                            .edges.length > 0\n                                        ) {\n                                          toast({\n                                            position: 'top-right',\n                                            title: 'custom called',\n                                            status: 'success',\n                                            duration: 2000,\n                                            isClosable: true,\n                                          });\n                                          await placeCustomOrder(\n                                            order.customCart,\n                                            order.id,\n                                            updateOrder\n                                            // forceUpdate\n                                          );\n                                        } else if (\n                                          JSON.parse(order.mpCart).lineItems\n                                            .edges.length > 0\n                                        ) {\n                                          await doPurchase([order.id]);\n                                        } else if (\n                                          JSON.parse(order.zincCart).products\n                                            .length > 0\n                                        ) {\n                                          toast({\n                                            position: 'top-right',\n                                            title: 'zinc called',\n                                            status: 'success',\n                                            duration: 2000,\n                                            isClosable: true,\n                                          });\n                                          await placeZincOrder(\n                                            {\n                                              retailer: 'amazon',\n                                              products: JSON.parse(\n                                                order.zincCart\n                                              ).products,\n                                              shipping_address: {\n                                                first_name: order.first_name,\n                                                last_name: order.last_name,\n                                                address_line1:\n                                                  order.streetAddress1,\n                                                address_line2:\n                                                  order.streetAddress2,\n                                                zip_code: order.zip,\n                                                city: order.city,\n                                                state: order.state,\n                                                country: 'US',\n                                                phone_number: '281-337-9862',\n                                              },\n                                              addax: true,\n                                              is_gift: true,\n                                              gift_message: `Here is your package, ${\n                                                order.first_name\n                                              }! Enjoy!`,\n                                              shipping: {\n                                                order_by: 'price',\n                                                max_days: 5,\n                                                max_price: 1000,\n                                              },\n                                              webhooks: {\n                                                request_succeeded:\n                                                  'https://webhook.site/3d977945-5b89-4734-8a64-146d321a100c',\n                                                request_failed:\n                                                  'https://webhook.site/3d977945-5b89-4734-8a64-146d321a100c',\n                                                tracking_obtained:\n                                                  'https://webhook.site/3d977945-5b89-4734-8a64-146d321a100c',\n                                              },\n                                              client_notes: {\n                                                shopify_order_id: order.orderId,\n                                                os_order_id: order.id,\n                                              },\n                                            },\n                                            me.zincToken,\n                                            updateOrder\n                                          );\n                                        } else {\n                                          toast({\n                                            position: 'top-right',\n                                            title: 'Not called',\n                                            status: 'success',\n                                            duration: 2000,\n                                            isClosable: true,\n                                          });\n                                        }\n                                        setProcessingOrder(null);\n                                      }}\n                                    >\n                                      <Icon name=\"check\" size={3} />\n                                    </Button>\n                                  </>\n                                }\n                              />\n                            </Box>\n                          </Box>\n                        </Box>\n                      </Box>\n                    ))\n                  ) : (\n                    <Box\n                      backgroundColor=\"gray.100\"\n                      display=\"flex\"\n                      justifyContent=\"center\"\n                      alignItems=\"center\"\n                      flexDirection=\"column\"\n                    >\n                      <Heading\n                        margin=\"1em\"\n                        fontSize=\"xl\"\n                        fontWeight={600}\n                        color=\"text\"\n                      >\n                        Your pending orders will appear here.\n                      </Heading>\n                    </Box>\n                  )}\n                </Box>\n              </Box>\n\n              <Box {...Layout}>\n                {selectedOrderIndex ? (\n                  <Box>\n                    <Box\n                      {...CardStyle}\n                      padding={15}\n                      opacity={cartLoading && '0.2'}\n                      width=\"100%\"\n                      height=\"100%\"\n                    >\n                      {cartLoading && (\n                        <Box\n                          display=\"flex\"\n                          justifyContent=\"center\"\n                          margin=\"auto\"\n                        >\n                          <Box position=\"fixed\">\n                            <Spinner\n                              thickness=\"4px\"\n                              speed=\"0.65s\"\n                              emptyColor=\"gray.200\"\n                              color=\"blue.500\"\n                              size=\"xl\"\n                            />\n                          </Box>\n                        </Box>\n                      )}\n\n                      <Box\n                        display=\"flex\"\n                        justifyContent=\"space-between\"\n                        fontWeight={600}\n                        background=\"white\"\n                      >\n                        <>\n                          <Heading fontSize=\"md\" color=\"text\" mb={1}>\n                            {theOrder.orderName}\n                          </Heading>\n\n                          <Box\n                            display=\"flex\"\n                            alignItems=\"center\"\n                            justifyContent=\"center\"\n                            marginLeft={4}\n                          >\n                            <Text\n                              fontSize=\"sm\"\n                              fontWeight={500}\n                              marginX={2}\n                              color=\"#7B8B9A\"\n                              cursor=\"pointer\"\n                              onClick={() => {\n                                // setSelectedLineIndex([]);\n                                setSelectedOrderIndex(null);\n                              }}\n                            >\n                              Empty\n                            </Text>\n\n                            <Button\n                              borderRadius={3}\n                              marginX={1}\n                              px={2}\n                              height={5}\n                              bg=\"#ddebf7\"\n                              color=\"#1070ca\"\n                              _hover={{ bg: '#c0d8ed' }}\n                              onClick={() => overwrite(theOrder.id)}\n                              disabled={\n                                (theOrder.mpCart &&\n                                  theOrder.mpCart.lineItems &&\n                                  theOrder.mpCart.lineItems.edges.length ===\n                                    0) ||\n                                !theOrder.mpCart\n                              }\n                            >\n                              <Heading\n                                fontSize=\"xs\"\n                                fontWeight={700}\n                                textTransform=\"uppercase\"\n                              >\n                                Match\n                              </Heading>\n                            </Button>\n                          </Box>\n                        </>\n                      </Box>\n                      <Box>\n                        <Box display=\"flex\">\n                          <Text\n                            contenteditable=\"true\"\n                            fontSize=\"sm\"\n                            marginRight={1}\n                            lineHeight=\"short\"\n                          >\n                            {theOrder.first_name}\n                          </Text>\n                          <Text\n                            contenteditable=\"true\"\n                            fontSize=\"sm\"\n                            lineHeight=\"short\"\n                          >\n                            {theOrder.last_name}\n                          </Text>\n                        </Box>\n                        <Text\n                          contenteditable=\"true\"\n                          fontSize=\"sm\"\n                          lineHeight=\"short\"\n                        >\n                          {theOrder.streetAddress1}\n                        </Text>\n                        {theOrder.streetAddress2 && (\n                          <Text\n                            contenteditable=\"true\"\n                            fontSize=\"sm\"\n                            lineHeight=\"short\"\n                          >\n                            {theOrder.streetAddress2}\n                          </Text>\n                        )}\n                        <Box display=\"flex\">\n                          <Text\n                            contenteditable=\"true\"\n                            fontSize=\"sm\"\n                            marginRight={1}\n                            lineHeight=\"short\"\n                          >\n                            {theOrder.city}\n                          </Text>\n                          <Text\n                            contenteditable=\"true\"\n                            fontSize=\"sm\"\n                            marginRight={2}\n                            lineHeight=\"short\"\n                          >\n                            {theOrder.state}\n                          </Text>\n                          <Text\n                            contenteditable=\"true\"\n                            fontSize=\"sm\"\n                            lineHeight=\"short\"\n                          >\n                            {theOrder.zip}\n                          </Text>\n                        </Box>\n                      </Box>\n                      <Box paddingTop={2}>\n                        <Box\n                          marginLeft=\"-3px\"\n                          background=\"#F7F9FD\"\n                          paddingY=\".7em\"\n                          paddingX=\"1em\"\n                          border=\"1px solid #edf0f2\"\n                        >\n                          <Box marginBottom={2}>\n                            <Text\n                              fontSize=\"sm\"\n                              fontWeight={500}\n                              color=\"#084B8A\"\n                            >\n                              Line Items\n                            </Text>\n                          </Box>\n                          {theOrder.lineItems.map(a => (\n                            <OrderLine key={a.id} item={a.node ? a.node : a} />\n                          ))}\n                        </Box>\n                      </Box>\n                      {channelsData.channels.filter(\n                        channel => channel.type === 'MARKETPLACE'\n                      ).length > 0 && (\n                        <MPCart\n                          cartName=\"Marketplace\"\n                          cart={JSON.parse(theOrder.mpCart)}\n                          removeItem={a =>\n                            removeMPItem(a, JSON.parse(theOrder.mpCart).id)\n                          }\n                          checkoutLineItemsUpdate={a =>\n                            updateMPItem(a, JSON.parse(theOrder.mpCart).id)\n                          }\n                          loading={updateOrderLoading}\n                        />\n                      )}\n\n                      {channelsData.channels.filter(\n                        channel => channel.type === 'SHOPIFY'\n                      ).length > 0 && (\n                        <MPCart\n                          cartName=\"BN\"\n                          background=\"#F1FBFC\"\n                          color=\"#007489\"\n                          cart={JSON.parse(theOrder.customCart)}\n                          removeItem={a =>\n                            removeCustomItem(\n                              a,\n                              JSON.parse(theOrder.customCart).id,\n                              channelsData.channels.filter(\n                                channel => channel.type === 'SHOPIFY'\n                              )[0].settings.key,\n                              channelsData.channels.filter(\n                                channel => channel.type === 'SHOPIFY'\n                              )[0].settings.shopURL\n                            )\n                          }\n                          checkoutLineItemsUpdate={a =>\n                            updateCustomItem(\n                              a,\n                              JSON.parse(theOrder.customCart).id,\n                              channelsData.channels.filter(\n                                channel => channel.type === 'SHOPIFY'\n                              )[0].settings.key,\n                              channelsData.channels.filter(\n                                channel => channel.type === 'SHOPIFY'\n                              )[0].settings.shopURL\n                            )\n                          }\n                          loading={updateOrderLoading}\n                        />\n                      )}\n\n                      {channelsData.channels.filter(\n                        channel => channel.type === 'ZINC'\n                      ).length > 0 && (\n                        <ZincCart\n                          cart={JSON.parse(theOrder.zincCart)}\n                          removeItem={async productID => {\n                            const res = await updateOrder({\n                              variables: {\n                                id: selectedOrderIndex,\n                                zincCart: JSON.stringify({\n                                  products: JSON.parse(\n                                    theOrder.zincCart\n                                  ).products.filter(\n                                    a => a.product_id !== productID\n                                  ),\n                                }),\n                              },\n                            });\n                          }}\n                          checkoutLineItemsUpdate={async (\n                            productID,\n                            quantity\n                          ) => {\n                            if (quantity === 0) {\n                              const res = await updateOrder({\n                                variables: {\n                                  id: selectedOrderIndex,\n                                  zincCart: JSON.stringify({\n                                    products: JSON.parse(\n                                      theOrder.zincCart\n                                    ).products.filter(\n                                      a => a.product_id !== productID\n                                    ),\n                                  }),\n                                },\n                              });\n                            } else {\n                              const find = JSON.parse(\n                                theOrder.zincCart\n                              ).products.find(\n                                obj => obj.product_id === productID\n                              );\n                              const newQ = quantity;\n                              find.quantity = newQ;\n                              const res = await updateOrder({\n                                variables: {\n                                  id: selectedOrderIndex,\n                                  zincCart: JSON.stringify({\n                                    products: [\n                                      find,\n                                      ...JSON.parse(\n                                        theOrder.zincCart\n                                      ).products.filter(\n                                        a => a.product_id !== productID\n                                      ),\n                                    ],\n                                  }),\n                                },\n                              });\n                            }\n                          }}\n                          loading={updateOrderLoading}\n                        />\n                      )}\n                    </Box>\n                  </Box>\n                ) : (\n                  <Box {...CardStyle} padding={3}>\n                    <Box\n                      p={2}\n                      display=\"flex\"\n                      borderLeft=\"3px solid #d9822b\"\n                      borderRight=\"1px solid #E2E8F0\"\n                      borderTop=\"1px solid #E2E8F0\"\n                      borderBottom=\"1px solid #E2E8F0\"\n                    >\n                      <Icon name=\"warning-2\" color=\"#d9812a\" mr={2} />\n                      <Heading fontSize=\"sm\" color=\"text\">\n                        Please choose an order or a line item.\n                      </Heading>\n                    </Box>\n                  </Box>\n                )}\n\n                <Find\n                  headerSize={600}\n                  atcDisabled={!theOrder}\n                  addMPItem={(a, b) => {\n                    if (theOrder.mpCart && JSON.parse(theOrder.mpCart).id) {\n                      addVariant(a, b, JSON.parse(theOrder.mpCart).id);\n                    } else {\n                      toast({\n                        position: 'top-right',\n                        title: 'checkout does not exist',\n                        status: 'success',\n                        duration: 2000,\n                        isClosable: true,\n                      });\n                      createCheck(\n                        {\n                          shippingAddress: {\n                            address1: theOrder.streetAddress1,\n                            address2:\n                              theOrder.streetAddress2 &&\n                              theOrder.streetAddress2,\n                            city: theOrder.city,\n                            province: theOrder.state,\n                            country: 'US',\n                            zip: theOrder.zip,\n                            firstName: theOrder.first_name,\n                            lastName: theOrder.last_name,\n                          },\n                          lineItems: [\n                            {\n                              variantId: a,\n                              quantity: b,\n                            },\n                          ],\n                        },\n                        theOrder.id\n                      );\n                    }\n                  }}\n                  addCustomItem={(a, b, url, key) => {\n                    if (\n                      theOrder.customCart &&\n                      JSON.parse(theOrder.customCart).id\n                    ) {\n                      addCustomVariant(\n                        a,\n                        b,\n                        JSON.parse(theOrder.customCart).id,\n                        checkoutLineItemsAdd,\n                        updateOrder,\n                        url,\n                        key\n                      );\n                    } else {\n                      toast({\n                        position: 'top-right',\n                        title: 'checkout does not exist',\n                        status: 'success',\n                        duration: 2000,\n                        isClosable: true,\n                      });\n                      createCustomCheck(\n                        {\n                          shippingAddress: {\n                            address1: theOrder.streetAddress1,\n                            address2:\n                              theOrder.streetAddress2 &&\n                              theOrder.streetAddress2,\n                            city: theOrder.city,\n                            province: theOrder.state,\n                            country: 'US',\n                            zip: theOrder.zip,\n                            firstName: theOrder.first_name,\n                            lastName: theOrder.last_name,\n                          },\n                          lineItems: [\n                            {\n                              variantId: a,\n                              quantity: b,\n                            },\n                          ],\n                          email: 'junaidkabani@windstream.net',\n                        },\n                        theOrder.id,\n                        createCheckout,\n                        updateOrder,\n                        url,\n                        key\n                      );\n                    }\n                  }}\n                  addZincItem={(a, b, c, d, e) =>\n                    addZincItem(a, b, c, d, e, JSON.parse(theOrder.zincCart))\n                  }\n                />\n              </Box>\n            </>\n          );\n        })()}\n      </Box>\n    </>\n  );\n}\n\nexport default PendingOrders;\n","import { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport {\n  Box,\n  Heading,\n  Button,\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n  Input,\n  Text,\n} from '@chakra-ui/core';\nimport ShopListItem from './ShopListItem';\n\nexport const ALL_SHOPS_QUERY = gql`\n  query($first: Int!, $skip: Int!) {\n    shops(orderBy: createdAt_DESC, first: $first, skip: $skip) {\n      id\n      domain\n      accessToken\n      createdAt\n      name\n      settings\n    }\n  }\n`;\n\nexport const shopsQueryVars = {\n  skip: 0,\n  first: 10,\n};\n\nexport default function ShopList() {\n  const { data, loading, error } = useQuery(ALL_SHOPS_QUERY, {\n    variables: shopsQueryVars,\n  });\n\n  return (\n    <>\n      <Box display=\"flex\" py={4}>\n        <Heading fontSize=\"2xl\" color=\"text\" fontWeight={500}>\n          Shops\n        </Heading>\n        <Box ml=\"auto\">\n          <Popover placement=\"bottom-end\">\n            <PopoverTrigger>\n              <Button\n                background=\"#DDEBF7\"\n                color=\"#1070CA\"\n                borderRadius={3}\n                marginRight={1}\n                px={2}\n                height={5}\n                textTransform=\"uppercase\"\n                letterSpacing=\"wide\"\n                fontSize=\"xs\"\n                fontWeight={700}\n              >\n                Add Shop\n              </Button>\n            </PopoverTrigger>\n            <PopoverContent zIndex={4}>\n              <Box\n                width=\"100%\"\n                display=\"flex\"\n                alignItems=\"left\"\n                justifyContent=\"center\"\n                flexDirection=\"column\"\n                padding={15}\n              >\n                <form\n                  method=\"GET\"\n                  action=\"/shopify/auth\"\n                  style={{ width: '100%' }}\n                >\n                  <Text fontSize=\"sm\" color=\"gray.600\" mb={1} fontWeight={500}>\n                    Shop Name\n                  </Text>\n                  <Input label=\"Shop Name\" mb={2} />\n\n                  <Text fontSize=\"sm\" color=\"gray.600\" mb={1} fontWeight={500}>\n                    Shop URL\n                  </Text>\n                  <Input label=\"Shop URL\" mb={1} id=\"shop\" name=\"shop\" />\n                  <Text fontSize=\"xs\" color=\"gray.500\" mb={1}>\n                    Must end in .myshopify.com\n                  </Text>\n\n                  <Button\n                    variantColor=\"green\"\n                    variant=\"ghost\"\n                    backgroundColor=\"green.50\"\n                    borderRadius={3}\n                    marginRight={1}\n                    px={3}\n                    height={8}\n                    width=\"100%\"\n                  >\n                    <Heading\n                      fontSize=\"sm\"\n                      fontWeight={700}\n                      textTransform=\"uppercase\"\n                      letterSpacing=\"wide\"\n                    >\n                      Add Shop\n                    </Heading>\n                  </Button>\n                </form>\n              </Box>\n            </PopoverContent>\n          </Popover>\n        </Box>\n      </Box>\n      {(() => {\n        if (loading) return <p>Loading...</p>;\n        if (error || !data.shops) return <h1>Error loading shops: {error}</h1>;\n        return (\n          <Box\n            display=\"flex\"\n            width=\"calc(100% + 20px)\"\n            flexWrap=\"wrap\"\n            marginX=\"-10px\"\n          >\n            {data.shops.map(shop => (\n              <Box flex={1} padding={3} key={shop.id}>\n                <ShopListItem shop={shop} />\n              </Box>\n            ))}\n          </Box>\n        );\n      })()}\n    </>\n  );\n}\n","import { Box, Heading, Text } from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\nimport DeleteShop from '../common/DeleteShop';\nimport { CardStyle } from '../common/DefaultStyles';\nimport WebhookSwitch from './WebhookSwitch';\n\nconst ShopListItem = ({ shop }) => (\n  <Box {...CardStyle}>\n    <Box padding={15}>\n      <Box display=\"flex\">\n        <Box marginBottom={3}>\n          <Text\n            fontWeight={500}\n            fontSize=\"lg\"\n            textTransform=\"capitalize\"\n            color=\"text\"\n          >\n            {shop.name}\n          </Text>\n          <Heading\n            fontSize=\"sm\"\n            textTransform=\"uppercase\"\n            color=\"gray.500\"\n            fontWeight={400}\n          >\n            Name\n          </Heading>\n        </Box>\n\n        <DeleteShop id={shop.id} button=\"Delete\" />\n      </Box>\n      <Box>\n        <Text fontWeight={500} fontSize=\"md\" color=\"text\">\n          {shop.domain}\n        </Text>\n        <Heading\n          fontSize=\"xs\"\n          textTransform=\"uppercase\"\n          color=\"gray.500\"\n          fontWeight={400}\n        >\n          URL\n        </Heading>\n      </Box>\n    </Box>\n\n    <WebhookSwitch domain={shop.domain} accessToken={shop.accessToken} />\n  </Box>\n);\n\nexport default ShopListItem;\n\nShopListItem.propTypes = {\n  shop: PropTypes.object.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { Box, Heading, Text, Code, Switch } from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\nimport { front, prodFront, prodEndpoint } from '../../config';\n\nfunction getWebhooks(domain, accessToken, setResults) {\n  const url = `${\n    process.env.NODE_ENV === 'development' ? front : prodFront\n  }/${accessToken}/graphql`;\n\n  fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      query: `\n    {\n      webhookSubscriptions(first :5\n        callbackUrl: \"${prodEndpoint}order?spdn=${domain}\"\n        ) {\n          edges{\n            node{\n              id\n              callbackUrl\n              createdAt\n              topic\n              includeFields\n            }\n          }\n        }\n      }\n    `,\n    }),\n  })\n    .then(res => res.json())\n    .then(res => {\n      if (res.data) {\n        const results = res.data.webhookSubscriptions.edges;\n        setResults(results);\n      }\n    });\n}\n\nfunction createWebhook(domain, accessToken, setResults) {\n  const url = `${\n    process.env.NODE_ENV === 'development' ? front : prodFront\n  }/${accessToken}/graphql`;\n  fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      query: `\n      mutation webhookSubscriptionCreate(\n        $topic: WebhookSubscriptionTopic!\n        $webhookSubscription: WebhookSubscriptionInput!\n      ) {\n        webhookSubscriptionCreate(\n          topic: $topic\n          webhookSubscription: $webhookSubscription\n        ) {\n          userErrors {\n            field\n            message\n          }\n          webhookSubscription {\n            id\n          }\n        }\n      }\n    `,\n      variables: {\n        topic: 'ORDERS_CREATE',\n        webhookSubscription: {\n          callbackUrl: `${prodEndpoint}order?spdn=${domain}`,\n          format: 'JSON',\n        },\n      },\n    }),\n  })\n    .then(res => res.json())\n    .then(res => {\n      const webhook = res.data.webhookSubscriptionCreate;\n      getWebhooks(domain, accessToken, setResults);\n    });\n}\n\nfunction deleteWebhook(id, domain, accessToken, setResults) {\n  const url = `${\n    process.env.NODE_ENV === 'development' ? front : prodFront\n  }/${accessToken}/graphql`;\n  fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      query: `\n      mutation   {\n        webhookSubscriptionDelete(\n          id: \"${id}\"\n        ) {\n          deletedWebhookSubscriptionId\n        }\n      }\n    `,\n    }),\n  })\n    .then(res => res.json())\n    .then(res => {\n      getWebhooks(domain, accessToken, setResults);\n    });\n}\n\nconst WebhookSwitch = ({ domain, accessToken }) => {\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    getWebhooks(domain, accessToken, setResults);\n  }, [domain, accessToken]);\n\n  function handleSwitch(e) {\n    if (e.target.checked) {\n      createWebhook(domain, accessToken, setResults);\n    } else {\n      deleteWebhook(results[0].node.id, domain, accessToken, setResults);\n    }\n  }\n\n  return (\n    <>\n      <Box\n        paddingY={2}\n        paddingX={4}\n        background=\"#f5f5f5\"\n        display=\"flex\"\n        alignItems=\"center\"\n        width=\"100%\"\n      >\n        <Box paddingRight={15}>\n          <Heading fontSize=\"sm\" fontWeight={500} mb={1} color=\"gray.800\">\n            Push orders to Openship\n          </Heading>\n          <Text fontSize=\"xs\" color=\"gray.700\">\n            Orders will be pushed to the pending tab to be fulfilled\n          </Text>\n        </Box>\n        <Switch\n          marginLeft=\"auto\"\n          isChecked={results.length > 0}\n          onChange={e => handleSwitch(e)}\n        />\n      </Box>\n      {results.map(a => (\n        <Box paddingY={2} paddingX={3}>\n          <Box display=\"flex\" alignItems=\"center\" marginBottom={2}>\n            <Text\n              fontSize=\"sm\"\n              fontWeight={500}\n              align=\"right\"\n              marginRight={2}\n              flexBasis=\"100px\"\n              textAlign=\"right\"\n              color=\"text\"\n            >\n              Endpoint:\n            </Text>\n            <Code variantColor=\"blue\" fontSize=\"xs\" wordWrap=\"break-word\">\n              Openship\n            </Code>\n          </Box>\n          <Box display=\"flex\" alignItems=\"center\">\n            <Text\n              fontSize=\"sm\"\n              fontWeight={500}\n              align=\"right\"\n              marginRight={2}\n              flexBasis=\"100px\"\n              textAlign=\"right\"\n              color=\"text\"\n            >\n              Topic:\n            </Text>\n            <Code variantColor=\"blue\" fontSize=\"xs\">\n              {a.node.topic}\n            </Code>\n          </Box>\n        </Box>\n      ))}\n    </>\n  );\n};\n\nexport default WebhookSwitch;\n\nWebhookSwitch.propTypes = {\n  domain: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { Box, Heading, Icon } from '@chakra-ui/core';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { CURRENT_USER_QUERY } from './User';\n\nconst SIGN_OUT_MUTATION = gql`\n  mutation SIGN_OUT_MUTATION {\n    signout {\n      message\n    }\n  }\n`;\n\nconst Signout = () => {\n  const [signout, { error, loading }] = useMutation(SIGN_OUT_MUTATION, {\n    refetchQueries: [{ query: CURRENT_USER_QUERY }],\n  });\n\n  return (\n    <Box\n      height={30}\n      cursor=\"pointer\"\n      onClick={() => signout().then(() => (window.location.href = '/'))}\n    >\n      <Box display=\"flex\">\n        <Box\n          marginLeft=\"13px\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          display=\"flex\"\n        >\n          <Icon size={5} name=\"arrow-forward\" color=\"#EC4C47\" />\n        </Box>\n        <Heading\n          ml={2}\n          color=\"#fff\"\n          fontSize={15}\n          overflow=\"visible\"\n          textTransform=\"capitalize\"\n        >\n          Sign Out\n        </Heading>\n      </Box>\n    </Box>\n  );\n};\nexport default Signout;\n","import gql from 'graphql-tag';\n\nconst CURRENT_USER_QUERY = gql`\n  query {\n    me {\n      id\n      email\n      name\n      permissions\n      url\n      zincToken\n      buyer {\n        status\n        questions\n        account\n      }\n      seller {\n        status\n        questions\n        account\n      }\n    }\n  }\n`;\n\nexport { CURRENT_USER_QUERY };\n","// This is client side config only - don't put anything in here that shouldn't be public!\nexport const endpoint = `http://localhost:4444/`;\nexport const prodEndpoint = `https://server.app.openship.org/`;\nexport const front = `http://localhost:3000`;\nexport const prodFront = `https://dashboard.openship.org`;\nexport const perPage = 4;\n","\"use strict\";var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");exports.__esModule=true;exports.default=void 0;var _react=_interopRequireWildcard(require(\"react\"));var _url=require(\"url\");var _utils=require(\"../next-server/lib/utils\");var _router=_interopRequireDefault(require(\"./router\"));function isLocal(href){var url=(0,_url.parse)(href,false,true);var origin=(0,_url.parse)((0,_utils.getLocationOrigin)(),false,true);return!url.host||url.protocol===origin.protocol&&url.host===origin.host;}function memoizedFormatUrl(formatFunc){var lastHref=null;var lastAs=null;var lastResult=null;return(href,as)=>{if(lastResult&&href===lastHref&&as===lastAs){return lastResult;}var result=formatFunc(href,as);lastHref=href;lastAs=as;lastResult=result;return result;};}function formatUrl(url){return url&&typeof url==='object'?(0,_utils.formatWithValidation)(url):url;}var observer;var listeners=new Map();var IntersectionObserver=typeof window!=='undefined'?window.IntersectionObserver:null;var prefetched={};function getObserver(){// Return shared instance of IntersectionObserver if already created\nif(observer){return observer;}// Only create shared IntersectionObserver if supported in browser\nif(!IntersectionObserver){return undefined;}return observer=new IntersectionObserver(entries=>{entries.forEach(entry=>{if(!listeners.has(entry.target)){return;}var cb=listeners.get(entry.target);if(entry.isIntersecting||entry.intersectionRatio>0){observer.unobserve(entry.target);listeners.delete(entry.target);cb();}});},{rootMargin:'200px'});}var listenToIntersections=(el,cb)=>{var observer=getObserver();if(!observer){return()=>{};}observer.observe(el);listeners.set(el,cb);return()=>{try{observer.unobserve(el);}catch(err){console.error(err);}listeners.delete(el);};};class Link extends _react.Component{constructor(props){super(props);this.p=void 0;this.cleanUpListeners=()=>{};this.formatUrls=memoizedFormatUrl((href,asHref)=>{return{href:formatUrl(href),as:asHref?formatUrl(asHref):asHref};});this.linkClicked=e=>{var{nodeName,target}=e.currentTarget;if(nodeName==='A'&&(target&&target!=='_self'||e.metaKey||e.ctrlKey||e.shiftKey||e.nativeEvent&&e.nativeEvent.which===2)){// ignore click for new tab / new window behavior\nreturn;}var{href,as}=this.formatUrls(this.props.href,this.props.as);if(!isLocal(href)){// ignore click if it's outside our scope (e.g. https://google.com)\nreturn;}var{pathname}=window.location;href=(0,_url.resolve)(pathname,href);as=as?(0,_url.resolve)(pathname,as):href;e.preventDefault();//  avoid scroll for urls with anchor refs\nvar{scroll}=this.props;if(scroll==null){scroll=as.indexOf('#')<0;}// replace state instead of push if prop is present\n_router.default[this.props.replace?'replace':'push'](href,as,{shallow:this.props.shallow}).then(success=>{if(!success)return;if(scroll){window.scrollTo(0,0);document.body.focus();}});};if(process.env.NODE_ENV!=='production'){if(props.prefetch){console.warn('Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://err.sh/zeit/next.js/prefetch-true-deprecated');}}this.p=props.prefetch!==false;}componentWillUnmount(){this.cleanUpListeners();}getPaths(){var{pathname}=window.location;var{href:parsedHref,as:parsedAs}=this.formatUrls(this.props.href,this.props.as);var resolvedHref=(0,_url.resolve)(pathname,parsedHref);return[resolvedHref,parsedAs?(0,_url.resolve)(pathname,parsedAs):resolvedHref];}handleRef(ref){if(this.p&&IntersectionObserver&&ref&&ref.tagName){this.cleanUpListeners();var isPrefetched=prefetched[this.getPaths().join(// Join on an invalid URI character\n'%')];if(!isPrefetched){this.cleanUpListeners=listenToIntersections(ref,()=>{this.prefetch();});}}}// The function is memoized so that no extra lifecycles are needed\n// as per https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html\nprefetch(options){if(!this.p||typeof window==='undefined')return;// Prefetch the JSON page if asked (only in the client)\nvar paths=this.getPaths();// We need to handle a prefetch error here since we may be\n// loading with priority which can reject but we don't\n// want to force navigation since this is only a prefetch\n_router.default.prefetch(paths[/* href */0],paths[/* asPath */1],options).catch(err=>{if(process.env.NODE_ENV!=='production'){// rethrow to show invalid URL errors\nthrow err;}});prefetched[paths.join(// Join on an invalid URI character\n'%')]=true;}render(){var{children}=this.props;var{href,as}=this.formatUrls(this.props.href,this.props.as);// Deprecated. Warning shown by propType check. If the children provided is a string (<Link>example</Link>) we wrap it in an <a> tag\nif(typeof children==='string'){children=_react.default.createElement(\"a\",null,children);}// This will return the first child, if multiple are provided it will throw an error\nvar child=_react.Children.only(children);var props={ref:el=>{this.handleRef(el);if(child&&typeof child==='object'&&child.ref){if(typeof child.ref==='function')child.ref(el);else if(typeof child.ref==='object'){child.ref.current=el;}}},onMouseEnter:e=>{if(child.props&&typeof child.props.onMouseEnter==='function'){child.props.onMouseEnter(e);}this.prefetch({priority:true});},onClick:e=>{if(child.props&&typeof child.props.onClick==='function'){child.props.onClick(e);}if(!e.defaultPrevented){this.linkClicked(e);}}};// If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n// defined, we specify the current 'href', so that repetition is not needed by the user\nif(this.props.passHref||child.type==='a'&&!('href'in child.props)){props.href=as||href;}// Add the ending slash to the paths. So, we can serve the\n// \"<page>/index.html\" directly.\nif(process.env.__NEXT_EXPORT_TRAILING_SLASH){var rewriteUrlForNextExport=require('../next-server/lib/router/rewrite-url-for-export').rewriteUrlForNextExport;if(props.href&&typeof __NEXT_DATA__!=='undefined'&&__NEXT_DATA__.nextExport){props.href=rewriteUrlForNextExport(props.href);}}return _react.default.cloneElement(child,props);}}if(process.env.NODE_ENV==='development'){var warn=(0,_utils.execOnce)(console.error);// This module gets removed by webpack.IgnorePlugin\nvar PropTypes=require('prop-types');var exact=require('prop-types-exact');// @ts-ignore the property is supported, when declaring it on the class it outputs an extra bit of code which is not needed.\nLink.propTypes=exact({href:PropTypes.oneOfType([PropTypes.string,PropTypes.object]).isRequired,as:PropTypes.oneOfType([PropTypes.string,PropTypes.object]),prefetch:PropTypes.bool,replace:PropTypes.bool,shallow:PropTypes.bool,passHref:PropTypes.bool,scroll:PropTypes.bool,children:PropTypes.oneOfType([PropTypes.element,(props,propName)=>{var value=props[propName];if(typeof value==='string'){warn(\"Warning: You're using a string directly inside <Link>. This usage has been deprecated. Please add an <a> tag as child of <Link>\");}return null;}]).isRequired});}var _default=Link;exports.default=_default;","\"use strict\";var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");exports.__esModule=true;exports.useRouter=useRouter;exports.makePublicRouterInstance=makePublicRouterInstance;exports.createRouter=exports.withRouter=exports.default=void 0;var _react=_interopRequireDefault(require(\"react\"));var _router2=_interopRequireWildcard(require(\"../next-server/lib/router/router\"));exports.Router=_router2.default;exports.NextRouter=_router2.NextRouter;var _routerContext=require(\"../next-server/lib/router-context\");var _withRouter=_interopRequireDefault(require(\"./with-router\"));exports.withRouter=_withRouter.default;/* global window */var singletonRouter={router:null,// holds the actual router instance\nreadyCallbacks:[],ready(cb){if(this.router)return cb();if(typeof window!=='undefined'){this.readyCallbacks.push(cb);}}};// Create public properties and methods of the router in the singletonRouter\nvar urlPropertyFields=['pathname','route','query','asPath','components','isFallback'];var routerEvents=['routeChangeStart','beforeHistoryChange','routeChangeComplete','routeChangeError','hashChangeStart','hashChangeComplete'];var coreMethodFields=['push','replace','reload','back','prefetch','beforePopState'];// Events is a static property on the router, the router doesn't have to be initialized to use it\nObject.defineProperty(singletonRouter,'events',{get(){return _router2.default.events;}});urlPropertyFields.forEach(field=>{// Here we need to use Object.defineProperty because, we need to return\n// the property assigned to the actual router\n// The value might get changed as we change routes and this is the\n// proper way to access it\nObject.defineProperty(singletonRouter,field,{get(){var router=getRouter();return router[field];}});});coreMethodFields.forEach(field=>{// We don't really know the types here, so we add them later instead\n;singletonRouter[field]=function(){var router=getRouter();return router[field](...arguments);};});routerEvents.forEach(event=>{singletonRouter.ready(()=>{_router2.default.events.on(event,function(){var eventField=\"on\"+event.charAt(0).toUpperCase()+event.substring(1);var _singletonRouter=singletonRouter;if(_singletonRouter[eventField]){try{_singletonRouter[eventField](...arguments);}catch(err){// tslint:disable-next-line:no-console\nconsole.error(\"Error when running the Router event: \"+eventField);// tslint:disable-next-line:no-console\nconsole.error(err.message+\"\\n\"+err.stack);}}});});});function getRouter(){if(!singletonRouter.router){var message='No router instance found.\\n'+'You should only use \"next/router\" inside the client side of your app.\\n';throw new Error(message);}return singletonRouter.router;}// Export the singletonRouter and this is the public API.\nvar _default=singletonRouter;// Reexport the withRoute HOC\nexports.default=_default;function useRouter(){return _react.default.useContext(_routerContext.RouterContext);}// INTERNAL APIS\n// -------------\n// (do not use following exports inside the app)\n// Create a router and assign it as the singleton instance.\n// This is used in client side when we are initilizing the app.\n// This should **not** use inside the server.\nvar createRouter=function createRouter(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}singletonRouter.router=new _router2.default(...args);singletonRouter.readyCallbacks.forEach(cb=>cb());singletonRouter.readyCallbacks=[];return singletonRouter.router;};// This function is used to create the `withRouter` router instance\nexports.createRouter=createRouter;function makePublicRouterInstance(router){var _router=router;var instance={};for(var property of urlPropertyFields){if(typeof _router[property]==='object'){instance[property]=Object.assign({},_router[property]);// makes sure query is not stateful\ncontinue;}instance[property]=_router[property];}// Events is a static property on the router, the router doesn't have to be initialized to use it\ninstance.events=_router2.default.events;coreMethodFields.forEach(field=>{instance[field]=function(){return _router[field](...arguments);};});return instance;}","\"use strict\";var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");exports.__esModule=true;exports.default=withRouter;var _react=_interopRequireDefault(require(\"react\"));var _router=require(\"./router\");function withRouter(ComposedComponent){function WithRouterWrapper(props){return _react.default.createElement(ComposedComponent,Object.assign({router:(0,_router.useRouter)()},props));}WithRouterWrapper.getInitialProps=ComposedComponent.getInitialProps// This is needed to allow checking for custom getInitialProps in _app\n;WithRouterWrapper.origGetInitialProps=ComposedComponent.origGetInitialProps;if(process.env.NODE_ENV!=='production'){var name=ComposedComponent.displayName||ComposedComponent.name||'Unknown';WithRouterWrapper.displayName=\"withRouter(\"+name+\")\";}return WithRouterWrapper;}","\"use strict\";\n/*\nMIT License\n\nCopyright (c) Jason Miller (https://jasonformat.com/)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction mitt() {\n    const all = Object.create(null);\n    return {\n        on(type, handler) {\n            ;\n            (all[type] || (all[type] = [])).push(handler);\n        },\n        off(type, handler) {\n            if (all[type]) {\n                // tslint:disable-next-line:no-bitwise\n                all[type].splice(all[type].indexOf(handler) >>> 0, 1);\n            }\n        },\n        emit(type, ...evts) {\n            // eslint-disable-next-line array-callback-return\n            ;\n            (all[type] || []).slice().map((handler) => {\n                handler(...evts);\n            });\n        },\n    };\n}\nexports.default = mitt;\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = __importStar(require(\"react\"));\nexports.RouterContext = React.createContext(null);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst url_1 = require(\"url\");\nconst mitt_1 = __importDefault(require(\"../mitt\"));\nconst utils_1 = require(\"../utils\");\nconst is_dynamic_1 = require(\"./utils/is-dynamic\");\nconst route_matcher_1 = require(\"./utils/route-matcher\");\nconst route_regex_1 = require(\"./utils/route-regex\");\nfunction addBasePath(path) {\n    // variable is always a string\n    const p = process.env.__NEXT_ROUTER_BASEPATH;\n    return path.indexOf(p) !== 0 ? p + path : path;\n}\nfunction toRoute(path) {\n    return path.replace(/\\/$/, '') || '/';\n}\nconst prepareRoute = (path) => toRoute(!path || path === '/' ? '/index' : path);\nfunction fetchNextData(pathname, query, isServerRender, cb) {\n    let attempts = isServerRender ? 3 : 1;\n    function getResponse() {\n        return fetch(utils_1.formatWithValidation({\n            // @ts-ignore __NEXT_DATA__\n            pathname: `/_next/data/${__NEXT_DATA__.buildId}${pathname}.json`,\n            query,\n        }), {\n            // Cookies are required to be present for Next.js' SSG \"Preview Mode\".\n            // Cookies may also be required for `getServerSideProps`.\n            //\n            // > `fetch` wonât send cookies, unless you set the credentials init\n            // > option.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n            //\n            // > For maximum browser compatibility when it comes to sending &\n            // > receiving cookies, always supply the `credentials: 'same-origin'`\n            // > option instead of relying on the default.\n            // https://github.com/github/fetch#caveats\n            credentials: 'same-origin',\n        }).then(res => {\n            if (!res.ok) {\n                if (--attempts > 0 && res.status >= 500) {\n                    return getResponse();\n                }\n                throw new Error(`Failed to load static props`);\n            }\n            return res.json();\n        });\n    }\n    return getResponse()\n        .then(data => {\n        return cb ? cb(data) : data;\n    })\n        .catch((err) => {\n        // We should only trigger a server-side transition if this was caused\n        // on a client-side transition. Otherwise, we'd get into an infinite\n        // loop.\n        if (!isServerRender) {\n            ;\n            err.code = 'PAGE_LOAD_ERROR';\n        }\n        throw err;\n    });\n}\nclass Router {\n    constructor(pathname, query, as, { initialProps, pageLoader, App, wrapApp, Component, err, subscription, isFallback, }) {\n        // Static Data Cache\n        this.sdc = {};\n        this.onPopState = (e) => {\n            if (!e.state) {\n                // We get state as undefined for two reasons.\n                //  1. With older safari (< 8) and older chrome (< 34)\n                //  2. When the URL changed with #\n                //\n                // In the both cases, we don't need to proceed and change the route.\n                // (as it's already changed)\n                // But we can simply replace the state with the new changes.\n                // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n                // So, doing the following for (1) does no harm.\n                const { pathname, query } = this;\n                this.changeState('replaceState', utils_1.formatWithValidation({ pathname, query }), utils_1.getURL());\n                return;\n            }\n            // Make sure we don't re-render on initial load,\n            // can be caused by navigating back from an external site\n            if (e.state &&\n                this.isSsr &&\n                e.state.as === this.asPath &&\n                url_1.parse(e.state.url).pathname === this.pathname) {\n                return;\n            }\n            // If the downstream application returns falsy, return.\n            // They will then be responsible for handling the event.\n            if (this._bps && !this._bps(e.state)) {\n                return;\n            }\n            const { url, as, options } = e.state;\n            if (process.env.NODE_ENV !== 'production') {\n                if (typeof url === 'undefined' || typeof as === 'undefined') {\n                    console.warn('`popstate` event triggered but `event.state` did not have `url` or `as` https://err.sh/zeit/next.js/popstate-state-empty');\n                }\n            }\n            this.replace(url, as, options);\n        };\n        this._getStaticData = (asPath) => {\n            const pathname = prepareRoute(url_1.parse(asPath).pathname);\n            return process.env.NODE_ENV === 'production' && this.sdc[pathname]\n                ? Promise.resolve(this.sdc[pathname])\n                : fetchNextData(pathname, null, this.isSsr, data => (this.sdc[pathname] = data));\n        };\n        this._getServerData = (asPath) => {\n            let { pathname, query } = url_1.parse(asPath, true);\n            pathname = prepareRoute(pathname);\n            return fetchNextData(pathname, query, this.isSsr);\n        };\n        // represents the current component key\n        this.route = toRoute(pathname);\n        // set up the component cache (by route keys)\n        this.components = {};\n        // We should not keep the cache, if there's an error\n        // Otherwise, this cause issues when when going back and\n        // come again to the errored page.\n        if (pathname !== '/_error') {\n            this.components[this.route] = {\n                Component,\n                props: initialProps,\n                err,\n                __N_SSG: initialProps && initialProps.__N_SSG,\n                __N_SSP: initialProps && initialProps.__N_SSP,\n            };\n        }\n        this.components['/_app'] = { Component: App };\n        // Backwards compat for Router.router.events\n        // TODO: Should be remove the following major version as it was never documented\n        this.events = Router.events;\n        this.pageLoader = pageLoader;\n        this.pathname = pathname;\n        this.query = query;\n        // if auto prerendered and dynamic route wait to update asPath\n        // until after mount to prevent hydration mismatch\n        this.asPath =\n            // @ts-ignore this is temporarily global (attached to window)\n            is_dynamic_1.isDynamicRoute(pathname) && __NEXT_DATA__.autoExport ? pathname : as;\n        this.sub = subscription;\n        this.clc = null;\n        this._wrapApp = wrapApp;\n        // make sure to ignore extra popState in safari on navigating\n        // back from external site\n        this.isSsr = true;\n        this.isFallback = isFallback;\n        if (typeof window !== 'undefined') {\n            // in order for `e.state` to work on the `onpopstate` event\n            // we have to register the initial route upon initialization\n            this.changeState('replaceState', utils_1.formatWithValidation({ pathname, query }), as);\n            window.addEventListener('popstate', this.onPopState);\n        }\n    }\n    // @deprecated backwards compatibility even though it's a private method.\n    static _rewriteUrlForNextExport(url) {\n        if (process.env.__NEXT_EXPORT_TRAILING_SLASH) {\n            const rewriteUrlForNextExport = require('./rewrite-url-for-export')\n                .rewriteUrlForNextExport;\n            return rewriteUrlForNextExport(url);\n        }\n        else {\n            return url;\n        }\n    }\n    update(route, mod) {\n        const Component = mod.default || mod;\n        const data = this.components[route];\n        if (!data) {\n            throw new Error(`Cannot update unavailable route: ${route}`);\n        }\n        const newData = Object.assign(Object.assign({}, data), { Component, __N_SSG: mod.__N_SSG, __N_SSP: mod.__N_SSP });\n        this.components[route] = newData;\n        // pages/_app.js updated\n        if (route === '/_app') {\n            this.notify(this.components[this.route]);\n            return;\n        }\n        if (route === this.route) {\n            this.notify(newData);\n        }\n    }\n    reload() {\n        window.location.reload();\n    }\n    /**\n     * Go back in history\n     */\n    back() {\n        window.history.back();\n    }\n    /**\n     * Performs a `pushState` with arguments\n     * @param url of the route\n     * @param as masks `url` for the browser\n     * @param options object you can define `shallow` and other options\n     */\n    push(url, as = url, options = {}) {\n        return this.change('pushState', url, as, options);\n    }\n    /**\n     * Performs a `replaceState` with arguments\n     * @param url of the route\n     * @param as masks `url` for the browser\n     * @param options object you can define `shallow` and other options\n     */\n    replace(url, as = url, options = {}) {\n        return this.change('replaceState', url, as, options);\n    }\n    change(method, _url, _as, options) {\n        return new Promise((resolve, reject) => {\n            if (!options._h) {\n                this.isSsr = false;\n            }\n            // marking route changes as a navigation start entry\n            if (utils_1.ST) {\n                performance.mark('routeChange');\n            }\n            // If url and as provided as an object representation,\n            // we'll format them into the string version here.\n            const url = typeof _url === 'object' ? utils_1.formatWithValidation(_url) : _url;\n            let as = typeof _as === 'object' ? utils_1.formatWithValidation(_as) : _as;\n            // Add the ending slash to the paths. So, we can serve the\n            // \"<page>/index.html\" directly for the SSR page.\n            if (process.env.__NEXT_EXPORT_TRAILING_SLASH) {\n                const rewriteUrlForNextExport = require('./rewrite-url-for-export')\n                    .rewriteUrlForNextExport;\n                // @ts-ignore this is temporarily global (attached to window)\n                if (__NEXT_DATA__.nextExport) {\n                    as = rewriteUrlForNextExport(as);\n                }\n            }\n            this.abortComponentLoad(as);\n            // If the url change is only related to a hash change\n            // We should not proceed. We should only change the state.\n            // WARNING: `_h` is an internal option for handing Next.js client-side\n            // hydration. Your app should _never_ use this property. It may change at\n            // any time without notice.\n            if (!options._h && this.onlyAHashChange(as)) {\n                this.asPath = as;\n                Router.events.emit('hashChangeStart', as);\n                this.changeState(method, url, addBasePath(as), options);\n                this.scrollToHash(as);\n                Router.events.emit('hashChangeComplete', as);\n                return resolve(true);\n            }\n            const { pathname, query, protocol } = url_1.parse(url, true);\n            if (!pathname || protocol) {\n                if (process.env.NODE_ENV !== 'production') {\n                    throw new Error(`Invalid href passed to router: ${url} https://err.sh/zeit/next.js/invalid-href-passed`);\n                }\n                return resolve(false);\n            }\n            // If asked to change the current URL we should reload the current page\n            // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n            // We also need to set the method = replaceState always\n            // as this should not go into the history (That's how browsers work)\n            // We should compare the new asPath to the current asPath, not the url\n            if (!this.urlIsNew(as)) {\n                method = 'replaceState';\n            }\n            const route = toRoute(pathname);\n            const { shallow = false } = options;\n            if (is_dynamic_1.isDynamicRoute(route)) {\n                const { pathname: asPathname } = url_1.parse(as);\n                const routeRegex = route_regex_1.getRouteRegex(route);\n                const routeMatch = route_matcher_1.getRouteMatcher(routeRegex)(asPathname);\n                if (!routeMatch) {\n                    const missingParams = Object.keys(routeRegex.groups).filter(param => !query[param]);\n                    if (missingParams.length > 0) {\n                        if (process.env.NODE_ENV !== 'production') {\n                            console.warn(`Mismatching \\`as\\` and \\`href\\` failed to manually provide ` +\n                                `the params: ${missingParams.join(', ')} in the \\`href\\`'s \\`query\\``);\n                        }\n                        return reject(new Error(`The provided \\`as\\` value (${asPathname}) is incompatible with the \\`href\\` value (${route}). ` +\n                            `Read more: https://err.sh/zeit/next.js/incompatible-href-as`));\n                    }\n                }\n                else {\n                    // Merge params into `query`, overwriting any specified in search\n                    Object.assign(query, routeMatch);\n                }\n            }\n            Router.events.emit('routeChangeStart', as);\n            // If shallow is true and the route exists in the router cache we reuse the previous result\n            this.getRouteInfo(route, pathname, query, as, shallow).then(routeInfo => {\n                const { error } = routeInfo;\n                if (error && error.cancelled) {\n                    return resolve(false);\n                }\n                Router.events.emit('beforeHistoryChange', as);\n                this.changeState(method, url, addBasePath(as), options);\n                if (process.env.NODE_ENV !== 'production') {\n                    const appComp = this.components['/_app'].Component;\n                    window.next.isPrerendered =\n                        appComp.getInitialProps === appComp.origGetInitialProps &&\n                            !routeInfo.Component.getInitialProps;\n                }\n                this.set(route, pathname, query, as, routeInfo);\n                if (error) {\n                    Router.events.emit('routeChangeError', error, as);\n                    throw error;\n                }\n                Router.events.emit('routeChangeComplete', as);\n                return resolve(true);\n            }, reject);\n        });\n    }\n    changeState(method, url, as, options = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (typeof window.history === 'undefined') {\n                console.error(`Warning: window.history is not available.`);\n                return;\n            }\n            if (typeof window.history[method] === 'undefined') {\n                console.error(`Warning: window.history.${method} is not available`);\n                return;\n            }\n        }\n        if (method !== 'pushState' || utils_1.getURL() !== as) {\n            window.history[method]({\n                url,\n                as,\n                options,\n            }, \n            // Most browsers currently ignores this parameter, although they may use it in the future.\n            // Passing the empty string here should be safe against future changes to the method.\n            // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\n            '', as);\n        }\n    }\n    getRouteInfo(route, pathname, query, as, shallow = false) {\n        const cachedRouteInfo = this.components[route];\n        // If there is a shallow route transition possible\n        // If the route is already rendered on the screen.\n        if (shallow && cachedRouteInfo && this.route === route) {\n            return Promise.resolve(cachedRouteInfo);\n        }\n        const handleError = (err, loadErrorFail) => {\n            return new Promise(resolve => {\n                if (err.code === 'PAGE_LOAD_ERROR' || loadErrorFail) {\n                    // If we can't load the page it could be one of following reasons\n                    //  1. Page doesn't exists\n                    //  2. Page does exist in a different zone\n                    //  3. Internal error while loading the page\n                    // So, doing a hard reload is the proper way to deal with this.\n                    window.location.href = as;\n                    // Changing the URL doesn't block executing the current code path.\n                    // So, we need to mark it as a cancelled error and stop the routing logic.\n                    err.cancelled = true;\n                    // @ts-ignore TODO: fix the control flow here\n                    return resolve({ error: err });\n                }\n                if (err.cancelled) {\n                    // @ts-ignore TODO: fix the control flow here\n                    return resolve({ error: err });\n                }\n                resolve(this.fetchComponent('/_error')\n                    .then(res => {\n                    const { page: Component } = res;\n                    const routeInfo = { Component, err };\n                    return new Promise(resolve => {\n                        this.getInitialProps(Component, {\n                            err,\n                            pathname,\n                            query,\n                        }).then(props => {\n                            routeInfo.props = props;\n                            routeInfo.error = err;\n                            resolve(routeInfo);\n                        }, gipErr => {\n                            console.error('Error in error page `getInitialProps`: ', gipErr);\n                            routeInfo.error = err;\n                            routeInfo.props = {};\n                            resolve(routeInfo);\n                        });\n                    });\n                })\n                    .catch(err => handleError(err, true)));\n            });\n        };\n        return new Promise((resolve, reject) => {\n            if (cachedRouteInfo) {\n                return resolve(cachedRouteInfo);\n            }\n            this.fetchComponent(route).then(res => resolve({\n                Component: res.page,\n                __N_SSG: res.mod.__N_SSG,\n                __N_SSP: res.mod.__N_SSP,\n            }), reject);\n        })\n            .then((routeInfo) => {\n            const { Component, __N_SSG, __N_SSP } = routeInfo;\n            if (process.env.NODE_ENV !== 'production') {\n                const { isValidElementType } = require('react-is');\n                if (!isValidElementType(Component)) {\n                    throw new Error(`The default export is not a React Component in page: \"${pathname}\"`);\n                }\n            }\n            return this._getData(() => __N_SSG\n                ? this._getStaticData(as)\n                : __N_SSP\n                    ? this._getServerData(as)\n                    : this.getInitialProps(Component, \n                    // we provide AppTree later so this needs to be `any`\n                    {\n                        pathname,\n                        query,\n                        asPath: as,\n                    })).then(props => {\n                routeInfo.props = props;\n                this.components[route] = routeInfo;\n                return routeInfo;\n            });\n        })\n            .catch(handleError);\n    }\n    set(route, pathname, query, as, data) {\n        this.isFallback = false;\n        this.route = route;\n        this.pathname = pathname;\n        this.query = query;\n        this.asPath = as;\n        this.notify(data);\n    }\n    /**\n     * Callback to execute before replacing router state\n     * @param cb callback to be executed\n     */\n    beforePopState(cb) {\n        this._bps = cb;\n    }\n    onlyAHashChange(as) {\n        if (!this.asPath)\n            return false;\n        const [oldUrlNoHash, oldHash] = this.asPath.split('#');\n        const [newUrlNoHash, newHash] = as.split('#');\n        // Makes sure we scroll to the provided hash if the url/hash are the same\n        if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n            return true;\n        }\n        // If the urls are change, there's more than a hash change\n        if (oldUrlNoHash !== newUrlNoHash) {\n            return false;\n        }\n        // If the hash has changed, then it's a hash only change.\n        // This check is necessary to handle both the enter and\n        // leave hash === '' cases. The identity case falls through\n        // and is treated as a next reload.\n        return oldHash !== newHash;\n    }\n    scrollToHash(as) {\n        const [, hash] = as.split('#');\n        // Scroll to top if the hash is just `#` with no value\n        if (hash === '') {\n            window.scrollTo(0, 0);\n            return;\n        }\n        // First we check if the element by id is found\n        const idEl = document.getElementById(hash);\n        if (idEl) {\n            idEl.scrollIntoView();\n            return;\n        }\n        // If there's no element with the id, we check the `name` property\n        // To mirror browsers\n        const nameEl = document.getElementsByName(hash)[0];\n        if (nameEl) {\n            nameEl.scrollIntoView();\n        }\n    }\n    urlIsNew(asPath) {\n        return this.asPath !== asPath;\n    }\n    /**\n     * Prefetch page code, you may wait for the data during page rendering.\n     * This feature only works in production!\n     * @param url the href of prefetched page\n     * @param asPath the as path of the prefetched page\n     */\n    prefetch(url, asPath = url, options = {}) {\n        return new Promise((resolve, reject) => {\n            const { pathname, protocol } = url_1.parse(url);\n            if (!pathname || protocol) {\n                if (process.env.NODE_ENV !== 'production') {\n                    throw new Error(`Invalid href passed to router: ${url} https://err.sh/zeit/next.js/invalid-href-passed`);\n                }\n                return;\n            }\n            // Prefetch is not supported in development mode because it would trigger on-demand-entries\n            if (process.env.NODE_ENV !== 'production') {\n                return;\n            }\n            Promise.all([\n                this.pageLoader.prefetchData(url, asPath),\n                this.pageLoader[options.priority ? 'loadPage' : 'prefetch'](toRoute(pathname)),\n            ]).then(() => resolve(), reject);\n        });\n    }\n    async fetchComponent(route) {\n        let cancelled = false;\n        const cancel = (this.clc = () => {\n            cancelled = true;\n        });\n        const componentResult = await this.pageLoader.loadPage(route);\n        if (cancelled) {\n            const error = new Error(`Abort fetching component for route: \"${route}\"`);\n            error.cancelled = true;\n            throw error;\n        }\n        if (cancel === this.clc) {\n            this.clc = null;\n        }\n        return componentResult;\n    }\n    _getData(fn) {\n        let cancelled = false;\n        const cancel = () => {\n            cancelled = true;\n        };\n        this.clc = cancel;\n        return fn().then(data => {\n            if (cancel === this.clc) {\n                this.clc = null;\n            }\n            if (cancelled) {\n                const err = new Error('Loading initial props cancelled');\n                err.cancelled = true;\n                throw err;\n            }\n            return data;\n        });\n    }\n    getInitialProps(Component, ctx) {\n        const { Component: App } = this.components['/_app'];\n        const AppTree = this._wrapApp(App);\n        ctx.AppTree = AppTree;\n        return utils_1.loadGetInitialProps(App, {\n            AppTree,\n            Component,\n            router: this,\n            ctx,\n        });\n    }\n    abortComponentLoad(as) {\n        if (this.clc) {\n            const e = new Error('Route Cancelled');\n            e.cancelled = true;\n            Router.events.emit('routeChangeError', e, as);\n            this.clc();\n            this.clc = null;\n        }\n    }\n    notify(data) {\n        this.sub(data, this.components['/_app'].Component);\n    }\n}\nexports.default = Router;\nRouter.events = mitt_1.default();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Identify /[param]/ in route string\nconst TEST_ROUTE = /\\/\\[[^/]+?\\](?=\\/|$)/;\nfunction isDynamicRoute(route) {\n    return TEST_ROUTE.test(route);\n}\nexports.isDynamicRoute = isDynamicRoute;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getRouteMatcher(routeRegex) {\n    const { re, groups } = routeRegex;\n    return (pathname) => {\n        const routeMatch = re.exec(pathname);\n        if (!routeMatch) {\n            return false;\n        }\n        const decode = decodeURIComponent;\n        const params = {};\n        Object.keys(groups).forEach((slugName) => {\n            const g = groups[slugName];\n            const m = routeMatch[g.pos];\n            if (m !== undefined) {\n                params[slugName] = ~m.indexOf('/')\n                    ? m.split('/').map(entry => decode(entry))\n                    : g.repeat\n                        ? [decode(m)]\n                        : decode(m);\n            }\n        });\n        return params;\n    };\n}\nexports.getRouteMatcher = getRouteMatcher;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getRouteRegex(normalizedRoute) {\n    // Escape all characters that could be considered RegEx\n    const escapedRoute = (normalizedRoute.replace(/\\/$/, '') || '/').replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&');\n    const groups = {};\n    let groupIndex = 1;\n    const parameterizedRoute = escapedRoute.replace(/\\/\\\\\\[([^/]+?)\\\\\\](?=\\/|$)/g, (_, $1) => {\n        const isCatchAll = /^(\\\\\\.){3}/.test($1);\n        groups[$1\n            // Un-escape key\n            .replace(/\\\\([|\\\\{}()[\\]^$+*?.-])/g, '$1')\n            .replace(/^\\.{3}/, '')\n        // eslint-disable-next-line no-sequences\n        ] = { pos: groupIndex++, repeat: isCatchAll };\n        return isCatchAll ? '/(.+?)' : '/([^/]+?)';\n    });\n    return {\n        re: new RegExp('^' + parameterizedRoute + '(?:/)?$', 'i'),\n        groups,\n    };\n}\nexports.getRouteRegex = getRouteRegex;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst url_1 = require(\"url\");\n/**\n * Utils\n */\nfunction execOnce(fn) {\n    let used = false;\n    let result = null;\n    return (...args) => {\n        if (!used) {\n            used = true;\n            result = fn.apply(this, args);\n        }\n        return result;\n    };\n}\nexports.execOnce = execOnce;\nfunction getLocationOrigin() {\n    const { protocol, hostname, port } = window.location;\n    return `${protocol}//${hostname}${port ? ':' + port : ''}`;\n}\nexports.getLocationOrigin = getLocationOrigin;\nfunction getURL() {\n    const { href } = window.location;\n    const origin = getLocationOrigin();\n    return href.substring(origin.length);\n}\nexports.getURL = getURL;\nfunction getDisplayName(Component) {\n    return typeof Component === 'string'\n        ? Component\n        : Component.displayName || Component.name || 'Unknown';\n}\nexports.getDisplayName = getDisplayName;\nfunction isResSent(res) {\n    return res.finished || res.headersSent;\n}\nexports.isResSent = isResSent;\nasync function loadGetInitialProps(App, ctx) {\n    var _a;\n    if (process.env.NODE_ENV !== 'production') {\n        if ((_a = App.prototype) === null || _a === void 0 ? void 0 : _a.getInitialProps) {\n            const message = `\"${getDisplayName(App)}.getInitialProps()\" is defined as an instance method - visit https://err.sh/zeit/next.js/get-initial-props-as-an-instance-method for more information.`;\n            throw new Error(message);\n        }\n    }\n    // when called from _app `ctx` is nested in `ctx`\n    const res = ctx.res || (ctx.ctx && ctx.ctx.res);\n    if (!App.getInitialProps) {\n        if (ctx.ctx && ctx.Component) {\n            // @ts-ignore pageProps default\n            return {\n                pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx),\n            };\n        }\n        return {};\n    }\n    const props = await App.getInitialProps(ctx);\n    if (res && isResSent(res)) {\n        return props;\n    }\n    if (!props) {\n        const message = `\"${getDisplayName(App)}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`;\n        throw new Error(message);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        if (Object.keys(props).length === 0 && !ctx.ctx) {\n            console.warn(`${getDisplayName(App)} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://err.sh/zeit/next.js/empty-object-getInitialProps`);\n        }\n    }\n    return props;\n}\nexports.loadGetInitialProps = loadGetInitialProps;\nexports.urlObjectKeys = [\n    'auth',\n    'hash',\n    'host',\n    'hostname',\n    'href',\n    'path',\n    'pathname',\n    'port',\n    'protocol',\n    'query',\n    'search',\n    'slashes',\n];\nfunction formatWithValidation(url, options) {\n    if (process.env.NODE_ENV === 'development') {\n        if (url !== null && typeof url === 'object') {\n            Object.keys(url).forEach(key => {\n                if (exports.urlObjectKeys.indexOf(key) === -1) {\n                    console.warn(`Unknown key passed via urlObject into url.format: ${key}`);\n                }\n            });\n        }\n    }\n    return url_1.format(url, options);\n}\nexports.formatWithValidation = formatWithValidation;\nexports.SP = typeof performance !== 'undefined';\nexports.ST = exports.SP &&\n    typeof performance.mark === 'function' &&\n    typeof performance.measure === 'function';\n","module.exports = require('./dist/client/link')\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","var _typeof = require(\"../helpers/typeof\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nmodule.exports = _interopRequireWildcard;","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","/** @license React v16.8.6\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\n\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' ||\n  // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);\n}\n\n/**\n * Forked from fbjs/warning:\n * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\n *\n * Only change is we use console.warn instead of console.error,\n * and do nothing when 'console' is not supported.\n * This really simplifies the code.\n * ---\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar lowPriorityWarning = function () {};\n\n{\n  var printWarning = function (format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.warn(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  lowPriorityWarning = function (condition, format) {\n    if (format === undefined) {\n      throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nvar lowPriorityWarning$1 = lowPriorityWarning;\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n              default:\n                return $$typeof;\n            }\n        }\n      case REACT_LAZY_TYPE:\n      case REACT_MEMO_TYPE:\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n}\n\n// AsyncMode is deprecated along with isAsyncMode\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\n\nvar hasWarnedAboutDeprecatedIsAsyncMode = false;\n\n// AsyncMode should be deprecated\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true;\n      lowPriorityWarning$1(false, 'The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.typeOf = typeOf;\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isValidElementType = isValidElementType;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","import PropTypes from 'prop-types';\nimport Completed from '../../components/completed/Completed';\n\nconst CompletedPage = ({ query }) => (\n  <div>\n    <Completed {...query} />\n  </div>\n);\n\nexport default CompletedPage;\n\nCompletedPage.propTypes = {\n  query: PropTypes.object.isRequired,\n};\n","module.exports = require(\"@apollo/react-hooks\");","module.exports = require(\"@chakra-ui/core\");","module.exports = require(\"apollo-boost\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"isomorphic-unfetch\");","module.exports = require(\"next/head\");","module.exports = require(\"next/router\");","module.exports = require(\"prop-types\");","module.exports = require(\"prop-types-exact\");","module.exports = require(\"react\");","module.exports = require(\"url\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AALA;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AAXA;AAgBA;AACA;AACA;AAEA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;ACxCA;AACA;AASA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAaA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AA6BA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AALA;AASA;AAIA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AASA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAcA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;;;;;;;;;;;;;;;;;;;;ACpQA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AAcA;AAEA;AACA;AACA;AACA;AACA;AAJA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AAcA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAoDA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAYA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAUA;AADA;AAXA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AAsCA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;AADA;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AA9CA;AAwDA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;;;;;;;;;;;;;;;;;;;;;AC7SA;AACA;AAYA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAWA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAMA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAPA;AAUA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AATA;AAiBA;AACA;AACA;AAEA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;AC9FA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AALA;AACA;AAYA;AAEA;AACA;AACA;AACA;AAHA;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AAEA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAHA;AAKA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhCA;AAkCA;AAGA;AACA;AACA;AACA;AAOA;AAIA;AAGA;AAGA;AArBA;AA0BA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AALA;AAWA;AACA;AACA;AACA;AACA;AACA;AANA;AAWA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AASA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAcA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAgBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;;;;;;;;;;;;;;;;;;;;;;;;;AC3QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAHA;AAKA;AADA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;AAAA;AAueA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AAJA;AAUA;AACA;AACA;AAHA;AASA;AAGA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AAEA;AAAA;AAGA;AACA;AACA;AAUA;AAbA;AAiBA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAtBA;AAuBA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAWA;AACA;AACA;AACA;AAJA;AAQA;AAAA;AAAA;AAAA;AAGA;AACA;AADA;AAGA;AAJA;AASA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AAAA;AAAA;AAlEA;AA6EA;AAIA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAOA;AAEA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnTA;AACA;AACA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAAA;AAQA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AANA;AAaA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AADA;AAIA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAiBA;AACA;AAGA;AACA;AACA;AACA;AACA;AALA;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAoBA;AACA;AACA;AACA;AAJA;AAeA;AAYA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AAKA;AA9BA;AAuCA;AA2BA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3SA;AACA;AAaA;AACA;AACA;AACA;AAOA;AACA;AACA;AAFA;AAsBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AAvCA;AAyCA;AACA;AADA;AAGA;AACA;AA7CA;AA+CA;AACA;AADA;AAGA;AACA;AAnDA;AAqDA;AACA;AADA;AAGA;AACA;AAzDA;AA2DA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAhEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAFA;AADA;AAMA;AACA;AACA;AAgeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAXA;AAcA;AACA;AACA;AACA;AAJA;AAgBA;AACA;AAhNA;AACA;AADA;AAEA;AACA;AACA;AAHA;AACA;AAgNA;;;;;;;;;;;;;;;;;;ACnOA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AAKA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AAAA;AAAA;AAKA;AACA;AAnCA;AACA;AAoCA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AADA;AAcA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAGA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AALA;AASA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAMA;AAIA;AACA;AACA;AACA;AACA;AACA;AANA;AAWA;AACA;AACA;;;;;;;;;;;;;;;;;AC7IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAuDA;AACA;AADA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAHA;AAUA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACtGA;AACA;AAaA;AACA;AACA;AAOA;AACA;AACA;AAFA;AAUA;AACA;AADA;AAGA;AACA;AAdA;AAgBA;AACA;AADA;AAGA;AACA;AApBA;AAsBA;AACA;AADA;AAGA;AACA;AA1BA;AA4BA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAjCA;AACA;AACA;AAFA;AAIA;AACA;AA6BA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AAGA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AASA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAKA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAMA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAPA;AAUA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AATA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAjBA;AAoBA;AACA;AACA;AACA;AAJA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7KA;AAmLA;AACA;AA/PA;AACA;AADA;AAEA;AACA;AACA;AAHA;AACA;AA+PA;;;;;;;;;;;;;;;;;;ACjRA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAQA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;AAAA;AACA;AAeA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AASA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AAHA;AAOA;AACA;AACA;AACA;AACA;AALA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAeA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAFA;AAFA;AASA;AACA;AAIA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AALA;AAOA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAPA;AAUA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AALA;AACA;AAaA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAKA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAZA;AAmBA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AAQA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AAJA;AA/FA;AA+GA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAQA;AAGA;AAAA;AAEA;AACA;AAAA;AAAA;AAIA;AACA;AAIA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAZA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAeA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AANA;AADA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAhCA;AAmCA;AACA;AACA;AACA;AAJA;AAhLA;AA+LA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAQA;AAKA;AAAA;AAAA;AAAA;AAIA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC3iBA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;AAAA;AAYA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AADA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AADA;AAGA;AAGA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAaA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAQA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAYA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAAA;AAAA;AAMA;;;AADA;AAKA;AANA;AASA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AAJA;AAQA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAiBA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;AC9NA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAFA;AAIA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAWA;AAEA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;ACrHA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAQA;AACA;AACA;AAKA;AACA;AACA;AAVA;AAeA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAOA;AACA;AAvEA;AACA;AADA;AAEA;AACA;AACA;AACA;AAJA;AACA;AAuEA;;;;;;;;;;;;;;;;;;;;AC9EA;AACA;AAamBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAAA;AAAA;AAOA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACzIA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAKA;AAAA;AAEA;AACA;AACA;AAHA;AAeA;AACA;AAKA;AACA;AACA;AATA;AAcA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAKA;AACA;AAjFA;AACA;AADA;AAEA;AACA;AACA;AAHA;AACA;AAiFA;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AAamBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAAA;AAAA;AAOA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/HA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AATA;AAcA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AAQA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AA4CA;;;;;;;;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAuCA;;;;;;AAAA;AAQA;;;;;;;AAAA;AASA;;;;;;AAAA;AAQA;;;;;;AAAA;AAQA;;;;;;;;;AAAA;AAWA;;;;;;AAAA;AAQA;;;;;;AAAA;AAQA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AASA;AACA;AADA;AAIA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AADA;AANA;AAYA;AAEA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AADA;AANA;AAWA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AADA;AANA;AAaA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AADA;AANA;AAYA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AADA;AANA;AAYA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AADA;AANA;AAYA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AADA;AANA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAMA;AAEA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAmDA;AACA;AADA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AAEA;AAEA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAkDA;AACA;AACA;AAEA;AACA;AAFA;AAHA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AAEA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAHA;AADA;AAYA;AAEA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AADA;AAQA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAFA;AAFA;AADA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAOA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAkDA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAHA;AASA;AACA;AACA;AACA;AAFA;AADA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAOA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAkDA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAHA;AASA;AACA;AACA;AACA;AAFA;AADA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAEA;AAMA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AALA;AAWA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAQA;AAEA;AAAA;AAAA;AACA;AAIA;AAKA;AACA;AACA;AACA;AAJA;AAOA;AAIA;AAIA;AACA;AACA;AACA;AACA;AALA;AAWA;AACA;AACA;AACA;AACA;AALA;AAUA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAcA;AACA;AACA;AAHA;AAUA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AAHA;AAWA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AAJA;AAQA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AATA;AAYA;AACA;AACA;AAHA;AAYA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AAEA;AADA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AAjBA;AAmBA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAMA;AAIA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AAEA;AALA;AAQA;AACA;AACA;AAFA;AApCA;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AACA;AApGA;AAsGA;AAAA;AAAA;AA3IA;AAuJA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AAJA;AAkBA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AAHA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAYA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AATA;AAkBA;AACA;AACA;AAHA;AAYA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AAHA;AASA;AACA;AACA;AAHA;AASA;AACA;AACA;AAHA;AAQA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AAHA;AASA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAEA;AACA;AACA;AAHA;AASA;AAAA;AAAA;AAQA;AACA;AACA;AAGA;AAGA;AATA;AAiBA;AACA;AACA;AACA;AACA;AAYA;AAYA;AA7BA;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AADA;AAYA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AADA;AAYA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AADA;AAeA;AACA;AACA;AA1DA;AAgEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AAEA;AACA;AAFA;AAdA;AAsBA;AACA;AACA;AACA;AAIA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AAEA;AACA;AAFA;AAKA;AAnBA;AA2BA;AACA;AACA;AA3FA;AAkGA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9oDA;AACA;AACA;AAUA;AAEA;;;;;;;;;;;AAAA;AAaA;AACA;AACA;AAFA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAeA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AAJA;AAgBA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAAA;AAAA;AACA;AAAA;AAKA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;ACrIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AAJA;AAUA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAJA;AAWA;AAAA;AAAA;AACA;AAGA;AAEA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AADA;AAGA;AACA;;;AAGA;;;;;;;;;;;;;;AAJA;AALA;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;;;;;;;;;;;;;;;;;;AADA;AAoBA;AACA;AACA;AACA;AACA;AAFA;AAFA;AApBA;AALA;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;;;AAGA;;;;;;AAJA;AALA;AAmBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAKA;AACA;AACA;AAHA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAWA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAWA;AAAA;AAAA;AAQA;AACA;AACA;AAEA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;ACrMA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAIA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAYA;AACA;AAAA;;;;;;;;;;;;AC/CA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACLA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AADA,+CAAA;AACA;AADA;AAAA;AACA;AApBA;AACA;AAkBA;AAAA;AACA;AAAA;AACA;AADA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;;;;;;;;;;;;ACvrBA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;;;;;;;;;;;;ACDA;AACA;;;;;;;;;;;;AAWA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAmBA;AACA;AAAA;;;;;;;;;;;;ACnCA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;;;;;;;;;;;;ACVA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AADA;AAIA;AACA;AAEA;AACA;AACA;AADA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA,iBAKA;AACA;AACA;AACA;AAAA;AACA,iBAIA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;AAGA;AACA;AACA;AACA;;;;;;;;AAMA;AACA;AACA;AACA;;;;;;;;AAMA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA,mBAOA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAIA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AA/eA;AACA;AA+eA;AACA;;;;;;;;;;;;ACljBA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;ACPA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;ACzBA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;;;;;;;;;;;;ACtBA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;;ACtGA;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChlOA;AACA;AACA,aAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAKA;AAEA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;ACXA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}