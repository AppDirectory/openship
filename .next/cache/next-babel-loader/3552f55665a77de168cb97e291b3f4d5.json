{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport { Pane, Spinner } from 'evergreen-ui';\nimport { CURRENT_USER_QUERY } from './User';\nimport Userform from './Userform';\nimport Logo from '../Logo/Logo';\nconst RESET_MUTATION = gql`\n  mutation RESET_MUTATION(\n    $resetToken: String!\n    $password: String!\n    $confirmPassword: String!\n  ) {\n    resetPassword(\n      resetToken: $resetToken\n      password: $password\n      confirmPassword: $confirmPassword\n    ) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nfunction Reset({\n  resetToken\n}) {\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  useEffect(() => {\n    if (!resetToken) {\n      Router.push('/');\n    }\n  });\n  return React.createElement(Pane, {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    height: \"100vh\",\n    background: \"tint1\"\n  }, resetToken ? React.createElement(Pane, {\n    margin: 16\n  }, React.createElement(Pane, {\n    width: 180,\n    marginX: \"15px\",\n    marginBottom: \"15px\"\n  }, React.createElement(Logo, {\n    color: \"#162b4c\"\n  })), React.createElement(Mutation, {\n    mutation: RESET_MUTATION,\n    variables: {\n      resetToken,\n      password,\n      confirmPassword\n    },\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }],\n    onCompleted: () => {\n      Router.push('/');\n    }\n  }, (reset, {\n    error,\n    loading,\n    called\n  }) => React.createElement(Userform, {\n    title: \"Please enter a new password\",\n    handleToggleClick: () => {\n      Router.push('/');\n    },\n    buttonTitle: \"Confirm\",\n    buttonColor: \"#47B881\",\n    error: error,\n    loading: loading,\n    buttonDisabled: !password || !confirmPassword,\n    fields: [{\n      label: 'Password',\n      value: password,\n      onChange: setPassword,\n      icon: 'lock'\n    }, {\n      label: 'Confirm Password',\n      value: confirmPassword,\n      onChange: setConfirmPassword,\n      icon: 'lock',\n      type: 'password'\n    }] // bottomText=\"Already have an account?\"\n    ,\n    bottomLinkText: \"Back to Sign In\",\n    onSubmit: async e => {\n      e.preventDefault();\n      await reset();\n      setPassword('');\n      setConfirmPassword('');\n    }\n  }))) : React.createElement(Spinner, null), \";\");\n}\n\nexport default Reset;","map":null,"metadata":{},"sourceType":"module"}