{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useQuery } from '@apollo/react-hooks';\nimport { Box, Spinner, Text } from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\nimport { CURRENT_USER_QUERY } from './User';\nimport Signin from './Signin';\n\nconst PleaseSignIn = ({\n  children\n}) => {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(CURRENT_USER_QUERY);\n\n  if (loading) {\n    return __jsx(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100vh\"\n    }, __jsx(Spinner, {\n      thickness: \"4px\",\n      speed: \"0.65s\",\n      emptyColor: \"gray.200\",\n      color: \"blue.500\",\n      size: \"xl\"\n    }));\n  }\n\n  if (!data) {\n    return __jsx(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100vh\"\n    }, __jsx(Box, {\n      background: \"rgb(250, 226, 226)\",\n      borderRadius: 2,\n      padding: 3,\n      marginX: 4\n    }, __jsx(Text, {\n      display: 'inline-block',\n      boxSizing: 'border-box',\n      marginX: 4,\n      marginY: 2,\n      borderRadius: 2,\n      textAlign: 'center',\n      textDecoration: 'none',\n      textTransform: 'uppercase',\n      color: 'rgb(191, 14, 8)',\n      fontSize: '18px',\n      fontWeight: 600\n    }, \"URL not Whitelisted. Please check URL under settings.\")));\n  }\n\n  if (!data.me) {\n    return __jsx(Signin, null);\n  }\n\n  return children;\n};\n\nexport default PleaseSignIn;\nPleaseSignIn.propTypes = {\n  children: PropTypes.element.isRequired\n};","map":{"version":3,"sources":["/Users/junaid/openship2/components/user/PleaseSignIn.js"],"names":["useQuery","Box","Spinner","Text","PropTypes","CURRENT_USER_QUERY","Signin","PleaseSignIn","children","data","loading","error","display","boxSizing","marginX","marginY","borderRadius","textAlign","textDecoration","textTransform","color","fontSize","fontWeight","me","propTypes","element","isRequired"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,IAAvB,QAAmC,iBAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,QAAmC,QAAnC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACrC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BX,QAAQ,CAACK,kBAAD,CAAzC;;AAEA,MAAIK,OAAJ,EAAa;AACX,WACE,MAAC,GAAD;AACE,MAAA,OAAO,EAAC,MADV;AAEE,MAAA,UAAU,EAAC,QAFb;AAGE,MAAA,cAAc,EAAC,QAHjB;AAIE,MAAA,MAAM,EAAC;AAJT,OAME,MAAC,OAAD;AACE,MAAA,SAAS,EAAC,KADZ;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,UAAU,EAAC,UAHb;AAIE,MAAA,KAAK,EAAC,UAJR;AAKE,MAAA,IAAI,EAAC;AALP,MANF,CADF;AAgBD;;AACD,MAAI,CAACD,IAAL,EAAW;AACT,WACE,MAAC,GAAD;AACE,MAAA,OAAO,EAAC,MADV;AAEE,MAAA,UAAU,EAAC,QAFb;AAGE,MAAA,cAAc,EAAC,QAHjB;AAIE,MAAA,MAAM,EAAC;AAJT,OAME,MAAC,GAAD;AACE,MAAA,UAAU,EAAC,oBADb;AAEE,MAAA,YAAY,EAAE,CAFhB;AAGE,MAAA,OAAO,EAAE,CAHX;AAIE,MAAA,OAAO,EAAE;AAJX,OAME,MAAC,IAAD,EACM;AACFG,MAAAA,OAAO,EAAE,cADP;AAEFC,MAAAA,SAAS,EAAE,YAFT;AAGFC,MAAAA,OAAO,EAAE,CAHP;AAIFC,MAAAA,OAAO,EAAE,CAJP;AAKFC,MAAAA,YAAY,EAAE,CALZ;AAMFC,MAAAA,SAAS,EAAE,QANT;AAOFC,MAAAA,cAAc,EAAE,MAPd;AAQFC,MAAAA,aAAa,EAAE,WARb;AASFC,MAAAA,KAAK,EAAE,iBATL;AAUFC,MAAAA,QAAQ,EAAE,MAVR;AAWFC,MAAAA,UAAU,EAAE;AAXV,KADN,0DANF,CANF,CADF;AAiCD;;AACD,MAAI,CAACb,IAAI,CAACc,EAAV,EAAc;AACZ,WAAO,MAAC,MAAD,OAAP;AACD;;AACD,SAAOf,QAAP;AACD,CA5DD;;AA8DA,eAAeD,YAAf;AAEAA,YAAY,CAACiB,SAAb,GAAyB;AACvBhB,EAAAA,QAAQ,EAAEJ,SAAS,CAACqB,OAAV,CAAkBC;AADL,CAAzB","sourcesContent":["import { useQuery } from '@apollo/react-hooks';\nimport { Box, Spinner, Text } from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\nimport { CURRENT_USER_QUERY } from './User';\nimport Signin from './Signin';\n\nconst PleaseSignIn = ({ children }) => {\n  const { data, loading, error } = useQuery(CURRENT_USER_QUERY);\n\n  if (loading) {\n    return (\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        height=\"100vh\"\n      >\n        <Spinner\n          thickness=\"4px\"\n          speed=\"0.65s\"\n          emptyColor=\"gray.200\"\n          color=\"blue.500\"\n          size=\"xl\"\n        />\n      </Box>\n    );\n  }\n  if (!data) {\n    return (\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        height=\"100vh\"\n      >\n        <Box\n          background=\"rgb(250, 226, 226)\"\n          borderRadius={2}\n          padding={3}\n          marginX={4}\n        >\n          <Text\n            {...{\n              display: 'inline-block',\n              boxSizing: 'border-box',\n              marginX: 4,\n              marginY: 2,\n              borderRadius: 2,\n              textAlign: 'center',\n              textDecoration: 'none',\n              textTransform: 'uppercase',\n              color: 'rgb(191, 14, 8)',\n              fontSize: '18px',\n              fontWeight: 600,\n            }}\n          >\n            URL not Whitelisted. Please check URL under settings.\n          </Text>\n        </Box>\n      </Box>\n    );\n  }\n  if (!data.me) {\n    return <Signin />;\n  }\n  return children;\n};\n\nexport default PleaseSignIn;\n\nPleaseSignIn.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}