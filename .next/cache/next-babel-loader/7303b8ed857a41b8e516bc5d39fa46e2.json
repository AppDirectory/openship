{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation deleteShop($id: ID!) {\\n    deleteShop(id: $id) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState } from 'react';\nimport { gql } from 'apollo-boost';\nimport { Mutation } from 'react-apollo';\nimport { toaster, Pane, Text } from 'evergreen-ui';\nimport ShopList, { shopsQuery, shopsQueryVars } from '../shops/ShopList';\nimport Button from './Button';\nimport User from '../user/User';\nvar CREATE_SHOP_MUTATION = gql(_templateObject());\n\nvar DeleteShop = function DeleteShop(_ref) {\n  var id = _ref.id,\n      button = _ref.button;\n  return React.createElement(Mutation, {\n    mutation: CREATE_SHOP_MUTATION,\n    refetchQueries: [{\n      query: shopsQuery,\n      variables: shopsQueryVars\n    }]\n  }, function (deleteShop, _ref2) {\n    var error = _ref2.error,\n        loading = _ref2.loading;\n    return (// <Button\n      //   intent=\"primary\"\n      //   height={20}\n      // onClick={async () => {\n      //   await deleteShop({\n      //     variables: { id },\n      //   });\n      // }}\n      //   marginRight={5}\n      // >\n      //   Delete\n      // </Button>\n      React.createElement(Text, {\n        size: 400,\n        fontWeight: 500,\n        marginLeft: \"auto\",\n        color: \"#ea645f\",\n        className: \"hover\",\n        cursor: \"pointer\",\n        onClick:\n        /*#__PURE__*/\n        _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee() {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return deleteShop({\n                    variables: {\n                      id: id\n                    }\n                  });\n\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }))\n      }, button)\n    );\n  });\n};\n\nexport default DeleteShop;","map":null,"metadata":{},"sourceType":"module"}