{"ast":null,"code":"import { front, prodFront } from '../../config';\n\nfunction extractURL(url) {\n  const first = url.split('https://')[1];\n  const second = first.split('.myshopify')[0];\n  return second;\n}\n\nexport async function placeCustomOrder(cart, id, updateOrderFunc, channelsData) {\n  const url = extractURL(JSON.parse(cart).webUrl);\n  const {\n    settings\n  } = channelsData.channels.filter(channel => channel.type === 'SHOPIFY' && channel.settings && channel.settings.shopURL === url)[0]; //   if (settings.url && settings.secret) {\n\n  try {\n    const cartObj = JSON.parse(cart);\n    cartObj.pId = id;\n    const cartJson = JSON.stringify(cartObj);\n    const response = await fetch(`${false ? front : prodFront}/api/shopify/purchase?url=${settings.shopURL}&admin=${settings.secret}`, {\n      credentials: 'same-origin',\n      mode: 'cors',\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-type': 'application/json',\n        'X-Requested-With': 'Fetch'\n      },\n      body: cartJson\n    });\n    const res = await response.json();\n    console.log(res); // console.log(\"response received\");\n\n    const update = await updateOrderFunc({\n      variables: {\n        id,\n        customCheckout: res,\n        processed: 'TRUE'\n      }\n    }).then(function (data) {// console.log(data, \"after update\");\n      // forceUpdate();\n    }); // console.log(\"first2\", res);\n  } catch (e) {\n    console.log('error', e);\n  } //   }\n\n}","map":null,"metadata":{},"sourceType":"module"}