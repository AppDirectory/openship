{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getItem($itemID: String) {\\n    getItem(itemID: $itemID) {\\n      item\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Heading, Pane, Avatar, Text, Icon } from 'evergreen-ui';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\nimport Button from './Button';\nexport var getItem = gql(_templateObject());\n\nfunction formatter(arg) {\n  if (arg.toString().includes('|')) {\n    return arg;\n  }\n\n  return \"v1|\".concat(arg, \"|0\");\n}\n\nfunction LineItem(note, id) {\n  var lineItem = note.filter(function (a) {\n    return a.lineID.indexOf(id) >= 0;\n  }).map(function (b) {\n    return __jsx(Pane, {\n      elevation: 1,\n      background: \"#F9F9FB\",\n      paddingX: 10,\n      paddingY: 10,\n      margin: 15,\n      marginLeft: 25,\n      display: \"flex\",\n      alignItems: \"center\",\n      borderLeft: \"3px solid #47B881\",\n      maxWidth: \"40em\"\n    }, __jsx(Query, {\n      query: getItem,\n      variables: {\n        itemID: formatter(b.marketID)\n      }\n    }, function (_ref) {\n      var loading = _ref.loading,\n          error = _ref.error,\n          data = _ref.data;\n      if (loading) return __jsx(React.Fragment, null, __jsx(Pane, {\n        className: \"shine\",\n        height: 50,\n        width: 50\n      }), __jsx(Pane, {\n        className: \"shine\",\n        marginLeft: 10,\n        height: 15,\n        flex: 10\n      }), __jsx(Pane, {\n        className: \"shine\",\n        marginLeft: 10,\n        justifyContent: \"flex-end\",\n        borderRadius: 30,\n        height: 15,\n        width: 57\n      }));\n      var _data$getItem$item = data.getItem.item,\n          title = _data$getItem$item.title,\n          image = _data$getItem$item.image;\n      return __jsx(Pane, {\n        display: \"flex\",\n        alignItems: \"center\",\n        maxWidth: \"100%\"\n      }, __jsx(Avatar, {\n        src: image.imageUrl && image.imageUrl,\n        borderStyle: \"solid\",\n        borderWidth: \"1px\",\n        borderRadius: 3,\n        borderColor: \"#e8e9ea\",\n        size: 50\n      }), __jsx(Pane, {\n        display: \"flex\",\n        alignItems: \"center\"\n      }, __jsx(Pane, {\n        marginLeft: 20,\n        marginRight: 10\n      }, __jsx(Heading, {\n        size: 300\n      }, title), __jsx(Text, {\n        color: \"muted\",\n        fontSize: 14\n      })), __jsx(Pane, null, __jsx(Button, {\n        intent: \"primary\",\n        onClick: function onClick(e) {\n          e.stopPropagation();\n          window.open(\"https://google.com\", '_blank');\n        }\n      }, \"Order\", __jsx(Icon, {\n        color: \"#007489\",\n        icon: \"arrow-right\",\n        size: 12\n      })))));\n    }));\n  });\n  return lineItem;\n}\n\nexport default LineItem;","map":null,"metadata":{},"sourceType":"module"}