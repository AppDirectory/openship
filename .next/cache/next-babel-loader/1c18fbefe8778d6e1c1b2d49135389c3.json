{"ast":null,"code":"import React from \"react\";\nimport { Pane, Heading, Text, Avatar, Strong } from 'evergreen-ui';\nimport PropTypes from 'prop-types';\n\nvar OrderLine = function OrderLine(props) {\n  var item = props.item;\n\n  var priceString = function priceString(price, quantity) {\n    var total = Math.round(price * quantity * 100).toString();\n    return \"\".concat(total.substring(0, total.length - 2), \".\").concat(total.substring(total.length - 2));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Pane, {\n    background: \"#fff\",\n    border: \"muted\",\n    marginBottom: 5\n  }, React.createElement(Pane, {\n    display: \"flex\",\n    alignItems: \"center\"\n  }, React.createElement(Pane, {\n    height: \"100%\",\n    background: \"white\"\n  }, React.createElement(Avatar, {\n    src: item.img ? item.img : item.image && item.image.originalSrc,\n    borderRadius: 0,\n    size: 70,\n    backgroundColor: \"white\"\n  })), React.createElement(Pane, {\n    borderLeft: \"muted\",\n    padding: 5,\n    paddingLeft: 10\n  }, React.createElement(Heading, {\n    size: 300\n  }, item.name), React.createElement(Text, {\n    size: 300\n  }, item.id), React.createElement(\"br\", null), React.createElement(Text, {\n    size: 300\n  }, item.product_id), React.createElement(Pane, {\n    display: \"flex\"\n  }, item.quantity > 1 && React.createElement(Pane, null, React.createElement(Text, {\n    size: 300,\n    color: \"muted\"\n  }, \"$\", item.price ? item.price : item.discountedUnitPriceSet.shopMoney.amount, ' ', \"x \", item.quantity)), React.createElement(Heading, {\n    size: 300,\n    marginRight: 10,\n    color: \"green\"\n  }, \"$\", item.price ? priceString(item.price, item.quantity) : item.discountedUnitPriceSet.shopMoney.amount * item.quantity))))));\n};\n\nexport default OrderLine;\nOrderLine.propTypes = {\n  item: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/Users/junaid/openship/components/common/orderListItem/OrderLine.js"],"names":["Pane","Heading","Text","Avatar","Strong","PropTypes","OrderLine","props","item","priceString","price","quantity","total","Math","round","toString","substring","length","img","image","originalSrc","name","id","product_id","discountedUnitPriceSet","shopMoney","amount","propTypes","object","isRequired"],"mappings":";AAAA,SAASA,IAAT,EAAeC,OAAf,EAAwBC,IAAxB,EAA8BC,MAA9B,EAAsCC,MAAtC,QAAoD,cAApD;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AAAA,MACjBC,IADiB,GACRD,KADQ,CACjBC,IADiB;;AAGzB,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACvC,QAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,GAAGC,QAAR,GAAmB,GAA9B,EAAmCI,QAAnC,EAAd;AACA,qBAAUH,KAAK,CAACI,SAAN,CAAgB,CAAhB,EAAmBJ,KAAK,CAACK,MAAN,GAAe,CAAlC,CAAV,cAAkDL,KAAK,CAACI,SAAN,CAChDJ,KAAK,CAACK,MAAN,GAAe,CADiC,CAAlD;AAGD,GALD;;AAOA,SACE,0CACE,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAC,MAAjB;AAAwB,IAAA,MAAM,EAAC,OAA/B;AAAuC,IAAA,YAAY,EAAE;AAArD,KACE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,MAAd;AAAqB,IAAA,UAAU,EAAC;AAAhC,KACE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,UAAU,EAAC;AAA/B,KACE,oBAAC,MAAD;AACE,IAAA,GAAG,EAAET,IAAI,CAACU,GAAL,GAAWV,IAAI,CAACU,GAAhB,GAAsBV,IAAI,CAACW,KAAL,IAAcX,IAAI,CAACW,KAAL,CAAWC,WADtD;AAEE,IAAA,YAAY,EAAE,CAFhB;AAGE,IAAA,IAAI,EAAE,EAHR;AAIE,IAAA,eAAe,EAAC;AAJlB,IADF,CADF,EASE,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAC,OAAjB;AAAyB,IAAA,OAAO,EAAE,CAAlC;AAAqC,IAAA,WAAW,EAAE;AAAlD,KACE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAE;AAAf,KAAqBZ,IAAI,CAACa,IAA1B,CADF,EAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAZ,KAAkBb,IAAI,CAACc,EAAvB,CAFF,EAGE,+BAHF,EAIE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAZ,KAAkBd,IAAI,CAACe,UAAvB,CAJF,EAKE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC;AAAd,KAGGf,IAAI,CAACG,QAAL,GAAgB,CAAhB,IACC,oBAAC,IAAD,QACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,GAAZ;AAAiB,IAAA,KAAK,EAAC;AAAvB,UAEGH,IAAI,CAACE,KAAL,GACGF,IAAI,CAACE,KADR,GAEGF,IAAI,CAACgB,sBAAL,CAA4BC,SAA5B,CAAsCC,MAJ5C,EAIoD,GAJpD,QAKKlB,IAAI,CAACG,QALV,CADF,CAJJ,EAcE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAE,GAAf;AAAoB,IAAA,WAAW,EAAE,EAAjC;AAAqC,IAAA,KAAK,EAAC;AAA3C,UAEGH,IAAI,CAACE,KAAL,GACGD,WAAW,CAACD,IAAI,CAACE,KAAN,EAAaF,IAAI,CAACG,QAAlB,CADd,GAEGH,IAAI,CAACgB,sBAAL,CAA4BC,SAA5B,CAAsCC,MAAtC,GACAlB,IAAI,CAACG,QALX,CAdF,CALF,CATF,CADF,CADF,CADF;AA4CD,CAtDD;;AAwDA,eAAeL,SAAf;AAEAA,SAAS,CAACqB,SAAV,GAAsB;AACpBnB,EAAAA,IAAI,EAAEH,SAAS,CAACuB,MAAV,CAAiBC;AADH,CAAtB","sourcesContent":["import { Pane, Heading, Text, Avatar, Strong } from 'evergreen-ui';\nimport PropTypes from 'prop-types';\n\nconst OrderLine = props => {\n  const { item } = props;\n\n  const priceString = (price, quantity) => {\n    const total = Math.round(price * quantity * 100).toString();\n    return `${total.substring(0, total.length - 2)}.${total.substring(\n      total.length - 2\n    )}`;\n  };\n\n  return (\n    <>\n      <Pane background=\"#fff\" border=\"muted\" marginBottom={5}>\n        <Pane display=\"flex\" alignItems=\"center\">\n          <Pane height=\"100%\" background=\"white\">\n            <Avatar\n              src={item.img ? item.img : item.image && item.image.originalSrc}\n              borderRadius={0}\n              size={70}\n              backgroundColor=\"white\"\n            />\n          </Pane>\n          <Pane borderLeft=\"muted\" padding={5} paddingLeft={10}>\n            <Heading size={300}>{item.name}</Heading>\n            <Text size={300}>{item.id}</Text>\n            <br />\n            <Text size={300}>{item.product_id}</Text>\n            <Pane display=\"flex\">\n              {/* <Text size={300}>{lineItem.variant.title}</Text>\n              <Pane marginX={5}>Â·</Pane> */}\n              {item.quantity > 1 && (\n                <Pane>\n                  <Text size={300} color=\"muted\">\n                    $\n                    {item.price\n                      ? item.price\n                      : item.discountedUnitPriceSet.shopMoney.amount}{' '}\n                    x {item.quantity}\n                  </Text>\n                </Pane>\n              )}\n              <Heading size={300} marginRight={10} color=\"green\">\n                $\n                {item.price\n                  ? priceString(item.price, item.quantity)\n                  : item.discountedUnitPriceSet.shopMoney.amount *\n                    item.quantity}\n              </Heading>\n            </Pane>\n          </Pane>\n        </Pane>\n      </Pane>\n    </>\n  );\n};\n\nexport default OrderLine;\n\nOrderLine.propTypes = {\n  item: PropTypes.object.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}