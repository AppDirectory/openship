{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Box, Button, InputGroup, InputLeftElement, Input, Icon, Heading, Text, useToast } from '@chakra-ui/core';\nimport { CURRENT_USER_QUERY } from '../user/User';\nimport Pagination from '../common/Pagination';\nimport { CardStyle } from '../common/DefaultStyles';\nimport MarketplaceSearch from './MarketplaceSearch';\nimport ZincSearch from './ZincSearch';\nimport ShopifySearch from './ShopifySearch';\nimport { CHANNELS_QUERY, channelsQueryVars } from '../layout/Page';\nexport const getItemGroup = gql`\n  query getItemGroup($itemID: String) {\n    getItemGroup(itemID: $itemID) {\n      item\n    }\n  }\n`;\nconst sortOptions = [{\n  label: 'Lowest Price',\n  value: 'price'\n}, {\n  label: 'Highest Price',\n  value: '-price'\n}, {\n  label: 'Best Match',\n  value: 'match'\n}];\nexport const option = (name, options, update, selected) => __jsx(Box, {\n  marginBottom: 2,\n  marginRight: 5\n}, __jsx(Heading, {\n  fontSize: \"sm\",\n  color: \"text\",\n  fontWeight: 500,\n  marginBottom: 0\n}, name), __jsx(Box, {\n  display: \"flex\"\n}, options.length > 0 ? options.map((a, index) => __jsx(Box, {\n  id: a,\n  key: index,\n  p: 1,\n  mr: 2,\n  mt: 2,\n  borderRadius: 3,\n  bg: a === selected ? '#e2e9f2' : 'transparent',\n  onClick: () => update(a),\n  cursor: \"pointer\"\n}, __jsx(Heading, {\n  fontSize: \"xs\",\n  fontWeight: 500,\n  px: 1,\n  color: a === selected ? '#1070ca' : '#425a70',\n  letterSpacing: \"wide\",\n  textTransform: \"uppercase\"\n}, a))) : __jsx(Text, {\n  mt: 2,\n  fontSize: \"sm\",\n  color: \"text\"\n}, \"No Channels Added\")));\n\nconst Find = ({\n  headerSize,\n  atcDisabled,\n  addMPItem,\n  addCustomItem,\n  addZincItem\n}) => {\n  const allChannels = useQuery(CHANNELS_QUERY, {\n    variables: channelsQueryVars\n  });\n  const {\n    data,\n    error: channelsError,\n    loading: channelsLoading\n  } = allChannels;\n  const {\n    0: selectedChannel,\n    1: setSelectedChannel\n  } = useState(data.channels.length ? data.channels[0].name : '');\n  const {\n    0: value,\n    1: setValue\n  } = useState('price');\n  const {\n    0: searchBar,\n    1: setSearchBar\n  } = useState('');\n  const {\n    0: searchEntry,\n    1: setSearchEntry\n  } = useState('');\n  const {\n    0: limit,\n    1: setLimit\n  } = useState(10);\n  const {\n    0: pageNum,\n    1: setPageNum\n  } = useState(0);\n  const {\n    0: min,\n    1: setMin\n  } = useState('');\n  const {\n    0: max,\n    1: setMax\n  } = useState('');\n  const {\n    0: price,\n    1: setPrice\n  } = useState(null);\n  const {\n    0: priceCurrency,\n    1: setPriceCurrency\n  } = useState('USD');\n  const {\n    0: itemLocationCountry,\n    1: setItemLocationCountry\n  } = useState('US');\n  const {\n    0: include,\n    1: setInclude\n  } = useState([]);\n  const {\n    0: exclude,\n    1: setExclude\n  } = useState([]);\n  const {\n    data: {\n      me\n    }\n  } = useQuery(CURRENT_USER_QUERY);\n  const toast = useToast();\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    display: \"flex\",\n    py: 4\n  }, __jsx(Box, {\n    flex: 1,\n    alignItems: \"center\",\n    display: \"flex\"\n  }, __jsx(Heading, {\n    fontSize: \"2xl\",\n    color: \"text\",\n    fontWeight: 500\n  }, \"Marketplace\"))), __jsx(Box, _extends({}, CardStyle, {\n    background: \"white\"\n  }), __jsx(React.Fragment, null, __jsx(Box, {\n    display: \"flex\",\n    paddingX: \"1em\",\n    paddingY: \"1em\",\n    flexWrap: \"wrap\"\n  }, __jsx(Pagination, {\n    leftDisabled: pageNum === 0,\n    onLeft: () => setPageNum(pageNum - 1),\n    onRight: () => setPageNum(pageNum + 1)\n  }), __jsx(Box, {\n    flex: 1\n  }, __jsx(InputGroup, {\n    width: \"100%\",\n    borderColor: \"gray.300\"\n  }, __jsx(InputLeftElement, {\n    children: __jsx(Icon, {\n      name: \"search\",\n      color: \"gray.300\"\n    })\n  }), __jsx(Input, {\n    value: searchBar,\n    onChange: e => {\n      setSearchBar(e.target.value);\n      setPageNum(0);\n    },\n    onKeyPress: e => {\n      if (e.key === 'Enter') {\n        setSearchEntry(searchBar);\n      }\n    },\n    placeholder: \"Search\"\n  })))), (() => {\n    if (channelsError || !data || !data.channels) return null;\n    return __jsx(React.Fragment, null, __jsx(Box, {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      background: \"#f5f5f5\",\n      paddingY: \".7em\",\n      paddingX: \"1em\"\n    }, option('Channel', data.channels.map(a => a.name), a => setSelectedChannel(a), selectedChannel), option('Location', ['US', 'CN', 'All'], a => setItemLocationCountry(a), itemLocationCountry), option('Items per page', [10, 50, 100], a => setLimit(a), limit)), searchEntry && data.channels.filter(order => order.name === selectedChannel)[0].type === 'MARKETPLACE' && __jsx(MarketplaceSearch, {\n      search: searchEntry,\n      limit,\n      sort: value,\n      pageNum,\n      exclude,\n      include,\n      priceCurrency,\n      price,\n      itemLocationCountry,\n      atcDisabled,\n      addMPItem\n    }), data.channels.length > 0 && data.channels.filter(order => order.name === selectedChannel)[0].type === 'ZINC' && __jsx(ZincSearch, {\n      addZincItem: addZincItem,\n      atcDisabled: atcDisabled,\n      searchEntry: searchEntry,\n      token: data.channels.filter(c => c.type === 'ZINC')[0].settings.key\n    }), data.channels.length > 0 && data.channels.filter(order => order.name === selectedChannel)[0].type === 'SHOPIFY' && __jsx(ShopifySearch, {\n      addCustomItem: (a, b) => addCustomItem(a, b, data.channels.filter(order => order.name === selectedChannel)[0].settings.shopURL, data.channels.filter(order => order.name === selectedChannel)[0].settings.key),\n      checkout: () => toast({\n        position: 'top-right',\n        title: `Checkout`,\n        status: 'success',\n        duration: 2000,\n        isClosable: true\n      }),\n      client: \"Marketplace\",\n      atcDisabled: atcDisabled,\n      searchEntry: searchEntry,\n      apiKey: data.channels.filter(order => order.name === selectedChannel)[0].settings.key,\n      url: data.channels.filter(order => order.name === selectedChannel)[0].settings.shopURL\n    }));\n  })())));\n};\n\nexport default Find;","map":{"version":3,"sources":["/Users/junaid/openship/components/find/Find.js"],"names":["React","useState","Link","gql","useQuery","Box","Button","InputGroup","InputLeftElement","Input","Icon","Heading","Text","useToast","CURRENT_USER_QUERY","Pagination","CardStyle","MarketplaceSearch","ZincSearch","ShopifySearch","CHANNELS_QUERY","channelsQueryVars","getItemGroup","sortOptions","label","value","option","name","options","update","selected","length","map","a","index","Find","headerSize","atcDisabled","addMPItem","addCustomItem","addZincItem","allChannels","variables","data","error","channelsError","loading","channelsLoading","selectedChannel","setSelectedChannel","channels","setValue","searchBar","setSearchBar","searchEntry","setSearchEntry","limit","setLimit","pageNum","setPageNum","min","setMin","max","setMax","price","setPrice","priceCurrency","setPriceCurrency","itemLocationCountry","setItemLocationCountry","include","setInclude","exclude","setExclude","me","toast","e","target","key","filter","order","type","search","sort","c","settings","b","shopURL","position","title","status","duration","isClosable"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Link from 'next/link';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport {\n  Box,\n  Button,\n  InputGroup,\n  InputLeftElement,\n  Input,\n  Icon,\n  Heading,\n  Text,\n  useToast,\n} from '@chakra-ui/core';\nimport { CURRENT_USER_QUERY } from '../user/User';\nimport Pagination from '../common/Pagination';\nimport { CardStyle } from '../common/DefaultStyles';\nimport MarketplaceSearch from './MarketplaceSearch';\nimport ZincSearch from './ZincSearch';\nimport ShopifySearch from './ShopifySearch';\nimport { CHANNELS_QUERY, channelsQueryVars } from '../layout/Page';\n\nexport const getItemGroup = gql`\n  query getItemGroup($itemID: String) {\n    getItemGroup(itemID: $itemID) {\n      item\n    }\n  }\n`;\n\nconst sortOptions = [\n  {\n    label: 'Lowest Price',\n    value: 'price',\n  },\n  {\n    label: 'Highest Price',\n    value: '-price',\n  },\n  {\n    label: 'Best Match',\n    value: 'match',\n  },\n];\n\nexport const option = (name, options, update, selected) => (\n  <Box marginBottom={2} marginRight={5}>\n    <Heading fontSize=\"sm\" color=\"text\" fontWeight={500} marginBottom={0}>\n      {name}\n    </Heading>\n    <Box display=\"flex\">\n      {options.length > 0 ? (\n        options.map((a, index) => (\n          <Box\n            id={a}\n            key={index}\n            p={1}\n            mr={2}\n            mt={2}\n            borderRadius={3}\n            bg={a === selected ? '#e2e9f2' : 'transparent'}\n            onClick={() => update(a)}\n            cursor=\"pointer\"\n          >\n            <Heading\n              fontSize=\"xs\"\n              fontWeight={500}\n              px={1}\n              color={a === selected ? '#1070ca' : '#425a70'}\n              letterSpacing=\"wide\"\n              textTransform=\"uppercase\"\n            >\n              {a}\n            </Heading>\n          </Box>\n        ))\n      ) : (\n        <Text mt={2} fontSize=\"sm\" color=\"text\">\n          No Channels Added\n        </Text>\n      )}\n    </Box>\n  </Box>\n);\n\nconst Find = ({\n  headerSize,\n  atcDisabled,\n  addMPItem,\n  addCustomItem,\n  addZincItem,\n}) => {\n  const allChannels = useQuery(CHANNELS_QUERY, {\n    variables: channelsQueryVars,\n  });\n\n  const { data, error: channelsError, loading: channelsLoading } = allChannels;\n\n  const [selectedChannel, setSelectedChannel] = useState(\n    data.channels.length ? data.channels[0].name : ''\n  );\n  const [value, setValue] = useState('price');\n  const [searchBar, setSearchBar] = useState('');\n  const [searchEntry, setSearchEntry] = useState('');\n  const [limit, setLimit] = useState(10);\n  const [pageNum, setPageNum] = useState(0);\n  const [min, setMin] = useState('');\n  const [max, setMax] = useState('');\n  const [price, setPrice] = useState(null);\n  const [priceCurrency, setPriceCurrency] = useState('USD');\n  const [itemLocationCountry, setItemLocationCountry] = useState('US');\n  const [include, setInclude] = useState([]);\n  const [exclude, setExclude] = useState([]);\n\n  const {\n    data: { me },\n  } = useQuery(CURRENT_USER_QUERY);\n\n  const toast = useToast();\n\n  return (\n    <>\n      <Box display=\"flex\" py={4}>\n        <Box flex={1} alignItems=\"center\" display=\"flex\">\n          <Heading fontSize=\"2xl\" color=\"text\" fontWeight={500}>\n            Marketplace\n          </Heading>\n        </Box>\n      </Box>\n      <Box {...CardStyle} background=\"white\">\n        {/* {(() => {\n          if (!me) return null;\n          if (me.buyer && me.buyer.status) {\n            return ( */}\n        <>\n          <Box display=\"flex\" paddingX=\"1em\" paddingY=\"1em\" flexWrap=\"wrap\">\n            <Pagination\n              leftDisabled={pageNum === 0}\n              onLeft={() => setPageNum(pageNum - 1)}\n              onRight={() => setPageNum(pageNum + 1)}\n            />\n            <Box flex={1}>\n              <InputGroup width=\"100%\" borderColor=\"gray.300\">\n                <InputLeftElement\n                  children={<Icon name=\"search\" color=\"gray.300\" />}\n                />\n                <Input\n                  value={searchBar}\n                  onChange={e => {\n                    setSearchBar(e.target.value);\n                    setPageNum(0);\n                  }}\n                  onKeyPress={e => {\n                    if (e.key === 'Enter') {\n                      setSearchEntry(searchBar);\n                    }\n                  }}\n                  placeholder=\"Search\"\n                />\n              </InputGroup>\n            </Box>\n          </Box>\n          {(() => {\n            if (channelsError || !data || !data.channels) return null;\n            return (\n              <>\n                <Box\n                  display=\"flex\"\n                  flexWrap=\"wrap\"\n                  background=\"#f5f5f5\"\n                  paddingY=\".7em\"\n                  paddingX=\"1em\"\n                >\n                  {option(\n                    'Channel',\n                    data.channels.map(a => a.name),\n                    a => setSelectedChannel(a),\n                    selectedChannel\n                  )}\n                  {option(\n                    'Location',\n                    ['US', 'CN', 'All'],\n                    a => setItemLocationCountry(a),\n                    itemLocationCountry\n                  )}\n                  {option(\n                    'Items per page',\n                    [10, 50, 100],\n                    a => setLimit(a),\n                    limit\n                  )}\n                </Box>\n                {searchEntry &&\n                  data.channels.filter(\n                    order => order.name === selectedChannel\n                  )[0].type === 'MARKETPLACE' && (\n                    <MarketplaceSearch\n                      {...{\n                        search: searchEntry,\n                        limit,\n                        sort: value,\n                        pageNum,\n                        exclude,\n                        include,\n                        priceCurrency,\n                        price,\n                        itemLocationCountry,\n                        atcDisabled,\n                        addMPItem,\n                      }}\n                    />\n                  )}\n                {data.channels.length > 0 &&\n                  data.channels.filter(\n                    order => order.name === selectedChannel\n                  )[0].type === 'ZINC' && (\n                    <ZincSearch\n                      addZincItem={addZincItem}\n                      atcDisabled={atcDisabled}\n                      searchEntry={searchEntry}\n                      token={\n                        data.channels.filter(c => c.type === 'ZINC')[0].settings\n                          .key\n                      }\n                    />\n                  )}\n                {data.channels.length > 0 &&\n                  data.channels.filter(\n                    order => order.name === selectedChannel\n                  )[0].type === 'SHOPIFY' && (\n                    <ShopifySearch\n                      addCustomItem={(a, b) =>\n                        addCustomItem(\n                          a,\n                          b,\n                          data.channels.filter(\n                            order => order.name === selectedChannel\n                          )[0].settings.shopURL,\n                          data.channels.filter(\n                            order => order.name === selectedChannel\n                          )[0].settings.key\n                        )\n                      }\n                      checkout={() =>\n                        toast({\n                          position: 'top-right',\n                          title: `Checkout`,\n                          status: 'success',\n                          duration: 2000,\n                          isClosable: true,\n                        })\n                      }\n                      client=\"Marketplace\"\n                      atcDisabled={atcDisabled}\n                      searchEntry={searchEntry}\n                      apiKey={\n                        data.channels.filter(\n                          order => order.name === selectedChannel\n                        )[0].settings.key\n                      }\n                      url={\n                        data.channels.filter(\n                          order => order.name === selectedChannel\n                        )[0].settings.shopURL\n                      }\n                    />\n                  )}\n              </>\n            );\n          })()}\n        </>\n        {/* );\n          }\n          return (\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              width=\"100%\"\n              height=\"200px\"\n            >\n              <Link href=\"/settings\">\n                <a>\n                  <Button background=\"#DDEBF7\" borderRadius={3}>\n                    <Heading fontSize=\"lg\" fontWeight={700} color=\"#1070CA\">\n                      APPLY FOR BETA ACCESS\n                    </Heading>\n                  </Button>\n                </a>\n              </Link>\n            </Box>\n          );\n        })()} */}\n      </Box>\n    </>\n  );\n};\n\nexport default Find;\n"]},"metadata":{},"sourceType":"module"}