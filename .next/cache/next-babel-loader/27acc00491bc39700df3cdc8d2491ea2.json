{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Box, Button, Heading, Text, Icon, PseudoBox, NumberInput, NumberInputField, NumberInputStepper, NumberIncrementStepper, NumberDecrementStepper } from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\nimport VariantSelector from './VariantSelector';\n\nclass MktProduct extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleOptionChange\", event => {\n      const {\n        product\n      } = this.props;\n      const {\n        target\n      } = event;\n      const {\n        selectedOptions\n      } = this.state;\n      selectedOptions[target.name] = target.value;\n      const selectedVariant = product.variants.edges.find(variant => variant.node.selectedOptions.every(selectedOption => selectedOptions[selectedOption.name] === selectedOption.value)).node;\n      this.setState({\n        selectedVariant,\n        selectedVariantImage: selectedVariant.image.src\n      });\n    });\n\n    _defineProperty(this, \"handleQuantityChange\", event => {\n      this.setState({\n        selectedVariantQuantity: event\n      });\n    });\n\n    _defineProperty(this, \"handleQuantityDown\", () => {\n      this.setState(prevState => ({\n        selectedVariantQuantity: prevState.selectedVariantQuantity - 1 || 1\n      }));\n    });\n\n    _defineProperty(this, \"handleQuantityUp\", () => {\n      this.setState(prevState => ({\n        selectedVariantQuantity: prevState.selectedVariantQuantity + 1\n      }));\n    });\n\n    _defineProperty(this, \"findImage\", (images, variantId) => {\n      const primary = images[0];\n      const image = images.filter(function (a) {\n        return a.variant_ids.includes(variantId);\n      })[0];\n      return (image || primary).src;\n    });\n\n    this.state = {\n      selectedOptions: {},\n      selectedVariantQuantity: 1\n    };\n  }\n\n  componentWillMount() {\n    const {\n      product\n    } = this.props;\n    product.options.forEach(selector => {\n      this.setState(prevState => ({\n        selectedOptions: _objectSpread({}, prevState.selectedOptions, {\n          [selector.name]: selector.values[0]\n        })\n      }));\n    });\n  }\n\n  render() {\n    const {\n      product,\n      addVariantToCart,\n      atcDisabled\n    } = this.props;\n    const {\n      selectedVariantImage,\n      selectedVariantQuantity,\n      selectedVariant\n    } = this.state;\n    const variantImage = selectedVariantImage || product.images.edges[0].node.src;\n    const variant = selectedVariant || product.variants.edges[0].node;\n    const variantQuantity = selectedVariantQuantity || 1;\n    const variantSelectors = product.options.map(option => __jsx(VariantSelector, {\n      handleOptionChange: this.handleOptionChange,\n      key: option.id.toString(),\n      option: option\n    }));\n    return __jsx(React.Fragment, null, __jsx(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      borderTop: \"0.1rem solid #dfe3e8\"\n    }, __jsx(Box, {\n      padding: 4\n    }, product.images.edges.length && __jsx(Box, {\n      background: \"white\",\n      border: \"1px solid #e8e9ea\",\n      borderRadius: 3,\n      height: \"90px\",\n      width: \"90px\"\n    }, __jsx(Box, {\n      as: \"img\",\n      src: variantImage,\n      alt: `${product.title} product shot`\n    }))), __jsx(Box, {\n      padding: 4,\n      paddingLeft: 0,\n      marginTop: 1,\n      marginBottom: \"auto\"\n    }, __jsx(Heading, {\n      fontSize: \"md\",\n      color: \"text\",\n      fontWeight: 500\n    }, product.title), __jsx(Heading, {\n      size: 400,\n      marginRight: 10,\n      color: \"green.600\"\n    }, \"$\", variant.price), __jsx(Box, {\n      display: \"flex\",\n      marginTop: 1,\n      marginBottom: 7\n    }, variantSelectors), !atcDisabled && __jsx(Box, {\n      display: \"flex\"\n    }, __jsx(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      paddingRight: 5\n    }, __jsx(PseudoBox, null, __jsx(Text, {\n      fontSize: \".65rem\",\n      fontWeight: \"600\",\n      color: \"gray.500\"\n    }, \"QUANTITY\"), __jsx(NumberInput, {\n      size: \"sm\",\n      value: selectedVariantQuantity,\n      onChange: this.handleQuantityChange,\n      min: 1,\n      width: \"80px\"\n    }, __jsx(NumberInputField, {\n      focusBorderColor: \"blue.500\",\n      textAlign: \"center\",\n      _hover: {\n        borderColor: 'blue.500'\n      },\n      height: \"25px\"\n    }), __jsx(NumberInputStepper, {\n      width: \"25px\"\n    }, __jsx(NumberIncrementStepper, {\n      bg: \"#f6f7f9\",\n      color: \"blue.500\",\n      _active: {\n        bg: 'blue.500'\n      },\n      _hover: {\n        bg: 'blue.500',\n        color: 'white'\n      },\n      children: __jsx(Icon, {\n        name: \"add\",\n        color: \"currentColor\"\n      }),\n      marginTop: \"0px !important\",\n      borderTopWidth: \"0px !important\"\n    })), __jsx(NumberInputStepper, {\n      left: \"0\",\n      width: \"25px\"\n    }, __jsx(NumberDecrementStepper, {\n      bg: \"#f6f7f9\",\n      color: \"blue.500\",\n      _active: {\n        bg: 'blue.500'\n      },\n      _hover: {\n        bg: 'blue.500',\n        color: 'white'\n      },\n      children: __jsx(Icon, {\n        name: \"minus\",\n        color: \"currentColor\"\n      }),\n      borderLeft: \"0px\",\n      borderRight: \"1px solid #E2E8F0\",\n      marginTop: \"0px !important\",\n      borderTopWidth: \"0px !important\"\n    })))), __jsx(Button, {\n      background: \"#DDEBF7\",\n      borderRadius: 3,\n      marginRight: 1,\n      px: 2,\n      mx: 3,\n      mt: \"auto\",\n      height: 6,\n      onClick: () => addVariantToCart(variant.id, selectedVariantQuantity),\n      disabled: atcDisabled\n    }, __jsx(Heading, {\n      letterSpacing: \"wide\",\n      fontSize: \"sm\",\n      fontWeight: 700,\n      color: \"#1070CA\"\n    }, \"ADD TO CART\")))))));\n  }\n\n}\n\n_defineProperty(MktProduct, \"propTypes\", {\n  product: PropTypes.object,\n  addVariantToCart: PropTypes.func,\n  atcDisabled: PropTypes.bool\n});\n\nexport default MktProduct;","map":{"version":3,"sources":["/Users/junaid/openship/components/find/MarketplaceSearch/MktProduct.js"],"names":["React","Component","Box","Button","Heading","Text","Icon","PseudoBox","NumberInput","NumberInputField","NumberInputStepper","NumberIncrementStepper","NumberDecrementStepper","PropTypes","VariantSelector","MktProduct","constructor","props","event","product","target","selectedOptions","state","name","value","selectedVariant","variants","edges","find","variant","node","every","selectedOption","setState","selectedVariantImage","image","src","selectedVariantQuantity","prevState","images","variantId","primary","filter","a","variant_ids","includes","componentWillMount","options","forEach","selector","values","render","addVariantToCart","atcDisabled","variantImage","variantQuantity","variantSelectors","map","option","handleOptionChange","id","toString","length","title","price","handleQuantityChange","borderColor","bg","color","object","func","bool"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Box,\n  Button,\n  Heading,\n  Text,\n  Icon,\n  PseudoBox,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n} from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\nimport VariantSelector from './VariantSelector';\n\nclass MktProduct extends Component {\n  static propTypes = {\n    product: PropTypes.object,\n    addVariantToCart: PropTypes.func,\n    atcDisabled: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedOptions: {},\n      selectedVariantQuantity: 1,\n    };\n  }\n\n  componentWillMount() {\n    const { product } = this.props;\n    product.options.forEach(selector => {\n      this.setState(prevState => ({\n        selectedOptions: {\n          ...prevState.selectedOptions,\n          [selector.name]: selector.values[0],\n        },\n      }));\n    });\n  }\n\n  handleOptionChange = event => {\n    const { product } = this.props;\n    const { target } = event;\n    const { selectedOptions } = this.state;\n    selectedOptions[target.name] = target.value;\n\n    const selectedVariant = product.variants.edges.find(variant =>\n      variant.node.selectedOptions.every(\n        selectedOption =>\n          selectedOptions[selectedOption.name] === selectedOption.value\n      )\n    ).node;\n\n    this.setState({\n      selectedVariant,\n      selectedVariantImage: selectedVariant.image.src,\n    });\n  };\n\n  handleQuantityChange = event => {\n    this.setState({\n      selectedVariantQuantity: event,\n    });\n  };\n\n  handleQuantityDown = () => {\n    this.setState(prevState => ({\n      selectedVariantQuantity: prevState.selectedVariantQuantity - 1 || 1,\n    }));\n  };\n\n  handleQuantityUp = () => {\n    this.setState(prevState => ({\n      selectedVariantQuantity: prevState.selectedVariantQuantity + 1,\n    }));\n  };\n\n  findImage = (images, variantId) => {\n    const primary = images[0];\n\n    const image = images.filter(function(a) {\n      return a.variant_ids.includes(variantId);\n    })[0];\n\n    return (image || primary).src;\n  };\n\n  render() {\n    const { product, addVariantToCart, atcDisabled } = this.props;\n    const {\n      selectedVariantImage,\n      selectedVariantQuantity,\n      selectedVariant,\n    } = this.state;\n    const variantImage =\n      selectedVariantImage || product.images.edges[0].node.src;\n    const variant = selectedVariant || product.variants.edges[0].node;\n    const variantQuantity = selectedVariantQuantity || 1;\n    const variantSelectors = product.options.map(option => (\n      <VariantSelector\n        handleOptionChange={this.handleOptionChange}\n        key={option.id.toString()}\n        option={option}\n      />\n    ));\n    return (\n      <>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          borderTop=\"0.1rem solid #dfe3e8\"\n        >\n          <Box padding={4}>\n            {product.images.edges.length && (\n              <Box\n                background=\"white\"\n                border=\"1px solid #e8e9ea\"\n                borderRadius={3}\n                height=\"90px\"\n                width=\"90px\"\n              >\n                <Box\n                  as=\"img\"\n                  src={variantImage}\n                  alt={`${product.title} product shot`}\n                />\n              </Box>\n            )}\n          </Box>\n          <Box padding={4} paddingLeft={0} marginTop={1} marginBottom=\"auto\">\n            <Heading fontSize=\"md\" color=\"text\" fontWeight={500}>\n              {product.title}\n            </Heading>\n            <Heading size={400} marginRight={10} color=\"green.600\">\n              ${variant.price}\n            </Heading>\n            <Box display=\"flex\" marginTop={1} marginBottom={7}>\n              {variantSelectors}\n            </Box>\n            {!atcDisabled && (\n              <Box display=\"flex\">\n                <Box\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  justifyContent=\"center\"\n                  paddingRight={5}\n                >\n                  <PseudoBox>\n                    <Text fontSize=\".65rem\" fontWeight=\"600\" color=\"gray.500\">\n                      QUANTITY\n                    </Text>\n                    <NumberInput\n                      size=\"sm\"\n                      value={selectedVariantQuantity}\n                      onChange={this.handleQuantityChange}\n                      min={1}\n                      width=\"80px\"\n                    >\n                      <NumberInputField\n                        focusBorderColor=\"blue.500\"\n                        textAlign=\"center\"\n                        _hover={{ borderColor: 'blue.500' }}\n                        height=\"25px\"\n                      />\n                      <NumberInputStepper width=\"25px\">\n                        <NumberIncrementStepper\n                          bg=\"#f6f7f9\"\n                          color=\"blue.500\"\n                          _active={{ bg: 'blue.500' }}\n                          _hover={{ bg: 'blue.500', color: 'white' }}\n                          children={<Icon name=\"add\" color=\"currentColor\" />}\n                          marginTop=\"0px !important\"\n                          borderTopWidth=\"0px !important\"\n                        />\n                      </NumberInputStepper>\n                      <NumberInputStepper left=\"0\" width=\"25px\">\n                        <NumberDecrementStepper\n                          bg=\"#f6f7f9\"\n                          color=\"blue.500\"\n                          _active={{ bg: 'blue.500' }}\n                          _hover={{ bg: 'blue.500', color: 'white' }}\n                          children={<Icon name=\"minus\" color=\"currentColor\" />}\n                          borderLeft=\"0px\"\n                          borderRight=\"1px solid #E2E8F0\"\n                          marginTop=\"0px !important\"\n                          borderTopWidth=\"0px !important\"\n                        />\n                      </NumberInputStepper>\n                    </NumberInput>\n                  </PseudoBox>\n                  <Button\n                    background=\"#DDEBF7\"\n                    borderRadius={3}\n                    marginRight={1}\n                    px={2}\n                    mx={3}\n                    mt=\"auto\"\n                    height={6}\n                    onClick={() =>\n                      addVariantToCart(variant.id, selectedVariantQuantity)\n                    }\n                    disabled={atcDisabled}\n                  >\n                    <Heading\n                      letterSpacing=\"wide\"\n                      fontSize=\"sm\"\n                      fontWeight={700}\n                      color=\"#1070CA\"\n                    >\n                      ADD TO CART\n                    </Heading>\n                  </Button>\n                </Box>\n              </Box>\n            )}\n          </Box>\n        </Box>\n      </>\n    );\n  }\n}\n\nexport default MktProduct;\n"]},"metadata":{},"sourceType":"module"}