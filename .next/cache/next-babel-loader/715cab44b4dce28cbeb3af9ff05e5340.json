{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { front, prodFront } from '../../config';\n\nfunction extractURL(url) {\n  var first = url.split('https://')[1];\n  var second = first.split('.myshopify')[0];\n  return second;\n}\n\nexport function placeCustomOrder(cart, id, updateOrderFunc, channelsData) {\n  var url, settings, cartObj, cartJson, response, res, update;\n  return _regeneratorRuntime.async(function placeCustomOrder$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = extractURL(JSON.parse(cart).webUrl);\n          settings = channelsData.channels.filter(function (channel) {\n            return channel.type === 'SHOPIFY' && channel.settings && channel.settings.shopURL === url;\n          })[0].settings; //   if (settings.url && settings.secret) {\n\n          _context.prev = 2;\n          cartObj = JSON.parse(cart);\n          cartObj.pId = id;\n          cartJson = JSON.stringify(cartObj);\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(false ? front : prodFront, \"/api/shopify/purchase?url=\").concat(settings.shopURL, \"&admin=\").concat(settings.secret), {\n            credentials: 'same-origin',\n            mode: 'cors',\n            method: 'POST',\n            headers: {\n              Accept: 'application/json',\n              'Content-type': 'application/json',\n              'X-Requested-With': 'Fetch'\n            },\n            body: cartJson\n          }));\n\n        case 8:\n          response = _context.sent;\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 11:\n          res = _context.sent;\n          console.log(res); // console.log(\"response received\");\n\n          _context.next = 15;\n          return _regeneratorRuntime.awrap(updateOrderFunc({\n            variables: {\n              id: id,\n              customCheckout: res,\n              processed: 'TRUE'\n            }\n          }).then(function (data) {// console.log(data, \"after update\");\n            // forceUpdate();\n          }));\n\n        case 15:\n          update = _context.sent;\n          _context.next = 21;\n          break;\n\n        case 18:\n          _context.prev = 18;\n          _context.t0 = _context[\"catch\"](2);\n          console.log('error', _context.t0);\n\n        case 21:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[2, 18]], Promise);\n}","map":null,"metadata":{},"sourceType":"module"}