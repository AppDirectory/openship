{"ast":null,"code":"import React, { useState } from 'react';\nimport { Heading, Pane, Avatar, Text, Icon, Paragraph, Badge } from 'evergreen-ui';\nimport Button from './Button';\nimport mOrderLineItem from './mOrderLineItem';\nimport Reshipment from './Reshipment';\nconst secondaryLayout = {\n  flex: '1 1 10rem',\n  marginLeft: '1.5rem',\n  marginTop: '.3rem'\n};\nconst Layout = {\n  flex: '2 2 20rem',\n  marginLeft: '1.5rem',\n  marginTop: '.3rem'\n};\n\nconst OrderDetails = props => {\n  console.log(props);\n  const [isShown, setIsShown] = useState(false);\n  return React.createElement(React.Fragment, null, React.createElement(Reshipment, {\n    isShown: isShown,\n    onCloseComplete: () => setIsShown(false),\n    order: props,\n    shop: props.store\n  }), React.createElement(Pane, {\n    display: \"flex\",\n    paddingY: 16,\n    backgroundColor: props.backgroundColor,\n    boxShadow: props.backgroundColor && '0 0 1px rgba(67, 90, 111, 0.3)',\n    paddingX: props.backgroundColor && 16\n  }, React.createElement(Pane, {\n    flex: 1,\n    alignItems: \"center\",\n    display: \"flex\"\n  }, React.createElement(Pane, {\n    display: \"block\"\n  }, React.createElement(Heading, {\n    size: 700\n  }, props.name), React.createElement(Heading, {\n    size: 100,\n    lineHeight: \"20px\",\n    fontWeight: 500\n  }, props.store, \" \\xB7\", ' ', React.createElement(Text, {\n    color: \"#234361\",\n    size: 300,\n    lineHeight: \"20px\"\n  }, props.processedAt && Intl.DateTimeFormat('en-US').format(Date.parse(props.processedAt)))), React.createElement(Badge, {\n    marginTop: 4,\n    color: props.fulfillments.length > 0 ? 'green' : 'red',\n    isSolid: true\n  }, props.fulfillments.length > 0 ? 'Processed' : 'Not Processed'))), React.createElement(Pane, {\n    height: 28\n  }, React.createElement(Button, {\n    background: \"#DDEBF7\",\n    borderRadius: 3,\n    marginRight: 5,\n    onClick: () => setIsShown(true)\n  }, React.createElement(Pane, {\n    padding: 3,\n    display: \"flex\",\n    alignItems: \"center\"\n  }, React.createElement(Heading, {\n    size: 100,\n    fontSize: 13,\n    fontWeight: 700,\n    color: \"#1070CA\",\n    marginRight: 4\n  }, \"RESHIP\"), React.createElement(Icon, {\n    marginLeft: 3,\n    color: \"#1070CA\",\n    icon: \"social-media\",\n    size: 13\n  }))))), React.createElement(Pane, {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    marginLeft: \"-1.5rem\",\n    marginTop: \"-.3rem\",\n    padding: props.backgroundColor && 16\n  }, React.createElement(Pane, Layout, props.lineItems.edges.map(a => {\n    const ID = a.node.id.toString().split('/').pop();\n    return React.createElement(Pane, {\n      elevation: 1,\n      background: \"white\",\n      padding: 15,\n      marginBottom: 15,\n      key: ID\n    }, React.createElement(Pane, {\n      display: \"flex\",\n      alignItems: \"center\"\n    }, React.createElement(Pane, null, React.createElement(Avatar, {\n      src: a.node.image && a.node.image.originalSrc,\n      borderStyle: \"solid\",\n      borderWidth: \"1px\",\n      borderRadius: 3,\n      borderColor: \"#e8e9ea\",\n      size: 75\n    })), React.createElement(Pane, {\n      marginLeft: 20,\n      display: \"block\"\n    }, React.createElement(Heading, {\n      size: 500\n    }, a.node.name), React.createElement(Text, {\n      color: \"muted\",\n      fontSize: 14\n    }, ID), ' ', \"-\", ' ', React.createElement(Text, {\n      color: \"#234361\",\n      size: 300\n    }, \"QUANTITY: \", a.node.quantity))));\n  })), React.createElement(Pane, secondaryLayout, React.createElement(Pane, {\n    elevation: 1,\n    background: \"white\",\n    padding: 18,\n    marginBottom: 15\n  }, React.createElement(Heading, {\n    size: 100,\n    marginBottom: 6\n  }, \"Customer\"), React.createElement(Pane, {\n    display: \"block\"\n  }, React.createElement(Paragraph, {\n    size: 300,\n    fontSize: 13,\n    color: \"#425A70\"\n  }, React.createElement(Text, null, props.shippingAddress.name.split(' ')[0], ' ', props.shippingAddress.name.split(' ').pop()), React.createElement(\"br\", null), props.shippingAddress.address1, ' ', props.shippingAddress.address2, React.createElement(\"br\", null), props.shippingAddress.city, ', ', props.shippingAddress.province, \" \", props.shippingAddress.zip))), props.fulfillments.length > 0 && React.createElement(Pane, {\n    elevation: 1,\n    background: \"white\",\n    padding: 18,\n    marginBottom: 15\n  }, React.createElement(Heading, {\n    size: 100,\n    marginBottom: 6\n  }, \"Shipments\"), React.createElement(Pane, {\n    display: \"block\"\n  }, props.fulfillments.map(a => a.trackingInfo.map((b, index) => React.createElement(Pane, {\n    key: index,\n    display: \"flex\",\n    alignItems: \"center\"\n  }, React.createElement(Icon, {\n    icon: \"box\",\n    color: \"#47B881\",\n    marginRight: 10\n  }), React.createElement(\"a\", {\n    href: b.url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, React.createElement(Text, {\n    size: 500\n  }, b.number))))))))));\n};\n\nexport default OrderDetails;","map":null,"metadata":{},"sourceType":"module"}