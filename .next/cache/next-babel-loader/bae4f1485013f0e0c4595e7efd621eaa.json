{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport React from \"react\";\nimport Link from 'next/link';\nimport { withRouter } from 'next/router';\nimport { Menu, Icon, Heading, Pane, TextInputField, Popover, IconButton } from 'evergreen-ui';\nimport PropTypes from 'prop-types';\nimport { Query } from 'react-apollo';\nimport Button from '../common/Button';\nimport { shopsQuery, shopsQueryVars } from '../shops/ShopList';\nimport Signout from '../user/Signout';\nimport { front, prodFront } from '../../config';\nvar Divider = React.createElement(Pane, {\n  flexShrink: 0,\n  height: 3,\n  backgroundColor: \"rgb(44, 71, 118)\",\n  borderRadius: 1,\n  marginY: 5,\n  marginX: 12\n});\nexport var NavGroupTitle = function NavGroupTitle(_ref) {\n  var title = _ref.title,\n      icon = _ref.icon;\n  return React.createElement(Pane, {\n    display: \"flex\",\n    alignItems: \"center\"\n  }, React.createElement(Heading, {\n    size: 100,\n    marginTop: 8,\n    marginBottom: 8,\n    marginLeft: 16,\n    marginRight: 16,\n    fontWeight: 700,\n    fontSize: \"13px\",\n    color: \"#d7dae0\",\n    flex: 1\n  }, title), icon);\n};\n\nfunction postRequest(url, data) {\n  return fetch(url, {\n    credentials: 'same-origin',\n    // 'include', default: 'omit'\n    method: 'POST',\n    // 'GET', 'PUT', 'DELETE', etc.\n    body: _JSON$stringify({\n      shops: data\n    }),\n    // Use correct payload (matching 'Content-Type')\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n}\n\nvar Header = function Header(_ref2) {\n  var router = _ref2.router,\n      logo = _ref2.logo,\n      onClick = _ref2.onClick;\n  var asPath = router.asPath;\n\n  var NavItem = function NavItem(_ref3) {\n    var icon = _ref3.icon,\n        iconColor = _ref3.iconColor,\n        title = _ref3.title,\n        href = _ref3.href;\n    return React.createElement(Pane, {\n      borderLeft: \"3px solid \".concat(asPath && asPath.startsWith(href) ? 'rgb(66, 95, 146)' : 'transparent'),\n      background: asPath && asPath.startsWith(href) ? 'rgb(35, 61, 106)' : null,\n      onSelect: onClick\n    }, React.createElement(Link, {\n      href: href\n    }, React.createElement(Menu.Item, {\n      icon: React.createElement(Icon, {\n        icon: icon,\n        color: iconColor || '#ffffff',\n        marginRight: \"-8px\",\n        marginLeft: \"13px\",\n        size: 15\n      }),\n      onSelect: onClick,\n      width: \"100%\"\n    }, React.createElement(Heading, {\n      color: \"#fff\",\n      size: 500,\n      fontSize: 15,\n      overflow: \"visible\",\n      textTransform: \"capitalize\"\n    }, title))));\n  };\n\n  return React.createElement(Pane, {\n    background: \"rgb(23, 43, 77)\",\n    minHeight: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  }, React.createElement(Pane, null, React.createElement(Menu, {\n    width: \"100%\"\n  }, logo, React.createElement(Menu.Group, null, React.createElement(NavGroupTitle, {\n    title: \"Orders\"\n  }), React.createElement(NavItem, {\n    icon: \"delta\",\n    title: \"Pending\",\n    href: \"/pending\"\n  }), React.createElement(NavItem, {\n    icon: \"time\",\n    title: \"Processed\",\n    href: \"/processed\"\n  }), React.createElement(NavItem, {\n    icon: \"tick-circle\",\n    title: \"Completed\",\n    href: \"/completed\"\n  })), Divider, React.createElement(Menu.Group, null, React.createElement(NavGroupTitle, {\n    title: \"Products\"\n  }), React.createElement(NavItem, {\n    icon: \"database\",\n    title: \"All Products\",\n    href: \"/products\"\n  }), React.createElement(NavItem, {\n    icon: \"globe\",\n    title: \"Marketplace\",\n    href: \"/find\"\n  })), Divider, React.createElement(Menu.Group, null, React.createElement(NavGroupTitle, {\n    title: React.createElement(Link, {\n      href: \"/shops\"\n    }, React.createElement(Pane, {\n      color: \"#d7dae0\",\n      cursor: \"pointer\"\n    }, \"Shops\")),\n    icon: React.createElement(Popover, {\n      content: React.createElement(Pane, {\n        width: 300,\n        display: \"flex\",\n        alignItems: \"left\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        padding: 15\n      }, React.createElement(\"form\", {\n        method: \"GET\",\n        action: \"/shopify/auth\",\n        style: {\n          width: '100%'\n        }\n      }, React.createElement(TextInputField, {\n        label: \"Shop Name\",\n        marginBottom: \"10px\"\n      }), React.createElement(TextInputField, {\n        label: \"Shop URL\",\n        marginBottom: \"10px\",\n        hint: \"Must end in .myshopify.com\",\n        id: \"shop\",\n        name: \"shop\"\n      }), React.createElement(Button, {\n        width: \"100%\",\n        justifyContent: \"center\",\n        appearance: \"primary\",\n        intent: \"success\",\n        fontSize: \"12px\",\n        paddingY: 3\n      }, \"Go to Shopify\")))\n    }, React.createElement(IconButton, {\n      height: 20,\n      icon: \"plus\",\n      marginRight: 16,\n      appearance: \"primary\",\n      intent: \"success\",\n      borderRadius: 20,\n      outline: \"none\"\n    }))\n  }), React.createElement(Query, {\n    query: shopsQuery,\n    variables: shopsQueryVars\n  }, function (_ref4) {\n    var data = _ref4.data,\n        error = _ref4.error,\n        loading = _ref4.loading;\n    if (error || !data.shops) return null;\n    var shops = data.shops;\n    postRequest(\"\".concat(process.env.NODE_ENV === 'development' ? front : prodFront, \"/_shopify\"), shops);\n    return shops.map(function (shop, index) {\n      return React.createElement(Pane, {\n        key: index\n      }, React.createElement(NavItem, {\n        icon: React.createElement(Pane, {\n          marginRight: \"-8px\",\n          marginLeft: \"13px\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          display: \"flex\"\n        }, React.createElement(\"svg\", {\n          version: \"1.1\",\n          xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n          x: \"0px\",\n          y: \"0px\",\n          width: \"16px\",\n          height: \"16px\",\n          viewBox: \"0 0 48 48\",\n          enableBackground: \"new 0 0 16 16\",\n          xmlSpace: \"preserve\",\n          fill: \"#47B881\"\n        }, React.createElement(\"path\", {\n          d: \"M24 0C10.746 0 0 10.746 0 24s10.746 24 24 24 24-10.746 24-24S37.254 0 24 0zm0 36c-6.627 0-12-5.373-12-12s5.373-12 12-12 12 5.373 12 12-5.373 12-12 12z\"\n        }))),\n        iconColor: \"success\",\n        title: shop.name,\n        href: \"/shop?shop=\".concat(shop.domain.split('.')[0])\n      }));\n    });\n  })), Divider, React.createElement(Menu.Group, null, React.createElement(NavItem, {\n    icon: \"cog\",\n    title: \"Settings\",\n    href: \"/settings\"\n  })))), React.createElement(Pane, {\n    marginTop: \"auto\"\n  }, React.createElement(Signout, null)));\n};\n\nexport default withRouter(Header);","map":{"version":3,"sources":["/Users/junaid/openship/components/layout/Header.js"],"names":["Link","withRouter","Menu","Icon","Heading","Pane","TextInputField","Popover","IconButton","PropTypes","Query","Button","shopsQuery","shopsQueryVars","Signout","front","prodFront","Divider","NavGroupTitle","title","icon","postRequest","url","data","fetch","credentials","method","body","shops","headers","Header","router","logo","onClick","asPath","NavItem","iconColor","href","startsWith","width","error","loading","process","env","NODE_ENV","map","shop","index","name","domain","split"],"mappings":"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","sourcesContent":["import Link from 'next/link';\nimport { withRouter } from 'next/router';\nimport {\n  Menu,\n  Icon,\n  Heading,\n  Pane,\n  TextInputField,\n  Popover,\n  IconButton,\n} from 'evergreen-ui';\nimport PropTypes from 'prop-types';\nimport { Query } from 'react-apollo';\nimport Button from '../common/Button';\nimport { shopsQuery, shopsQueryVars } from '../shops/ShopList';\nimport Signout from '../user/Signout';\nimport { front, prodFront } from '../../config';\n\nconst Divider = (\n  <Pane\n    flexShrink={0}\n    height={3}\n    backgroundColor=\"rgb(44, 71, 118)\"\n    borderRadius={1}\n    marginY={5}\n    marginX={12}\n  />\n);\n\nexport const NavGroupTitle = ({ title, icon }) => (\n  <Pane display=\"flex\" alignItems=\"center\">\n    <Heading\n      size={100}\n      marginTop={8}\n      marginBottom={8}\n      marginLeft={16}\n      marginRight={16}\n      fontWeight={700}\n      fontSize=\"13px\"\n      color=\"#d7dae0\"\n      flex={1}\n    >\n      {title}\n    </Heading>\n    {icon}\n  </Pane>\n);\n\nfunction postRequest(url, data) {\n  return fetch(url, {\n    credentials: 'same-origin', // 'include', default: 'omit'\n    method: 'POST', // 'GET', 'PUT', 'DELETE', etc.\n    body: JSON.stringify({ shops: data }), // Use correct payload (matching 'Content-Type')\n    headers: { 'Content-Type': 'application/json' },\n  });\n}\n\nconst Header = ({ router, logo, onClick }) => {\n  const { asPath } = router;\n\n  const NavItem = ({ icon, iconColor, title, href }) => (\n    <Pane\n      borderLeft={`3px solid ${\n        asPath && asPath.startsWith(href) ? 'rgb(66, 95, 146)' : 'transparent'\n      }`}\n      background={asPath && asPath.startsWith(href) ? 'rgb(35, 61, 106)' : null}\n      onSelect={onClick}\n    >\n      <Link href={href}>\n        <Menu.Item\n          icon={\n            <Icon\n              icon={icon}\n              color={iconColor || '#ffffff'}\n              marginRight=\"-8px\"\n              marginLeft=\"13px\"\n              size={15}\n            />\n          }\n          onSelect={onClick}\n          width=\"100%\"\n        >\n          <Heading\n            color=\"#fff\"\n            size={500}\n            fontSize={15}\n            overflow=\"visible\"\n            textTransform=\"capitalize\"\n          >\n            {title}\n          </Heading>\n        </Menu.Item>\n      </Link>\n    </Pane>\n  );\n\n  return (\n    <Pane\n      background=\"rgb(23, 43, 77)\"\n      minHeight=\"100vh\"\n      display=\"flex\"\n      flexDirection=\"column\"\n    >\n      <Pane>\n        <Menu width=\"100%\">\n          {logo}\n          <Menu.Group>\n            <NavGroupTitle title=\"Orders\" />\n            <NavItem icon=\"delta\" title=\"Pending\" href=\"/pending\" />\n            <NavItem icon=\"time\" title=\"Processed\" href=\"/processed\" />\n            <NavItem icon=\"tick-circle\" title=\"Completed\" href=\"/completed\" />\n          </Menu.Group>\n          {Divider}\n          <Menu.Group>\n            <NavGroupTitle title=\"Products\" />\n            <NavItem icon=\"database\" title=\"All Products\" href=\"/products\" />\n            <NavItem icon=\"globe\" title=\"Marketplace\" href=\"/find\" />\n          </Menu.Group>\n          {Divider}\n          <Menu.Group>\n            <NavGroupTitle\n              title={\n                <Link href=\"/shops\">\n                  <Pane color=\"#d7dae0\" cursor=\"pointer\">\n                    Shops\n                  </Pane>\n                </Link>\n              }\n              icon={\n                <Popover\n                  content={\n                    <Pane\n                      width={300}\n                      display=\"flex\"\n                      alignItems=\"left\"\n                      justifyContent=\"center\"\n                      flexDirection=\"column\"\n                      padding={15}\n                    >\n                      <form\n                        method=\"GET\"\n                        action=\"/shopify/auth\"\n                        style={{ width: '100%' }}\n                      >\n                        <TextInputField label=\"Shop Name\" marginBottom=\"10px\" />\n                        <TextInputField\n                          label=\"Shop URL\"\n                          marginBottom=\"10px\"\n                          hint=\"Must end in .myshopify.com\"\n                          id=\"shop\"\n                          name=\"shop\"\n                        />\n\n                        <Button\n                          width=\"100%\"\n                          justifyContent=\"center\"\n                          appearance=\"primary\"\n                          intent=\"success\"\n                          fontSize=\"12px\"\n                          paddingY={3}\n                        >\n                          Go to Shopify\n                        </Button>\n                      </form>\n                    </Pane>\n                  }\n                >\n                  <IconButton\n                    height={20}\n                    icon=\"plus\"\n                    marginRight={16}\n                    appearance=\"primary\"\n                    intent=\"success\"\n                    borderRadius={20}\n                    outline=\"none\"\n                  />\n                </Popover>\n              }\n            />\n            <Query query={shopsQuery} variables={shopsQueryVars}>\n              {({ data, error, loading }) => {\n                if (error || !data.shops) return null;\n                const { shops } = data;\n                postRequest(\n                  `${\n                    process.env.NODE_ENV === 'development' ? front : prodFront\n                  }/_shopify`,\n                  shops\n                );\n\n                return shops.map((shop, index) => (\n                  <Pane key={index}>\n                    <NavItem\n                      icon={\n                        <Pane\n                          marginRight=\"-8px\"\n                          marginLeft=\"13px\"\n                          alignItems=\"center\"\n                          justifyContent=\"center\"\n                          display=\"flex\"\n                        >\n                          <svg\n                            version=\"1.1\"\n                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                            x=\"0px\"\n                            y=\"0px\"\n                            width=\"16px\"\n                            height=\"16px\"\n                            viewBox=\"0 0 48 48\"\n                            enableBackground=\"new 0 0 16 16\"\n                            xmlSpace=\"preserve\"\n                            fill=\"#47B881\"\n                          >\n                            <path d=\"M24 0C10.746 0 0 10.746 0 24s10.746 24 24 24 24-10.746 24-24S37.254 0 24 0zm0 36c-6.627 0-12-5.373-12-12s5.373-12 12-12 12 5.373 12 12-5.373 12-12 12z\" />\n                          </svg>\n                        </Pane>\n                      }\n                      iconColor=\"success\"\n                      title={shop.name}\n                      href={`/shop?shop=${shop.domain.split('.')[0]}`}\n                    />\n                  </Pane>\n                ));\n              }}\n            </Query>\n          </Menu.Group>\n          {Divider}\n          <Menu.Group>\n            {/* <NavGroupTitle title=\"Settings\" /> */}\n            <NavItem icon=\"cog\" title=\"Settings\" href=\"/settings\" />\n          </Menu.Group>\n        </Menu>\n      </Pane>\n      <Pane marginTop=\"auto\">\n        <Signout />\n      </Pane>\n    </Pane>\n  );\n};\n\nexport default withRouter(Header);\n"]},"metadata":{},"sourceType":"module"}