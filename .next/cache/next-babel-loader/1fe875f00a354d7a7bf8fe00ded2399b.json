{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Box, Spinner, Heading, Button } from '@chakra-ui/core';\nimport { gql } from 'apollo-boost';\nimport MktProduct from './MktProduct';\nimport { CURRENT_USER_QUERY } from '../../user/User';\nconst getItemsQuery = gql`\n  query getItems(\n    $search: String\n    $limit: Int\n    $sort: String\n    $pageNum: Int\n    $exclude: Json\n    $include: Json\n    $priceCurrency: String\n    $price: String\n    $itemLocationCountry: String\n  ) {\n    getItems(\n      search: $search\n      limit: $limit\n      sort: $sort\n      pageNum: $pageNum\n      exclude: $exclude\n      include: $include\n      priceCurrency: $priceCurrency\n      price: $price\n      itemLocationCountry: $itemLocationCountry\n    ) {\n      item\n    }\n  }\n`;\n\nfunction MarketplaceSearch({\n  search,\n  limit,\n  sort,\n  pageNum,\n  exclude,\n  include,\n  priceCurrency,\n  price,\n  itemLocationCountry,\n  atcDisabled,\n  addMPItem\n}) {\n  const {\n    data: {\n      me\n    }\n  } = useQuery(CURRENT_USER_QUERY);\n  const allItems = useQuery(getItemsQuery, {\n    variables: {\n      search,\n      limit,\n      sort: sort.value,\n      pageNum,\n      exclude,\n      include,\n      priceCurrency,\n      price,\n      itemLocationCountry\n    }\n  });\n  const {\n    data,\n    error,\n    loading\n  } = allItems;\n\n  if (me && (!me.buyer || !me.buyer.status)) {\n    return __jsx(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: \"100%\",\n      height: \"200px\"\n    }, __jsx(Link, {\n      href: \"/settings\"\n    }, __jsx(\"a\", null, __jsx(Button, {\n      background: \"#DDEBF7\",\n      borderRadius: 3\n    }, __jsx(Heading, {\n      fontSize: \"lg\",\n      fontWeight: 700,\n      color: \"#1070CA\"\n    }, \"GET MARKETPLACE BETA ACCESS\")))));\n  }\n\n  if (loading) return __jsx(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"100vh\"\n  }, __jsx(Spinner, {\n    thickness: \"4px\",\n    speed: \"0.65s\",\n    emptyColor: \"gray.200\",\n    color: \"blue.500\",\n    size: \"xl\"\n  }));\n  if (error || !data.getItems.item || data.getItems.item.length < 1) return __jsx(Box, {\n    paddingX: \"1em\",\n    paddingY: \"1em\"\n  }, __jsx(Box, {\n    background: \"tint2\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    borderRadius: 3\n  }, __jsx(Heading, {\n    margin: \"1em\",\n    size: 600\n  }, \"No items found.\")));\n  return __jsx(React.Fragment, null, data.getItems.item.data.products.edges.map(product => __jsx(MktProduct, {\n    addVariantToCart: (a, b) => addMPItem(a, b),\n    checkout: () => toaster.success(`checkout`),\n    key: product.node.id.toString(),\n    product: product.node,\n    client: \"Marketplace\",\n    atcDisabled: atcDisabled\n  })));\n}\n\nexport default MarketplaceSearch;","map":{"version":3,"sources":["/Users/junaid/openship/components/find/MarketplaceSearch/index.js"],"names":["React","Link","useQuery","Box","Spinner","Heading","Button","gql","MktProduct","CURRENT_USER_QUERY","getItemsQuery","MarketplaceSearch","search","limit","sort","pageNum","exclude","include","priceCurrency","price","itemLocationCountry","atcDisabled","addMPItem","data","me","allItems","variables","value","error","loading","buyer","status","getItems","item","length","products","edges","map","product","a","b","toaster","success","node","id","toString"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Box, Spinner, Heading, Button } from '@chakra-ui/core';\nimport { gql } from 'apollo-boost';\nimport MktProduct from './MktProduct';\nimport { CURRENT_USER_QUERY } from '../../user/User';\n\nconst getItemsQuery = gql`\n  query getItems(\n    $search: String\n    $limit: Int\n    $sort: String\n    $pageNum: Int\n    $exclude: Json\n    $include: Json\n    $priceCurrency: String\n    $price: String\n    $itemLocationCountry: String\n  ) {\n    getItems(\n      search: $search\n      limit: $limit\n      sort: $sort\n      pageNum: $pageNum\n      exclude: $exclude\n      include: $include\n      priceCurrency: $priceCurrency\n      price: $price\n      itemLocationCountry: $itemLocationCountry\n    ) {\n      item\n    }\n  }\n`;\n\nfunction MarketplaceSearch({\n  search,\n  limit,\n  sort,\n  pageNum,\n  exclude,\n  include,\n  priceCurrency,\n  price,\n  itemLocationCountry,\n  atcDisabled,\n  addMPItem,\n}) {\n  const {\n    data: { me },\n  } = useQuery(CURRENT_USER_QUERY);\n\n  const allItems = useQuery(getItemsQuery, {\n    variables: {\n      search,\n      limit,\n      sort: sort.value,\n      pageNum,\n      exclude,\n      include,\n      priceCurrency,\n      price,\n      itemLocationCountry,\n    },\n  });\n\n  const { data, error, loading } = allItems;\n\n  if (me && (!me.buyer || !me.buyer.status)) {\n    return (\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        width=\"100%\"\n        height=\"200px\"\n      >\n        <Link href=\"/settings\">\n          <a>\n            <Button background=\"#DDEBF7\" borderRadius={3}>\n              <Heading fontSize=\"lg\" fontWeight={700} color=\"#1070CA\">\n                GET MARKETPLACE BETA ACCESS\n              </Heading>\n            </Button>\n          </a>\n        </Link>\n      </Box>\n    );\n  }\n\n  if (loading)\n    return (\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        height=\"100vh\"\n      >\n        <Spinner\n          thickness=\"4px\"\n          speed=\"0.65s\"\n          emptyColor=\"gray.200\"\n          color=\"blue.500\"\n          size=\"xl\"\n        />\n      </Box>\n    );\n  if (error || !data.getItems.item || data.getItems.item.length < 1)\n    return (\n      <Box paddingX=\"1em\" paddingY=\"1em\">\n        <Box\n          background=\"tint2\"\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          flexDirection=\"column\"\n          borderRadius={3}\n        >\n          <Heading margin=\"1em\" size={600}>\n            No items found.\n          </Heading>\n        </Box>\n      </Box>\n    );\n  return (\n    <>\n      {data.getItems.item.data.products.edges.map(product => (\n        <MktProduct\n          addVariantToCart={(a, b) => addMPItem(a, b)}\n          checkout={() => toaster.success(`checkout`)}\n          key={product.node.id.toString()}\n          product={product.node}\n          client=\"Marketplace\"\n          atcDisabled={atcDisabled}\n        />\n      ))}\n    </>\n  );\n}\n\nexport default MarketplaceSearch;\n"]},"metadata":{},"sourceType":"module"}