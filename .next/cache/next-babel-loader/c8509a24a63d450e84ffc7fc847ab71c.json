{"ast":null,"code":"import fetch from 'isomorphic-unfetch';\nexport default ((req, res) => {\n  //   fetch('https://jsonplaceholder.typicode.com/todos/1')\n  //     .then(response => response.json())\n  //     .then(json => res.status(200).json(json));\n  const token = '828B4F72F2104CD02B991B73';\n  console.log(req);\n\n  try {\n    fetch(`https://api.zinc.io/v1/search?query=${req.query.search}&page=1&retailer=amazon`, {\n      headers: {\n        Authorization: 'Basic ODI4QjRGNzJGMjEwNENEMDJCOTkxQjczOg=='\n      }\n    }).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      }\n\n      if (response.status === 403) {\n        throw Error('403 Forbidden - Check client token');\n      }\n\n      if (response.status === 503) {\n        throw Error('503 Service Unavailable - Rate Limit Exceeded');\n      }\n    }).then(response => {\n      res.status(200).json(response.results); // const {results} = this.state;\n      // results[0] = this._processItems(res.results);\n      // this.timeOne = performance.now();\n      // this.setState({\n      //   results,\n      //   nextPageUrl: res.nextPage,\n      //   ready: [true],\n      //   timeElapsed: this.timeOne - this.timeZero,\n      //   clientToken: token,\n      // });\n      // console.log(\n      //   `Received first page of results. Query took: ${this.timeOne -\n      //     this.timeZero}ms.`\n      // );\n    }).catch(error => {\n      res.status(200).json(error); // console.error('Error:', error);\n      // this.setState({\n      //   lastPageReceived: 0,\n      //   results: [],\n      //   ready: [false],\n      //   nextPageUrl: null,\n      //   error,\n      //   clientToken: null,\n      // });\n    });\n  } catch (e) {\n    console.error(`Error getResults:${e}`);\n  }\n});","map":null,"metadata":{},"sourceType":"module"}