{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation SIGNUP_MUTATION($email: String!) {\\n    requestReset(email: $email) {\\n      message\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport Userform from './Userform';\nvar REUQEST_RESET_MUTATION = gql(_templateObject());\n\nfunction RequestReset(_ref) {\n  var formChange = _ref.formChange;\n\n  var _useState = useState(''),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useMutation = useMutation(REUQEST_RESET_MUTATION, {\n    variables: {\n      email: email\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      reset = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      error = _useMutation2$.error,\n      loading = _useMutation2$.loading,\n      called = _useMutation2$.called;\n\n  return __jsx(Userform, {\n    title: \"Please enter your email and we'll send a link to reset your password\",\n    handleToggleClick: function handleToggleClick() {\n      return formChange();\n    },\n    buttonTitle: \"Send Reset Link\",\n    buttonColor: \"#14B5D0\",\n    error: error,\n    loading: loading,\n    buttonDisabled: !email,\n    fields: [{\n      label: 'Email',\n      value: email,\n      onChange: setEmail,\n      icon: 'envelope'\n    }],\n    bottomLinkText: \"Back to sign in\",\n    onSubmit: function _callee(e) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(reset());\n\n            case 3:\n              setEmail('');\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    success: called\n  });\n}\n\nexport default RequestReset;","map":null,"metadata":{},"sourceType":"module"}