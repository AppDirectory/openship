{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport React from \"react\";\nimport { useState } from 'react';\nimport { gql } from 'apollo-boost';\nimport { Mutation } from 'react-apollo';\nimport { toaster } from 'evergreen-ui';\nimport Button from './Button';\nimport User from '../user/User';\nconst CREATE_PRODUCTS_MUTATION = gql`\n  mutation createProducts(\n    $title: String!\n    $descriptionHtml: String\n    $productType: String\n    $vendor: String\n    $images: Json\n    $options: Json\n    $variants: Json\n    $client: String\n  ) {\n    createProducts(\n      title: $title\n      descriptionHtml: $descriptionHtml\n      productType: $productType\n      vendor: $vendor\n      images: $images\n      options: $options\n      variants: $variants\n      shop: $client\n    ) {\n      product\n      shop\n      userErrors\n    }\n  }\n`;\n\nconst AddProduct = ({\n  product,\n  client\n}) => {\n  const [inventory, setInventory] = useState(0);\n  return React.createElement(User, null, ({\n    data: {\n      me\n    }\n  }) => {\n    if (!me) return null;\n\n    if (me.seller && me.seller.status) {\n      return React.createElement(Mutation, {\n        mutation: CREATE_PRODUCTS_MUTATION\n      }, (createProducts, {\n        error,\n        loading\n      }) => React.createElement(Button, {\n        intent: \"primary\",\n        height: 20,\n        onClick: async () => {\n          await createProducts({\n            variables: _objectSpread({}, product, {\n              client\n            })\n          });\n          toaster.success(`${product.title} has been added to the marketplace`);\n        },\n        marginRight: 5\n      }, \"Sync\"));\n    }\n\n    return null;\n  });\n};\n\nexport default AddProduct;","map":null,"metadata":{},"sourceType":"module"}