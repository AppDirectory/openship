{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation deleteOrder($id: ID!) {\\n    deleteOrder(id: $id) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation checkoutLineItemsUpdate($checkoutId: ID!, $lineItems: Json!) {\\n    checkoutLineItemsUpdate(checkoutId: $checkoutId, lineItems: $lineItems) {\\n      checkout\\n    }\\n  }\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation checkoutLineItemsRemove($checkoutId: ID!, $lineItemIds: Json!) {\\n    checkoutLineItemsRemove(\\n      checkoutId: $checkoutId\\n      lineItemIds: $lineItemIds\\n    ) {\\n      checkout\\n    }\\n  }\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation checkoutLineItemsAdd($checkoutId: ID!, $lineItems: Json!) {\\n    checkoutLineItemsAdd(checkoutId: $checkoutId, lineItems: $lineItems) {\\n      checkout\\n    }\\n  }\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation createCheckout($input: Json!) {\\n    createCheckout(input: $input) {\\n      checkout\\n    }\\n  }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation purchaseItems($ids: Json!) {\\n    purchaseItems(ids: $ids) {\\n      checkout\\n      cart\\n    }\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation upsertMatch($shopify: Json!, $marketplace: Json!) {\\n    upsertMatch(shopify: $shopify, marketplace: $marketplace) {\\n      item\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation updateOrder(\\n    $id: ID!\\n    $mpCart: String!\\n    $first_name: String\\n    $last_name: String\\n    $streetAddress1: String\\n    $streetAddress2: String\\n    $city: String\\n    $state: String\\n    $zip: String\\n  ) {\\n    updateOrder(\\n      id: $id\\n      mpCart: $mpCart\\n      first_name: $first_name\\n      last_name: $last_name\\n      streetAddress1: $streetAddress1\\n      streetAddress2: $streetAddress2\\n      city: $city\\n      state: $state\\n      zip: $zip\\n    ) {\\n      id\\n      email\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query PAGINATION_QUERY {\\n    ordersConnection(where: { mpCart_not: null }) {\\n      aggregate {\\n        count\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query OrdersQuery($skip: Int, $first: Int, $orderBy: OrderOrderByInput) {\\n    orders(\\n      first: $first\\n      skip: $skip\\n      orderBy: $orderBy\\n      where: { mpCart_not: null }\\n    ) {\\n      id\\n      orderId\\n      orderName\\n      email\\n      first_name\\n      last_name\\n      streetAddress1\\n      streetAddress2\\n      city\\n      state\\n      zip\\n      phone\\n      lineItems\\n      currency\\n      totalPrice\\n      subTotalPrice\\n      totalDiscount\\n      totalTax\\n      createAt\\n      mpCart\\n      mpCheckout\\n      zincCart\\n      zincCheckout\\n      shopName\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query, Mutation } from 'react-apollo';\nimport { Adopt } from 'react-adopt';\nimport { Pane, Heading, Alert, Switch, Spinner, Text, IconButton, Icon, toaster } from 'evergreen-ui';\nimport OrderListItem from '../common/orderListItem/OrderListItem';\nimport Find from '../find/Find';\nimport OrderLine from '../common/orderListItem/OrderLine';\nimport Button from '../common/Button';\nimport { CardStyle } from '../common/DefaultStyles';\nimport Cart from './Cart/Cart';\nexport var ORDER_QUERY = gql(_templateObject());\nvar PAGINATION_QUERY = gql(_templateObject2());\nvar UPDATE_ORDER_MUTATION = gql(_templateObject3());\nvar UPSERT_MUTATION = gql(_templateObject4());\nvar PURCHASE_ORDER_MUTATION = gql(_templateObject5());\nvar CREATE_CHECKOUT_MUTATION = gql(_templateObject6());\nvar CHECKOUT_ADD_MUTATION = gql(_templateObject7());\nvar CHECKOUT_REMOVE_MUTATION = gql(_templateObject8());\nvar CHECKOUT_UPDATE_MUTATION = gql(_templateObject9());\nvar DELETE_ORDER = gql(_templateObject10());\nvar Layout = {\n  flex: '1 1 10rem',\n  marginLeft: '2rem',\n  marginTop: '2rem'\n};\n/* eslint-disable */\n\nvar mapper = {\n  updateOrder: function updateOrder(_ref) {\n    var render = _ref.render;\n    return React.createElement(Mutation, {\n      mutation: UPDATE_ORDER_MUTATION,\n      refetchQueries: function refetchQueries() {\n        return [{\n          query: ORDER_QUERY,\n          variables: {\n            skip: 0\n          }\n        }];\n      }\n    }, function (mutation, result) {\n      return render({\n        mutation: mutation,\n        result: result\n      });\n    });\n  },\n  upsertMatch: function upsertMatch(_ref2) {\n    var render = _ref2.render;\n    return React.createElement(Mutation, {\n      mutation: UPSERT_MUTATION\n    }, function (mutation, result) {\n      return render({\n        mutation: mutation,\n        result: result\n      });\n    });\n  },\n  checkoutLineItemsRemove: function checkoutLineItemsRemove(_ref3) {\n    var render = _ref3.render;\n    return React.createElement(Mutation, {\n      mutation: CHECKOUT_REMOVE_MUTATION,\n      refetchQueries: function refetchQueries() {\n        return [{\n          query: ORDER_QUERY,\n          variables: {\n            skip: 0\n          }\n        }];\n      }\n    }, function (mutation, result) {\n      return render({\n        mutation: mutation,\n        result: result\n      });\n    });\n  },\n  checkoutLineItemsUpdate: function checkoutLineItemsUpdate(_ref4) {\n    var render = _ref4.render;\n    return React.createElement(Mutation, {\n      mutation: CHECKOUT_UPDATE_MUTATION,\n      refetchQueries: function refetchQueries() {\n        return [{\n          query: ORDER_QUERY,\n          variables: {\n            skip: 0\n          }\n        }];\n      }\n    }, function (mutation, result) {\n      return render({\n        mutation: mutation,\n        result: result\n      });\n    });\n  }\n};\n/* eslint-disable */\n\nfunction PendingOrders() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedOrderIndex = _useState2[0],\n      setSelectedOrderIndex = _useState2[1]; // const [selectedLineIndex, setSelectedLineIndex] = useState([]);\n\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      skip = _useState4[0],\n      setSkip = _useState4[1];\n\n  var _useState5 = useState(\"createdAt_ASC\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      orderBy = _useState6[0],\n      setOrderBy = _useState6[1];\n\n  var _useState7 = useState(100),\n      _useState8 = _slicedToArray(_useState7, 2),\n      firstQ = _useState8[0],\n      setFirstQ = _useState8[1]; // const [check, setCheck] = useState(true);\n\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      open = _useState10[0],\n      setOpen = _useState10[1]; // const [checkout, setCheckout] = useState({});\n\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      cartLoading = _useState12[0],\n      setCartLoading = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      processingOrder = _useState14[0],\n      setProcessingOrder = _useState14[1];\n\n  function _currentOrder(_x) {\n    return _currentOrder2.apply(this, arguments);\n  }\n\n  function _currentOrder2() {\n    _currentOrder2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(arg) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setSelectedOrderIndex(arg);\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _currentOrder2.apply(this, arguments);\n  }\n\n  function overwrite(_x2, _x3, _x4) {\n    return _overwrite.apply(this, arguments);\n  }\n\n  function _overwrite() {\n    _overwrite = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4(errorText, lineItems, upsertMatchMutation) {\n      var upsertMatchRes;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              setCartLoading(true); // const res = await updateOrderMutation({\n              //   variables: {\n              //     id: selectedOrderIndex,\n              //     errorText: JSON.stringify(checkout)\n              //   }\n              // });\n              // if (check) {\n              //   const upsertMatchRes = await upsertMatchMutation({\n              //     variables: {\n              //       shopify: lineItems.map(a => ({\n              //         shopify_id: a.product_id,\n              //         quantity: a.quantity,\n              //       })),\n              //       market: cart.map(a => ({\n              //         market_id: a.itemId.slice(3),\n              //         quantity: a.stateQuantity,\n              //       })),\n              //     },\n              //   });\n              // }\n\n              _context4.next = 3;\n              return upsertMatchMutation({\n                variables: {\n                  shopify: lineItems.map(function (a) {\n                    return {\n                      product_id: a.product_id,\n                      variant_id: a.variant_id,\n                      quantity: a.quantity\n                    };\n                  }),\n                  marketplace: mpCart.lineItems.edges.map(function (a) {\n                    return {\n                      product_id: a.node.id,\n                      variant_id: a.node.variant.id,\n                      quantity: a.node.quantity\n                    };\n                  })\n                }\n              });\n\n            case 3:\n              upsertMatchRes = _context4.sent;\n              toaster.notify(\"Line items have been matched to cart items\"); // setSelectedOrderIndex(null);\n\n              setCartLoading(false);\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return _overwrite.apply(this, arguments);\n  }\n\n  function doPurchase(_x5, _x6) {\n    return _doPurchase.apply(this, arguments);\n  }\n\n  function _doPurchase() {\n    _doPurchase = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5(ids, purchaseOrderMutation) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return purchaseOrderMutation({\n                variables: {\n                  ids: ids\n                }\n              });\n\n            case 2:\n              res = _context5.sent;\n\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n    return _doPurchase.apply(this, arguments);\n  }\n\n  function createCheck(_x7, _x8, _x9, _x10) {\n    return _createCheck.apply(this, arguments);\n  }\n\n  function _createCheck() {\n    _createCheck = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee6(input, orderID, createCheckoutFunc, updateOrderFunc) {\n      var varCheck, newCheck, res;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return createCheckoutFunc({\n                variables: {\n                  input: input\n                }\n              });\n\n            case 2:\n              varCheck = _context6.sent;\n              newCheck = varCheck.data.createCheckout.checkout;\n              _context6.next = 6;\n              return updateOrderFunc({\n                variables: {\n                  id: orderID,\n                  mpCart: _JSON$stringify(newCheck)\n                }\n              });\n\n            case 6:\n              res = _context6.sent;\n\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n    return _createCheck.apply(this, arguments);\n  }\n\n  function _addVariant2(_x11, _x12, _x13, _x14, _x15) {\n    return _addVariant.apply(this, arguments);\n  }\n\n  function _addVariant() {\n    _addVariant = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee7(id, quantity, checkoutID, checkoutLineItemsAddFunc, updateOrderFunc) {\n      var varCheck, newCheck, res;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return checkoutLineItemsAddFunc({\n                variables: {\n                  checkoutId: checkoutID,\n                  lineItems: [{\n                    variantId: id,\n                    quantity: quantity\n                  }]\n                }\n              });\n\n            case 2:\n              varCheck = _context7.sent;\n              newCheck = varCheck.data.checkoutLineItemsAdd.checkout;\n              _context7.next = 6;\n              return updateOrderFunc({\n                variables: {\n                  id: selectedOrderIndex,\n                  mpCart: _JSON$stringify(newCheck)\n                }\n              });\n\n            case 6:\n              res = _context7.sent;\n\n            case 7:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n    return _addVariant.apply(this, arguments);\n  }\n\n  function _removeItem2(_x16, _x17, _x18, _x19) {\n    return _removeItem.apply(this, arguments);\n  }\n\n  function _removeItem() {\n    _removeItem = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee8(lineItemIds, checkoutID, checkoutLineItemsRemoveFunc, updateOrderFunc) {\n      var varCheck, res;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return checkoutLineItemsRemoveFunc.mutation({\n                variables: {\n                  checkoutId: checkoutID,\n                  lineItemIds: lineItemIds\n                }\n              });\n\n            case 2:\n              varCheck = _context8.sent;\n              _context8.next = 5;\n              return updateOrderFunc({\n                variables: {\n                  id: selectedOrderIndex,\n                  mpCart: _JSON$stringify(varCheck.data.checkoutLineItemsRemove.checkout)\n                }\n              });\n\n            case 5:\n              res = _context8.sent;\n\n            case 6:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n    return _removeItem.apply(this, arguments);\n  }\n\n  function updateItem(_x20, _x21, _x22, _x23) {\n    return _updateItem.apply(this, arguments);\n  }\n\n  function _updateItem() {\n    _updateItem = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee9(lineItems, checkoutID, checkoutLineItemsUpdateFunc, updateOrderFunc) {\n      var varCheck, res;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return checkoutLineItemsUpdateFunc.mutation({\n                variables: {\n                  checkoutId: checkoutID,\n                  lineItems: lineItems\n                }\n              });\n\n            case 2:\n              varCheck = _context9.sent;\n              _context9.next = 5;\n              return updateOrderFunc({\n                variables: {\n                  id: selectedOrderIndex,\n                  mpCart: _JSON$stringify(varCheck.data.checkoutLineItemsUpdate.checkout)\n                }\n              });\n\n            case 5:\n              res = _context9.sent;\n\n            case 6:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n    return _updateItem.apply(this, arguments);\n  }\n\n  function play() {\n    if (firstQ === 1) {\n      setFirstQ(100);\n      setOpen(false);\n      setSkip(0);\n    } else {\n      setFirstQ(1);\n      setOpen(true);\n    } // setSkip(0);\n\n  }\n  /* eslint-disable */\n\n\n  var orderListMutations = {\n    purchaseOrder: function purchaseOrder(_ref5) {\n      var render = _ref5.render;\n      return React.createElement(Mutation, {\n        mutation: PURCHASE_ORDER_MUTATION,\n        refetchQueries: function refetchQueries() {\n          return [{\n            query: ORDER_QUERY,\n            variables: {\n              skip: skip,\n              first: firstQ,\n              orderBy: orderBy\n            }\n          }, {\n            query: PAGINATION_QUERY\n          }];\n        }\n      }, function (mutation, result) {\n        return render({\n          mutation: mutation,\n          result: result\n        });\n      });\n    },\n    deleteOrder: function deleteOrder(_ref6) {\n      var render = _ref6.render;\n      return React.createElement(Mutation, {\n        mutation: DELETE_ORDER,\n        refetchQueries: function refetchQueries() {\n          return [{\n            query: ORDER_QUERY,\n            variables: {\n              skip: skip,\n              first: firstQ,\n              orderBy: orderBy\n            }\n          }, {\n            query: PAGINATION_QUERY\n          }];\n        }\n      }, function (mutation, result) {\n        return render({\n          mutation: mutation,\n          result: result\n        });\n      });\n    },\n    updateOrder: function updateOrder(_ref7) {\n      var render = _ref7.render;\n      return React.createElement(Mutation, {\n        mutation: UPDATE_ORDER_MUTATION,\n        refetchQueries: function refetchQueries() {\n          return [{\n            query: ORDER_QUERY,\n            variables: {\n              skip: 0\n            }\n          }];\n        }\n      }, function (mutation, result) {\n        return render({\n          mutation: mutation,\n          result: result\n        });\n      });\n    },\n    upsertMatch: function upsertMatch(_ref8) {\n      var render = _ref8.render;\n      return React.createElement(Mutation, {\n        mutation: UPSERT_MUTATION\n      }, function (mutation, result) {\n        return render({\n          mutation: mutation,\n          result: result\n        });\n      });\n    },\n    createCheckout: function createCheckout(_ref9) {\n      var render = _ref9.render;\n      return React.createElement(Mutation, {\n        mutation: CREATE_CHECKOUT_MUTATION,\n        refetchQueries: function refetchQueries() {\n          return [{\n            query: ORDER_QUERY,\n            variables: {\n              skip: 0\n            }\n          }];\n        }\n      }, function (mutation, result) {\n        return render({\n          mutation: mutation,\n          result: result\n        });\n      });\n    },\n    checkoutLineItemsRemove: function checkoutLineItemsRemove(_ref10) {\n      var render = _ref10.render;\n      return React.createElement(Mutation, {\n        mutation: CHECKOUT_REMOVE_MUTATION,\n        refetchQueries: function refetchQueries() {\n          return [{\n            query: ORDER_QUERY,\n            variables: {\n              skip: 0\n            }\n          }];\n        }\n      }, function (mutation, result) {\n        return render({\n          mutation: mutation,\n          result: result\n        });\n      });\n    },\n    checkoutLineItemsUpdate: function checkoutLineItemsUpdate(_ref11) {\n      var render = _ref11.render;\n      return React.createElement(Mutation, {\n        mutation: CHECKOUT_UPDATE_MUTATION,\n        refetchQueries: function refetchQueries() {\n          return [{\n            query: ORDER_QUERY,\n            variables: {\n              skip: 0\n            }\n          }];\n        }\n      }, function (mutation, result) {\n        return render({\n          mutation: mutation,\n          result: result\n        });\n      });\n    }\n  };\n  /* eslint-disable */\n\n  return React.createElement(React.Fragment, null, React.createElement(Pane, {\n    display: \"flex\",\n    paddingTop: 16,\n    paddingBottom: 16\n  }, React.createElement(Pane, {\n    flex: 1,\n    alignItems: \"center\",\n    display: \"flex\"\n  }, React.createElement(Heading, {\n    size: 700\n  }, \"Pending Orders\"))), React.createElement(Pane, {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    marginLeft: \"-2rem\",\n    marginTop: \"-2rem\"\n  }, React.createElement(Adopt, {\n    mapper: orderListMutations\n  }, function (_ref12) {\n    var purchaseOrder = _ref12.purchaseOrder,\n        deleteOrder = _ref12.deleteOrder,\n        updateOrder = _ref12.updateOrder,\n        upsertMatch = _ref12.upsertMatch,\n        _createCheckout = _ref12.createCheckout,\n        checkoutLineItemsRemove = _ref12.checkoutLineItemsRemove,\n        _checkoutLineItemsUpdate = _ref12.checkoutLineItemsUpdate;\n    return React.createElement(Query, {\n      query: ORDER_QUERY,\n      variables: {\n        skip: skip,\n        first: firstQ,\n        orderBy: orderBy\n      }\n    }, function (_ref13) {\n      var loading = _ref13.loading,\n          error = _ref13.error,\n          data = _ref13.data;\n      if (loading) return React.createElement(React.Fragment, null, React.createElement(Pane, Layout, React.createElement(Pane, CardStyle, React.createElement(Pane, {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"50vh\"\n      }, React.createElement(Spinner, {\n        size: 80\n      })))), React.createElement(Pane, Layout, React.createElement(Pane, _extends({}, CardStyle, {\n        padding: 10\n      }), React.createElement(Alert, {\n        intent: \"warning\",\n        title: \"Please choose an order or a line item.\"\n      }))));\n      if (error) return \"Error! \".concat(error.message);\n      var orders = data.orders;\n      var theOrder = orders.filter(function (order) {\n        return order.id === selectedOrderIndex;\n      })[0];\n      return React.createElement(React.Fragment, null, React.createElement(Pane, Layout, React.createElement(Pane, CardStyle, React.createElement(Pane, {\n        display: \"flex\",\n        paddingX: \"1em\",\n        paddingY: \".8em\",\n        alignItems: \"center\"\n      }, React.createElement(Query, {\n        query: PAGINATION_QUERY\n      }, function (_ref14) {\n        var data = _ref14.data,\n            loading = _ref14.loading,\n            error = _ref14.error;\n        var count = data.ordersConnection ? data.ordersConnection.aggregate.count : 0;\n        return React.createElement(React.Fragment, null, firstQ === 1 ? React.createElement(Heading, {\n          size: 100\n        }, \"Order \", skip + 1, \" of \", count) : React.createElement(Heading, {\n          size: 100\n        }, count, \" Orders\"), React.createElement(Pane, {\n          marginLeft: \"auto\",\n          display: \"flex\"\n        }, React.createElement(Button, {\n          intent: \"none\",\n          height: 20,\n          marginRight: 5,\n          onClick: function onClick() {\n            return setOrderBy(orderBy === \"createdAt_DESC\" ? \"createdAt_ASC\" : \"createdAt_DESC\");\n          }\n        }, orderBy.split(\"_\")[1]), React.createElement(Button, {\n          intent: \"success\",\n          height: 20,\n          marginRight: 5,\n          onClick: function onClick() {\n            return play();\n          }\n        }, firstQ !== 1 ? \"Play\" : \"Show All\", firstQ !== 1 && React.createElement(Icon, {\n          size: 13,\n          icon: \"play\",\n          marginRight: -4,\n          marginLeft: 3\n        })), firstQ === 1 ? React.createElement(Button, {\n          intent: \"warning\",\n          height: 20,\n          onClick: function onClick() {\n            return setSkip(skip + 1);\n          },\n          disabled: firstQ !== 1 || skip + 1 === count\n        }, \"Skip\", React.createElement(Icon, {\n          size: 13,\n          icon: \"double-chevron-right\",\n          marginRight: -4,\n          marginLeft: 3\n        })) : React.createElement(Mutation, {\n          mutation: PURCHASE_ORDER_MUTATION,\n          refetchQueries: function refetchQueries() {\n            return [{\n              query: ORDER_QUERY,\n              variables: {\n                skip: skip,\n                first: firstQ,\n                orderBy: orderBy\n              }\n            }, {\n              query: PAGINATION_QUERY\n            }];\n          }\n        }, function (purchaseOrder, _ref15) {\n          var error = _ref15.error,\n              loading = _ref15.loading;\n          return React.createElement(Button, {\n            intent: \"warning\",\n            height: 20,\n            disabled: firstQ !== 1 || skip + 1 === count,\n            isLoading: loading,\n            onClick: function onClick() {\n              doPurchase(orders.filter(function (order) {\n                return JSON.parse(order.mpCart).length > 0 && JSON.parse(order.mpCart)[0].status === \"matched\";\n              }).map(function (a) {\n                return a.id;\n              }), purchaseOrder);\n              setSkip(skip + 1);\n            }\n          }, \"Multi |\", \" \", orders && orders.filter(function (order) {\n            return JSON.parse(order.mpCart).length > 0 && JSON.parse(order.mpCart)[0].status === \"matched\";\n          }).length);\n        })));\n      })), orders.length ? orders.map(function (order) {\n        return React.createElement(Pane, {\n          key: order.id\n        }, React.createElement(Pane // opacity={\n        //   (purchaseOrder.result.loading ||\n        //     deleteOrder.result.loading) &&\n        //   \"0.2\"\n        // }\n        , {\n          opacity: processingOrder === order.id && \"0.2\",\n          width: \"100%\",\n          height: \"100%\",\n          position: \"relative\"\n        }, processingOrder === order.id && React.createElement(Pane, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"100%\"\n        }, React.createElement(Spinner, {\n          size: 80\n        })), React.createElement(Pane, {\n          borderTop: \"0.1rem solid #dfe3e8\"\n        }, React.createElement(Pane, {\n          borderLeft: \"3px solid \".concat(selectedOrderIndex === order.id ? \"#007489\" : \"transparent\")\n        }, React.createElement(OrderListItem, _extends({}, order, {\n          updateIndex: function updateIndex(arg) {\n            return _currentOrder(arg);\n          },\n          open: open // updateLine={arg => _currentLineItem(arg)}\n          // createCheckout={createCheckout.mutation}\n          ,\n          createCheckout: function createCheckout(a) {\n            return createCheck(a, order.id, _createCheckout.mutation, updateOrder.mutation);\n          },\n          key: order.id,\n          index: order.id // selectedLineIndex={selectedLineIndex}\n          ,\n          selectedOrderIndex: selectedOrderIndex // disabled={selectedOrderIndex || loading}\n          ,\n          disabled: !(!selectedOrderIndex || selectedOrderIndex === order.id),\n          buttons: React.createElement(React.Fragment, null, React.createElement(IconButton, {\n            height: 20,\n            appearance: \"minimal\",\n            inent: \"danger\",\n            icon: \"cross\",\n            iconSize: 15,\n            marginLeft: 6,\n            pointerEvents: \"visible\",\n            onClick:\n            /*#__PURE__*/\n            function () {\n              var _ref16 = _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee(e) {\n                var res;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        e.stopPropagation();\n                        setProcessingOrder(order.id);\n                        _context.next = 4;\n                        return deleteOrder.mutation({\n                          variables: {\n                            id: order.id\n                          }\n                        });\n\n                      case 4:\n                        res = _context.sent;\n                        setProcessingOrder(null);\n\n                      case 6:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x24) {\n                return _ref16.apply(this, arguments);\n              };\n            }()\n          }), React.createElement(IconButton, {\n            height: 20,\n            appearance: \"minimal\",\n            icon: \"tick\",\n            iconSize: 15,\n            marginLeft: 6,\n            pointerEvents: loading ? \"none\" : \"visible\",\n            onClick:\n            /*#__PURE__*/\n            function () {\n              var _ref17 = _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee2(e) {\n                return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        e.stopPropagation();\n                        setProcessingOrder(order.id);\n                        setSelectedOrderIndex(null);\n                        _context2.next = 5;\n                        return doPurchase([order.id], purchaseOrder.mutation);\n\n                      case 5:\n                        setProcessingOrder(null);\n\n                      case 6:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function (_x25) {\n                return _ref17.apply(this, arguments);\n              };\n            }()\n          }))\n        }))))));\n      }) : React.createElement(Pane, {\n        background: \"tint2\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        borderRadius: 3\n      }, React.createElement(Heading, {\n        margin: \"1em\",\n        size: 600\n      }, \"Your pending orders will appear here.\")))), React.createElement(Pane, Layout, selectedOrderIndex ? React.createElement(Pane, null, React.createElement(Pane, _extends({}, CardStyle, {\n        padding: 15,\n        opacity: cartLoading && \"0.2\",\n        width: \"100%\",\n        height: \"100%\"\n      }), cartLoading && React.createElement(Pane, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        margin: \"auto\"\n      }, React.createElement(Pane, {\n        position: \"fixed\"\n      }, React.createElement(Spinner, {\n        size: 80\n      }))), React.createElement(Pane, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        fontWeight: 600,\n        background: \"white\"\n      }, React.createElement(React.Fragment, null, React.createElement(Heading, {\n        size: 400\n      }, theOrder.orderName), React.createElement(Pane, {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginLeft: 4\n      }, React.createElement(Text, {\n        size: 300,\n        fontWeight: 500,\n        marginX: 10,\n        color: \"#7B8B9A\",\n        className: \"hover\",\n        cursor: \"pointer\",\n        onClick: function onClick() {\n          // setSelectedLineIndex([]);\n          setSelectedOrderIndex(null);\n        }\n      }, \"Empty\"), React.createElement(Button, {\n        intent: \"primary\",\n        height: 20,\n        onClick: function onClick() {\n          return overwrite(JSON.parse(theOrder.mpCart), theOrder.lineItems, upsertMatch.mutation);\n        },\n        disabled: theOrder.mpCart && theOrder.mpCart.lineItems && theOrder.mpCart.lineItems.edges.length === 0 || !theOrder.mpCart\n      }, \"Match\")))), React.createElement(Pane, null, React.createElement(Pane, {\n        display: \"flex\"\n      }, React.createElement(Text, {\n        contenteditable: \"true\",\n        size: 300,\n        marginRight: 4\n      }, theOrder.first_name), React.createElement(Text, {\n        contenteditable: \"true\",\n        size: 300\n      }, theOrder.last_name)), React.createElement(Text, {\n        contenteditable: \"true\",\n        size: 300\n      }, theOrder.streetAddress1), theOrder.streetAddress2 && React.createElement(Text, {\n        contenteditable: \"true\",\n        size: 300\n      }, theOrder.streetAddress2), React.createElement(Pane, {\n        display: \"flex\"\n      }, React.createElement(Text, {\n        contenteditable: \"true\",\n        size: 300,\n        marginRight: 4\n      }, theOrder.city), React.createElement(Text, {\n        contenteditable: \"true\",\n        size: 300,\n        marginRight: 4\n      }, theOrder.state), React.createElement(Text, {\n        contenteditable: \"true\",\n        size: 300\n      }, theOrder.zip))), React.createElement(Pane, {\n        paddingTop: 10\n      }, React.createElement(Pane, {\n        marginLeft: \"-3px\",\n        background: \"#F7F9FD\",\n        border: \"muted\",\n        paddingY: \".7em\",\n        paddingX: \"1em\"\n      }, React.createElement(Pane, {\n        marginBottom: 10\n      }, React.createElement(Text, {\n        size: 400,\n        fontWeight: 500,\n        color: \"#084B8A\"\n      }, \"Line Items\")), theOrder.lineItems.map(function (a) {\n        return React.createElement(OrderLine, {\n          key: a.id,\n          item: a.node ? a.node : a\n        });\n      }))), React.createElement(Cart, {\n        removeItem: function removeItem(a) {\n          return _removeItem2(a, JSON.parse(theOrder.mpCart).id, checkoutLineItemsRemove, updateOrder.mutation);\n        },\n        checkout: JSON.parse(theOrder.mpCart),\n        checkoutLineItemsUpdate: function checkoutLineItemsUpdate(a) {\n          return updateItem(a, JSON.parse(theOrder.mpCart).id, _checkoutLineItemsUpdate, updateOrder.mutation);\n        } // createCheckout={createCheckout}\n        // setCheckout={setCheckout}\n        // isCartOpen={this.state.isCartOpen}\n        // handleCartClose={this.handleCartClose}\n        // customerAccessToken={this.state.customerAccessToken}\n\n      }))) : React.createElement(Pane, _extends({}, CardStyle, {\n        padding: 10\n      }), React.createElement(Alert, {\n        intent: \"warning\",\n        title: \"Please choose an order or a line item.\"\n      })), React.createElement(Mutation, {\n        mutation: CHECKOUT_ADD_MUTATION\n      }, function (checkoutLineItemsAdd, _ref18) {\n        var error = _ref18.error,\n            loading = _ref18.loading;\n        return React.createElement(Find, {\n          headerSize: 600,\n          atcDisabled: !theOrder,\n          addVariant: function addVariant(a, b) {\n            return _addVariant2(a, b, JSON.parse(theOrder.mpCart).id, checkoutLineItemsAdd, updateOrder.mutation);\n          }\n        });\n      })));\n    });\n  })));\n}\n\nexport default PendingOrders;","map":null,"metadata":{},"sourceType":"module"}