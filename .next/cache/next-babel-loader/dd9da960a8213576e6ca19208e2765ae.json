{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport AmzProduct from './AmzProduct';\nimport { front, prodFront } from '../../../config';\n\nfunction ZincSearch({\n  addZincItem,\n  atcDisabled,\n  searchEntry,\n  token\n}) {\n  const {\n    0: results,\n    1: setResults\n  } = useState([]);\n  const {\n    0: error,\n    1: setError\n  } = useState('');\n  useEffect(() => {\n    async function findItems() {\n      const res = await fetch(`${true ? front : prodFront}/api/zinc/search?query=${searchEntry}&token=${token}`).then(res => res.json()).then(json => setResults(json)).catch(error => setError('Error: ', error));\n    }\n\n    searchEntry && findItems();\n  }, [searchEntry, token]);\n  return results.map(product => __jsx(React.Fragment, null, __jsx(\"div\", null, error), __jsx(AmzProduct, {\n    product: product,\n    addVariantToCart: a => toaster.success(a),\n    atcDisabled: atcDisabled,\n    addZincItem: (a, b, c, d, e) => addZincItem(a, b, c, d, e)\n  })));\n}\n\nexport default ZincSearch;","map":{"version":3,"sources":["/Users/junaid/openship2/components/find/ZincSearch/index.js"],"names":["React","useState","useEffect","AmzProduct","front","prodFront","ZincSearch","addZincItem","atcDisabled","searchEntry","token","results","setResults","error","setError","findItems","res","fetch","then","json","catch","map","product","a","toaster","success","b","c","d","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,iBAAjC;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,WAAf;AAA4BC,EAAAA,WAA5B;AAAyCC,EAAAA;AAAzC,CAApB,EAAsE;AACpE,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACY,KAAD;AAAA,OAAQC;AAAR,MAAoBb,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAea,SAAf,GAA2B;AACzB,YAAMC,GAAG,GAAG,MAAMC,KAAK,CACpB,GACC,OAAyCb,KAAzC,GAAiDC,SAClD,0BAAyBI,WAAY,UAASC,KAAM,EAHhC,CAAL,CAKfQ,IALe,CAKVF,GAAG,IAAIA,GAAG,CAACG,IAAJ,EALG,EAMfD,IANe,CAMVC,IAAI,IAAIP,UAAU,CAACO,IAAD,CANR,EAOfC,KAPe,CAOTP,KAAK,IAAIC,QAAQ,CAAC,SAAD,EAAYD,KAAZ,CAPR,CAAlB;AAQD;;AAEDJ,IAAAA,WAAW,IAAIM,SAAS,EAAxB;AACD,GAbQ,EAaN,CAACN,WAAD,EAAcC,KAAd,CAbM,CAAT;AAeA,SAAOC,OAAO,CAACU,GAAR,CAAYC,OAAO,IACxB,4BACE,mBAAMT,KAAN,CADF,EAEE,MAAC,UAAD;AACE,IAAA,OAAO,EAAES,OADX;AAEE,IAAA,gBAAgB,EAAEC,CAAC,IAAIC,OAAO,CAACC,OAAR,CAAgBF,CAAhB,CAFzB;AAGE,IAAA,WAAW,EAAEf,WAHf;AAIE,IAAA,WAAW,EAAE,CAACe,CAAD,EAAIG,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAaC,CAAb,KAAmBtB,WAAW,CAACgB,CAAD,EAAIG,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAaC,CAAb;AAJ7C,IAFF,CADK,CAAP;AAWD;;AAED,eAAevB,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport AmzProduct from './AmzProduct';\nimport { front, prodFront } from '../../../config';\n\nfunction ZincSearch({ addZincItem, atcDisabled, searchEntry, token }) {\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    async function findItems() {\n      const res = await fetch(\n        `${\n          process.env.NODE_ENV === 'development' ? front : prodFront\n        }/api/zinc/search?query=${searchEntry}&token=${token}`\n      )\n        .then(res => res.json())\n        .then(json => setResults(json))\n        .catch(error => setError('Error: ', error));\n    }\n\n    searchEntry && findItems();\n  }, [searchEntry, token]);\n\n  return results.map(product => (\n    <>\n      <div>{error}</div>\n      <AmzProduct\n        product={product}\n        addVariantToCart={a => toaster.success(a)}\n        atcDisabled={atcDisabled}\n        addZincItem={(a, b, c, d, e) => addZincItem(a, b, c, d, e)}\n      />\n    </>\n  ));\n}\n\nexport default ZincSearch;\n"]},"metadata":{},"sourceType":"module"}