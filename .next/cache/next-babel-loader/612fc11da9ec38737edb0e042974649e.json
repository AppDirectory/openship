{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Box, Heading, Text, Input, InputGroup, InputLeftElement, Icon, Button } from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\nimport ErrorMessage from '../common/ErrorMessage';\nconst sucessCard = {\n  paddingX: 10,\n  paddingY: 5,\n  background: '#F1FAF5',\n  borderRadius: 3,\n  display: 'flex',\n  alignItems: 'center'\n};\n\nconst Userform = ({\n  title,\n  fields,\n  handleToggleClick,\n  links,\n  buttonTitle,\n  buttonColor,\n  bottomText,\n  bottomLinkText,\n  onSubmit,\n  buttonDisabled,\n  error,\n  loading,\n  success\n}) => __jsx(React.Fragment, null, __jsx(Box, {\n  width: 350,\n  alignItems: \"center\"\n}, __jsx(Box, {\n  marginBottom: 2,\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\"\n}, __jsx(Heading, {\n  fontSize: \"lg\",\n  fontWeight: \"500\",\n  marginRight: \"auto\",\n  color: \"#425A70\"\n}, title), links && links), fields && fields.map(field => __jsx(InputGroup, {\n  width: \"100%\",\n  borderColor: \"gray.200\",\n  mb: 4\n}, __jsx(InputLeftElement, {\n  children: __jsx(Icon, {\n    name: field.icon,\n    color: \"gray.300\"\n  })\n}), __jsx(Input, {\n  value: field.value,\n  name: field.label,\n  type: field.type || field.label,\n  onChange: e => field.onChange(e.target.value),\n  placeholder: field.label\n}))), __jsx(Button, {\n  bg: buttonColor === 'blue' ? '#DDEBF7' : '#d4eee2',\n  color: buttonColor === 'blue' ? '#1070ca' : '#00783e',\n  _hover: buttonColor === 'blue' ? {\n    bg: '#c0d8ed'\n  } : {\n    bg: '#bfe3d2'\n  },\n  borderRadius: 3,\n  px: 3,\n  height: 8,\n  width: \"100%\",\n  disabled: buttonDisabled,\n  isLoading: loading,\n  onClick: onSubmit\n}, __jsx(Heading, {\n  fontSize: \"md\",\n  textTransform: \"uppercase\",\n  letterSpacing: \"wider\",\n  fontWeight: 700,\n  marginRight: 2\n}, buttonTitle), __jsx(Icon, {\n  size: 4,\n  name: \"arrow-forward\"\n})), __jsx(Box, {\n  marginTop: 15\n}, __jsx(ErrorMessage, {\n  error: error\n})), success && __jsx(Box, sucessCard, __jsx(Icon, {\n  icon: \"tick-circle\",\n  color: \"success\",\n  marginRight: 10\n}), __jsx(Text, {\n  color: \"#47B881\",\n  fontWeight: 500,\n  fontSize: \"14px\"\n}, \"Link sent. Please check your email.\"))), handleToggleClick && __jsx(Box, {\n  mt: 6\n}, __jsx(Text, {\n  width: \"100%\",\n  color: \"gray.500\",\n  my: 1\n}, bottomText), __jsx(Text, {\n  float: \"left\",\n  onClick: handleToggleClick,\n  color: buttonColor === 'blue' ? '#1070ca' : '#00783e',\n  paddingBottom: \"1px\",\n  borderBottom: `2px solid ${buttonColor === 'blue' ? '#1070ca' : '#00783e'}`,\n  cursor: \"pointer\",\n  className: \"hover\",\n  my: 0\n}, bottomLinkText)));\n\nexport default Userform;\nUserform.propTypes = {\n  title: PropTypes.element,\n  fields: PropTypes.array,\n  handleToggleClick: PropTypes.func,\n  links: PropTypes.element,\n  buttonTitle: PropTypes.string,\n  buttonColor: PropTypes.string,\n  bottomText: PropTypes.string,\n  bottomLinkText: PropTypes.string,\n  onSubmit: PropTypes.func,\n  buttonDisabled: PropTypes.bool,\n  error: PropTypes.object,\n  loading: PropTypes.string,\n  success: PropTypes.bool\n};","map":{"version":3,"sources":["/Users/junaid/openship2/components/user/Userform.js"],"names":["Box","Heading","Text","Input","InputGroup","InputLeftElement","Icon","Button","PropTypes","ErrorMessage","sucessCard","paddingX","paddingY","background","borderRadius","display","alignItems","Userform","title","fields","handleToggleClick","links","buttonTitle","buttonColor","bottomText","bottomLinkText","onSubmit","buttonDisabled","error","loading","success","map","field","icon","value","label","type","e","onChange","target","bg","propTypes","element","array","func","string","bool","object"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Heading,\n  Text,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Icon,\n  Button,\n} from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\nimport ErrorMessage from '../common/ErrorMessage';\n\nconst sucessCard = {\n  paddingX: 10,\n  paddingY: 5,\n  background: '#F1FAF5',\n  borderRadius: 3,\n  display: 'flex',\n  alignItems: 'center',\n};\n\nconst Userform = ({\n  title,\n  fields,\n  handleToggleClick,\n  links,\n  buttonTitle,\n  buttonColor,\n  bottomText,\n  bottomLinkText,\n  onSubmit,\n  buttonDisabled,\n  error,\n  loading,\n  success,\n}) => (\n  <>\n    <Box width={350} alignItems=\"center\">\n      <Box\n        marginBottom={2}\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Heading\n          fontSize=\"lg\"\n          fontWeight=\"500\"\n          marginRight=\"auto\"\n          color=\"#425A70\"\n        >\n          {title}\n        </Heading>\n        {links && links}\n      </Box>\n      {fields &&\n        fields.map(field => (\n          <InputGroup width=\"100%\" borderColor=\"gray.200\" mb={4}>\n            <InputLeftElement\n              children={<Icon name={field.icon} color=\"gray.300\" />}\n            />\n            <Input\n              value={field.value}\n              name={field.label}\n              type={field.type || field.label}\n              onChange={e => field.onChange(e.target.value)}\n              placeholder={field.label}\n            />\n          </InputGroup>\n        ))}\n\n      <Button\n        bg={buttonColor === 'blue' ? '#DDEBF7' : '#d4eee2'}\n        color={buttonColor === 'blue' ? '#1070ca' : '#00783e'}\n        _hover={buttonColor === 'blue' ? { bg: '#c0d8ed' } : { bg: '#bfe3d2' }}\n        borderRadius={3}\n        px={3}\n        height={8}\n        width=\"100%\"\n        disabled={buttonDisabled}\n        isLoading={loading}\n        onClick={onSubmit}\n      >\n        <Heading\n          fontSize=\"md\"\n          textTransform=\"uppercase\"\n          letterSpacing=\"wider\"\n          fontWeight={700}\n          marginRight={2}\n        >\n          {buttonTitle}\n        </Heading>\n        <Icon size={4} name=\"arrow-forward\" />\n      </Button>\n      <Box marginTop={15}>\n        <ErrorMessage error={error} />\n      </Box>\n      {success && (\n        <Box {...sucessCard}>\n          <Icon icon=\"tick-circle\" color=\"success\" marginRight={10} />\n          <Text color=\"#47B881\" fontWeight={500} fontSize=\"14px\">\n            Link sent. Please check your email.\n          </Text>\n        </Box>\n      )}\n    </Box>\n    {handleToggleClick && (\n      <Box mt={6}>\n        <Text width=\"100%\" color=\"gray.500\" my={1}>\n          {bottomText}\n        </Text>\n        <Text\n          float=\"left\"\n          onClick={handleToggleClick}\n          color={buttonColor === 'blue' ? '#1070ca' : '#00783e'}\n          paddingBottom=\"1px\"\n          borderBottom={`2px solid ${\n            buttonColor === 'blue' ? '#1070ca' : '#00783e'\n          }`}\n          cursor=\"pointer\"\n          className=\"hover\"\n          my={0}\n        >\n          {bottomLinkText}\n        </Text>\n      </Box>\n    )}\n  </>\n);\n\nexport default Userform;\n\nUserform.propTypes = {\n  title: PropTypes.element,\n  fields: PropTypes.array,\n  handleToggleClick: PropTypes.func,\n  links: PropTypes.element,\n  buttonTitle: PropTypes.string,\n  buttonColor: PropTypes.string,\n  bottomText: PropTypes.string,\n  bottomLinkText: PropTypes.string,\n  onSubmit: PropTypes.func,\n  buttonDisabled: PropTypes.bool,\n  error: PropTypes.object,\n  loading: PropTypes.string,\n  success: PropTypes.bool,\n};\n"]},"metadata":{},"sourceType":"module"}