{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Box, Heading, Text, Button, Icon } from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\nimport MPCart from '../../pending/Cart/MPCart';\nimport ZincCart from '../../pending/Cart/ZincCart';\nimport OrderLine from './OrderLine';\nimport { CHANNELS_QUERY, channelsQueryVars } from '../../layout/Page';\n\nconst priceString = (price, quantity) => {\n  const total = Math.round(price * quantity * 100).toString();\n  return `${total.substring(0, total.length - 2)}.${total.substring(total.length - 2)}`;\n};\n\nexport default function OrderListItem(props) {\n  const {\n    0: open,\n    1: setOpen\n  } = useState();\n  const {\n    data: {\n      channels\n    },\n    error,\n    loading\n  } = useQuery(CHANNELS_QUERY, {\n    variables: channelsQueryVars\n  });\n  useEffect(() => {\n    setOpen(props.open);\n  }, [props.open]);\n\n  async function onCheckAllChange(e, updateIndexFunc) {\n    updateIndexFunc(e ? props.index : null);\n  }\n\n  function handleToggleClick(e) {\n    e.stopPropagation();\n    setOpen(prevOpen => !prevOpen);\n  }\n\n  function parseMP(name, string, checkout) {\n    const parse = JSON.parse(string);\n    return parse.lineItems && __jsx(MPCart, {\n      cart: parse,\n      checkout: checkout,\n      cartName: name\n    });\n  }\n\n  function parseZinc(string, checkout) {\n    const parse = JSON.parse(string);\n    return parse.products && __jsx(ZincCart, {\n      cart: parse,\n      checkout: checkout\n    });\n  }\n\n  const {\n    id,\n    orderId,\n    orderName,\n    email,\n    first_name,\n    last_name,\n    streetAddress1,\n    streetAddress2,\n    city,\n    state,\n    zip,\n    shopName,\n    phone,\n    lineItems,\n    currency,\n    totalPrice,\n    subTotalPrice,\n    totalDiscount,\n    totalTax,\n    createAt,\n    mpCheckout,\n    mpCart,\n    zincCheckout,\n    zincCart,\n    customCheckout,\n    customCart,\n    note,\n    disabled,\n    buttons,\n    selectedOrderIndex,\n    updateIndex,\n    createCheckout\n  } = props;\n  return __jsx(Box, null, __jsx(Box, {\n    display: \"flex\",\n    paddingX: \"1em\",\n    paddingY: \".7em\",\n    onClick: !disabled ? () => onCheckAllChange(!selectedOrderIndex, updateIndex, // createCheckout,\n    mpCart) : undefined,\n    pointerEvents: !selectedOrderIndex || selectedOrderIndex === id ? null : 'none',\n    className: !selectedOrderIndex || selectedOrderIndex === id ? 'hover' : null,\n    cursor: !selectedOrderIndex || selectedOrderIndex === id ? 'pointer' : null\n  }, __jsx(Box, null, __jsx(Box, {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    mb: 1\n  }, __jsx(Heading, {\n    fontSize: \"sm\",\n    marginRight: 3,\n    color: \"text\"\n  }, __jsx(\"a\", {\n    href: `https://${shopName.split('.')[0]}.myshopify.com/admin/orders/${orderId}`,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, orderName)), __jsx(Heading, {\n    fontSize: \"xs\",\n    fontWeight: 500,\n    letterSpacing: \"wide\",\n    textTransform: \"uppercase\",\n    color: \"gray.500\",\n    mr: 3\n  }, shopName.split('.')[0]), __jsx(Heading, {\n    fontSize: \"xs\",\n    color: \"gray.500\"\n  }, Intl.DateTimeFormat('en-US').format(Date.parse(createAt)))), __jsx(Box, {\n    as: \"p\",\n    fontSize: \"sm\",\n    color: \"#425A70\",\n    lineHeight: \"short\"\n  }, first_name, \" \", last_name, __jsx(\"br\", null), streetAddress1, \" \", streetAddress2, __jsx(\"br\", null), city, ', ', state, \" \", zip)), __jsx(Box, {\n    display: \"flex\",\n    marginLeft: \"auto\",\n    justifyContent: \"center\" // alignItems=\"center\"\n\n  }, buttons, __jsx(Button, {\n    bg: open && '#EDF2F7',\n    onClick: handleToggleClick,\n    color: \"#66788a\",\n    \"aria-label\": \"show line-items\",\n    height: \"1.3rem\",\n    minWidth: \"1.3rem\",\n    px: 0,\n    ml: 1\n  }, __jsx(Icon, {\n    name: \"chevron-down\",\n    size: \"22px\"\n  })))), open && __jsx(React.Fragment, null, __jsx(Box, {\n    marginLeft: \"-3px\",\n    background: \"#F7F9FD\",\n    border: \"muted\",\n    paddingY: \".7em\",\n    paddingX: \"1em\"\n  }, __jsx(Box, {\n    marginBottom: 2\n  }, __jsx(Text, {\n    fontSize: \"sm\",\n    fontWeight: 500,\n    color: \"#084B8A\"\n  }, \"Line Items\")), lineItems.map(a => __jsx(OrderLine, {\n    key: a.id,\n    item: a.node ? a.node : a\n  }))), channels.filter(channel => channel.type === 'MARKETPLACE').length > 0 && mpCart && JSON.parse(mpCart).lineItems && JSON.parse(mpCart).lineItems.edges.length > 0 && __jsx(MPCart, {\n    cart: JSON.parse(mpCart),\n    cartName: \"Marketplace\"\n  }), channels.filter(channel => channel.type === 'SHOPIFY').length > 0 && customCart && JSON.parse(customCart).lineItems && JSON.parse(customCart).lineItems.edges.length > 0 && __jsx(MPCart, {\n    cart: JSON.parse(customCart),\n    cartName: \"BN\",\n    background: \"#F1FBFC\",\n    color: \"#007489\"\n  }), channels.filter(channel => channel.type === 'ZINC').length > 0 && zincCart && JSON.parse(zincCart).products && JSON.parse(zincCart).products.length > 0 && parseZinc(zincCart, zincCheckout), mpCheckout && __jsx(Box, {\n    marginLeft: \"-3px\",\n    background: \"#F1FAF5\",\n    border: \"muted\",\n    paddingY: \".7em\",\n    paddingX: \"1em\"\n  }, __jsx(Box, {\n    marginBottom: 10\n  }, __jsx(Text, {\n    size: 400,\n    fontWeight: 500,\n    color: \"#00783E\"\n  }, \"Marketplace Order\")), mpCheckout[0].marketLineItems.map(a => __jsx(Box, {\n    background: \"#fff\",\n    border: \"muted\",\n    marginBottom: 5\n  }, __jsx(Box, {\n    display: \"flex\",\n    alignItems: \"center\"\n  }, __jsx(Box, {\n    height: \"100%\",\n    background: \"white\",\n    borderRight: \"1px solid #e8e9ea\"\n  }, __jsx(Box, {\n    as: \"img\",\n    src: a.variantImg,\n    width: \"100px\"\n  })), __jsx(Box, {\n    padding: 5,\n    paddingLeft: 10\n  }, __jsx(Heading, {\n    size: 300\n  }, a.title), __jsx(Box, {\n    display: \"flex\"\n  }, a.quantity > 1 && __jsx(Box, null, __jsx(Text, {\n    size: 300,\n    color: \"muted\"\n  }, \"$\", a.variantPrice, \" x \", a.quantity)), __jsx(Heading, {\n    size: 300,\n    marginRight: 10,\n    color: \"green\"\n  }, \"$\", a.variantPrice && priceString(a.variantPrice, a.quantity))))))))));\n}\nOrderListItem.propTypes = {\n  id: PropTypes.string,\n  orderId: PropTypes.string,\n  orderName: PropTypes.string,\n  email: PropTypes.string,\n  first_name: PropTypes.string,\n  last_name: PropTypes.string,\n  streetAddress1: PropTypes.string,\n  streetAddress2: PropTypes.string,\n  city: PropTypes.string,\n  state: PropTypes.string,\n  zip: PropTypes.string,\n  shopName: PropTypes.string,\n  phone: PropTypes.string,\n  lineItems: PropTypes.object,\n  currency: PropTypes.string,\n  totalPrice: PropTypes.number,\n  subTotalPrice: PropTypes.number,\n  totalDiscount: PropTypes.number,\n  totalTax: PropTypes.number,\n  createAt: PropTypes.number,\n  mpCheckout: PropTypes.object,\n  mpCart: PropTypes.object,\n  note: PropTypes.object,\n  disabled: PropTypes.bool,\n  selectedOrderIndex: PropTypes.number,\n  selectedLineIndex: PropTypes.array,\n  open: PropTypes.bool,\n  updateIndex: PropTypes.func,\n  index: PropTypes.number,\n  createCheckout: PropTypes.func,\n  buttons: PropTypes.element\n};","map":{"version":3,"sources":["/Users/junaid/openship/components/common/orderListItem/OrderListItem.js"],"names":["React","useState","useEffect","useQuery","Box","Heading","Text","Button","Icon","PropTypes","MPCart","ZincCart","OrderLine","CHANNELS_QUERY","channelsQueryVars","priceString","price","quantity","total","Math","round","toString","substring","length","OrderListItem","props","open","setOpen","data","channels","error","loading","variables","onCheckAllChange","e","updateIndexFunc","index","handleToggleClick","stopPropagation","prevOpen","parseMP","name","string","checkout","parse","JSON","lineItems","parseZinc","products","id","orderId","orderName","email","first_name","last_name","streetAddress1","streetAddress2","city","state","zip","shopName","phone","currency","totalPrice","subTotalPrice","totalDiscount","totalTax","createAt","mpCheckout","mpCart","zincCheckout","zincCart","customCheckout","customCart","note","disabled","buttons","selectedOrderIndex","updateIndex","createCheckout","undefined","split","Intl","DateTimeFormat","format","Date","map","a","node","filter","channel","type","edges","marketLineItems","variantImg","title","variantPrice","propTypes","object","number","bool","selectedLineIndex","array","func","element"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqCC,IAArC,QAAiD,iBAAjD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,mBAAlD;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACvC,QAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,GAAGC,QAAR,GAAmB,GAA9B,EAAmCI,QAAnC,EAAd;AACA,SAAQ,GAAEH,KAAK,CAACI,SAAN,CAAgB,CAAhB,EAAmBJ,KAAK,CAACK,MAAN,GAAe,CAAlC,CAAqC,IAAGL,KAAK,CAACI,SAAN,CAChDJ,KAAK,CAACK,MAAN,GAAe,CADiC,CAEhD,EAFF;AAGD,CALD;;AAOA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkB1B,QAAQ,EAAhC;AAEA,QAAM;AACJ2B,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF,KADF;AAEJC,IAAAA,KAFI;AAGJC,IAAAA;AAHI,MAIF5B,QAAQ,CAACU,cAAD,EAAiB;AAC3BmB,IAAAA,SAAS,EAAElB;AADgB,GAAjB,CAJZ;AAQAZ,EAAAA,SAAS,CAAC,MAAM;AACdyB,IAAAA,OAAO,CAACF,KAAK,CAACC,IAAP,CAAP;AACD,GAFQ,EAEN,CAACD,KAAK,CAACC,IAAP,CAFM,CAAT;;AAIA,iBAAeO,gBAAf,CAAgCC,CAAhC,EAAmCC,eAAnC,EAAoD;AAClDA,IAAAA,eAAe,CAACD,CAAC,GAAGT,KAAK,CAACW,KAAT,GAAiB,IAAnB,CAAf;AACD;;AAED,WAASC,iBAAT,CAA2BH,CAA3B,EAA8B;AAC5BA,IAAAA,CAAC,CAACI,eAAF;AACAX,IAAAA,OAAO,CAACY,QAAQ,IAAI,CAACA,QAAd,CAAP;AACD;;AAED,WAASC,OAAT,CAAiBC,IAAjB,EAAuBC,MAAvB,EAA+BC,QAA/B,EAAyC;AACvC,UAAMC,KAAK,GAAGC,IAAI,CAACD,KAAL,CAAWF,MAAX,CAAd;AACA,WACEE,KAAK,CAACE,SAAN,IACE,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAEF,KAAd;AAAqB,MAAA,QAAQ,EAAED,QAA/B;AAAyC,MAAA,QAAQ,EAAEF;AAAnD,MAFJ;AAKD;;AACD,WAASM,SAAT,CAAmBL,MAAnB,EAA2BC,QAA3B,EAAqC;AACnC,UAAMC,KAAK,GAAGC,IAAI,CAACD,KAAL,CAAWF,MAAX,CAAd;AACA,WAAOE,KAAK,CAACI,QAAN,IAAkB,MAAC,QAAD;AAAU,MAAA,IAAI,EAAEJ,KAAhB;AAAuB,MAAA,QAAQ,EAAED;AAAjC,MAAzB;AACD;;AAED,QAAM;AACJM,IAAAA,EADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA,UALI;AAMJC,IAAAA,SANI;AAOJC,IAAAA,cAPI;AAQJC,IAAAA,cARI;AASJC,IAAAA,IATI;AAUJC,IAAAA,KAVI;AAWJC,IAAAA,GAXI;AAYJC,IAAAA,QAZI;AAaJC,IAAAA,KAbI;AAcJf,IAAAA,SAdI;AAeJgB,IAAAA,QAfI;AAgBJC,IAAAA,UAhBI;AAiBJC,IAAAA,aAjBI;AAkBJC,IAAAA,aAlBI;AAmBJC,IAAAA,QAnBI;AAoBJC,IAAAA,QApBI;AAqBJC,IAAAA,UArBI;AAsBJC,IAAAA,MAtBI;AAuBJC,IAAAA,YAvBI;AAwBJC,IAAAA,QAxBI;AAyBJC,IAAAA,cAzBI;AA0BJC,IAAAA,UA1BI;AA2BJC,IAAAA,IA3BI;AA4BJC,IAAAA,QA5BI;AA6BJC,IAAAA,OA7BI;AA8BJC,IAAAA,kBA9BI;AA+BJC,IAAAA,WA/BI;AAgCJC,IAAAA;AAhCI,MAiCFtD,KAjCJ;AAkCA,SACE,MAAC,GAAD,QACE,MAAC,GAAD;AACE,IAAA,OAAO,EAAC,MADV;AAEE,IAAA,QAAQ,EAAC,KAFX;AAGE,IAAA,QAAQ,EAAC,MAHX;AAIE,IAAA,OAAO,EACL,CAACkD,QAAD,GACI,MACE1C,gBAAgB,CACd,CAAC4C,kBADa,EAEdC,WAFc,EAGd;AACAT,IAAAA,MAJc,CAFtB,GAQIW,SAbR;AAeE,IAAA,aAAa,EACX,CAACH,kBAAD,IAAuBA,kBAAkB,KAAK5B,EAA9C,GAAmD,IAAnD,GAA0D,MAhB9D;AAkBE,IAAA,SAAS,EACP,CAAC4B,kBAAD,IAAuBA,kBAAkB,KAAK5B,EAA9C,GAAmD,OAAnD,GAA6D,IAnBjE;AAqBE,IAAA,MAAM,EACJ,CAAC4B,kBAAD,IAAuBA,kBAAkB,KAAK5B,EAA9C,GAAmD,SAAnD,GAA+D;AAtBnE,KAyBE,MAAC,GAAD,QACE,MAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,QAAQ,EAAC,MAA7B;AAAoC,IAAA,UAAU,EAAC,QAA/C;AAAwD,IAAA,EAAE,EAAE;AAA5D,KACE,MAAC,OAAD;AAAS,IAAA,QAAQ,EAAC,IAAlB;AAAuB,IAAA,WAAW,EAAE,CAApC;AAAuC,IAAA,KAAK,EAAC;AAA7C,KACE;AACE,IAAA,IAAI,EAAG,WACLW,QAAQ,CAACqB,KAAT,CAAe,GAAf,EAAoB,CAApB,CACD,+BAA8B/B,OAAQ,EAHzC;AAIE,IAAA,MAAM,EAAC,QAJT;AAKE,IAAA,GAAG,EAAC;AALN,KAOGC,SAPH,CADF,CADF,EAYE,MAAC,OAAD;AACE,IAAA,QAAQ,EAAC,IADX;AAEE,IAAA,UAAU,EAAE,GAFd;AAGE,IAAA,aAAa,EAAC,MAHhB;AAIE,IAAA,aAAa,EAAC,WAJhB;AAKE,IAAA,KAAK,EAAC,UALR;AAME,IAAA,EAAE,EAAE;AANN,KAQGS,QAAQ,CAACqB,KAAT,CAAe,GAAf,EAAoB,CAApB,CARH,CAZF,EAuBE,MAAC,OAAD;AAAS,IAAA,QAAQ,EAAC,IAAlB;AAAuB,IAAA,KAAK,EAAC;AAA7B,KACGC,IAAI,CAACC,cAAL,CAAoB,OAApB,EAA6BC,MAA7B,CAAoCC,IAAI,CAACzC,KAAL,CAAWuB,QAAX,CAApC,CADH,CAvBF,CADF,EA4BE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAY,IAAA,QAAQ,EAAC,IAArB;AAA0B,IAAA,KAAK,EAAC,SAAhC;AAA0C,IAAA,UAAU,EAAC;AAArD,KACGd,UADH,OACgBC,SADhB,EAEE,iBAFF,EAGGC,cAHH,OAGoBC,cAHpB,EAIE,iBAJF,EAKGC,IALH,EAMG,IANH,EAOGC,KAPH,OAOWC,GAPX,CA5BF,CAzBF,EA+DE,MAAC,GAAD;AACE,IAAA,OAAO,EAAC,MADV;AAEE,IAAA,UAAU,EAAC,MAFb;AAGE,IAAA,cAAc,EAAC,QAHjB,CAIE;;AAJF,KAMGiB,OANH,EAQE,MAAC,MAAD;AACE,IAAA,EAAE,EAAElD,IAAI,IAAI,SADd;AAEE,IAAA,OAAO,EAAEW,iBAFX;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,kBAAW,iBAJb;AAKE,IAAA,MAAM,EAAC,QALT;AAME,IAAA,QAAQ,EAAC,QANX;AAOE,IAAA,EAAE,EAAE,CAPN;AAQE,IAAA,EAAE,EAAE;AARN,KAUE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,cAAX;AAA0B,IAAA,IAAI,EAAC;AAA/B,IAVF,CARF,CA/DF,CADF,EAsFGX,IAAI,IACH,4BACE,MAAC,GAAD;AACE,IAAA,UAAU,EAAC,MADb;AAEE,IAAA,UAAU,EAAC,SAFb;AAGE,IAAA,MAAM,EAAC,OAHT;AAIE,IAAA,QAAQ,EAAC,MAJX;AAKE,IAAA,QAAQ,EAAC;AALX,KAOE,MAAC,GAAD;AAAK,IAAA,YAAY,EAAE;AAAnB,KACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,IAAf;AAAoB,IAAA,UAAU,EAAE,GAAhC;AAAqC,IAAA,KAAK,EAAC;AAA3C,kBADF,CAPF,EAYGoB,SAAS,CAACwC,GAAV,CAAcC,CAAC,IACd,MAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,CAAC,CAACtC,EAAlB;AAAsB,IAAA,IAAI,EAAEsC,CAAC,CAACC,IAAF,GAASD,CAAC,CAACC,IAAX,GAAkBD;AAA9C,IADD,CAZH,CADF,EAkBG1D,QAAQ,CAAC4D,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACC,IAAR,KAAiB,aAA5C,EAA2DpE,MAA3D,GACC,CADD,IAEC8C,MAFD,IAGCxB,IAAI,CAACD,KAAL,CAAWyB,MAAX,EAAmBvB,SAHpB,IAICD,IAAI,CAACD,KAAL,CAAWyB,MAAX,EAAmBvB,SAAnB,CAA6B8C,KAA7B,CAAmCrE,MAAnC,GAA4C,CAJ7C,IAKG,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAEsB,IAAI,CAACD,KAAL,CAAWyB,MAAX,CAAd;AAAkC,IAAA,QAAQ,EAAC;AAA3C,IAvBN,EAyBGxC,QAAQ,CAAC4D,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACC,IAAR,KAAiB,SAA5C,EAAuDpE,MAAvD,GAAgE,CAAhE,IACCkD,UADD,IAEC5B,IAAI,CAACD,KAAL,CAAW6B,UAAX,EAAuB3B,SAFxB,IAGCD,IAAI,CAACD,KAAL,CAAW6B,UAAX,EAAuB3B,SAAvB,CAAiC8C,KAAjC,CAAuCrE,MAAvC,GAAgD,CAHjD,IAIG,MAAC,MAAD;AACE,IAAA,IAAI,EAAEsB,IAAI,CAACD,KAAL,CAAW6B,UAAX,CADR;AAEE,IAAA,QAAQ,EAAC,IAFX;AAGE,IAAA,UAAU,EAAC,SAHb;AAIE,IAAA,KAAK,EAAC;AAJR,IA7BN,EAoCG5C,QAAQ,CAAC4D,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACC,IAAR,KAAiB,MAA5C,EAAoDpE,MAApD,GAA6D,CAA7D,IACCgD,QADD,IAEC1B,IAAI,CAACD,KAAL,CAAW2B,QAAX,EAAqBvB,QAFtB,IAGCH,IAAI,CAACD,KAAL,CAAW2B,QAAX,EAAqBvB,QAArB,CAA8BzB,MAA9B,GAAuC,CAHxC,IAICwB,SAAS,CAACwB,QAAD,EAAWD,YAAX,CAxCb,EAyCGF,UAAU,IACT,MAAC,GAAD;AACE,IAAA,UAAU,EAAC,MADb;AAEE,IAAA,UAAU,EAAC,SAFb;AAGE,IAAA,MAAM,EAAC,OAHT;AAIE,IAAA,QAAQ,EAAC,MAJX;AAKE,IAAA,QAAQ,EAAC;AALX,KAOE,MAAC,GAAD;AAAK,IAAA,YAAY,EAAE;AAAnB,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE,GAAZ;AAAiB,IAAA,UAAU,EAAE,GAA7B;AAAkC,IAAA,KAAK,EAAC;AAAxC,yBADF,CAPF,EAYGA,UAAU,CAAC,CAAD,CAAV,CAAcyB,eAAd,CAA8BP,GAA9B,CAAkCC,CAAC,IAClC,MAAC,GAAD;AAAK,IAAA,UAAU,EAAC,MAAhB;AAAuB,IAAA,MAAM,EAAC,OAA9B;AAAsC,IAAA,YAAY,EAAE;AAApD,KACE,MAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,UAAU,EAAC;AAA/B,KACE,MAAC,GAAD;AACE,IAAA,MAAM,EAAC,MADT;AAEE,IAAA,UAAU,EAAC,OAFb;AAGE,IAAA,WAAW,EAAC;AAHd,KAKE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,KAAR;AAAc,IAAA,GAAG,EAAEA,CAAC,CAACO,UAArB;AAAiC,IAAA,KAAK,EAAC;AAAvC,IALF,CADF,EAQE,MAAC,GAAD;AAAK,IAAA,OAAO,EAAE,CAAd;AAAiB,IAAA,WAAW,EAAE;AAA9B,KACE,MAAC,OAAD;AAAS,IAAA,IAAI,EAAE;AAAf,KAAqBP,CAAC,CAACQ,KAAvB,CADF,EAEE,MAAC,GAAD;AAAK,IAAA,OAAO,EAAC;AAAb,KACGR,CAAC,CAACtE,QAAF,GAAa,CAAb,IACC,MAAC,GAAD,QACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE,GAAZ;AAAiB,IAAA,KAAK,EAAC;AAAvB,UACIsE,CAAC,CAACS,YADN,SACuBT,CAAC,CAACtE,QADzB,CADF,CAFJ,EAQE,MAAC,OAAD;AAAS,IAAA,IAAI,EAAE,GAAf;AAAoB,IAAA,WAAW,EAAE,EAAjC;AAAqC,IAAA,KAAK,EAAC;AAA3C,UAEGsE,CAAC,CAACS,YAAF,IACCjF,WAAW,CAACwE,CAAC,CAACS,YAAH,EAAiBT,CAAC,CAACtE,QAAnB,CAHf,CARF,CAFF,CARF,CADF,CADD,CAZH,CA1CJ,CAvFJ,CADF;AAkLD;AAEDO,aAAa,CAACyE,SAAd,GAA0B;AACxBhD,EAAAA,EAAE,EAAExC,SAAS,CAACiC,MADU;AAExBQ,EAAAA,OAAO,EAAEzC,SAAS,CAACiC,MAFK;AAGxBS,EAAAA,SAAS,EAAE1C,SAAS,CAACiC,MAHG;AAIxBU,EAAAA,KAAK,EAAE3C,SAAS,CAACiC,MAJO;AAKxBW,EAAAA,UAAU,EAAE5C,SAAS,CAACiC,MALE;AAMxBY,EAAAA,SAAS,EAAE7C,SAAS,CAACiC,MANG;AAOxBa,EAAAA,cAAc,EAAE9C,SAAS,CAACiC,MAPF;AAQxBc,EAAAA,cAAc,EAAE/C,SAAS,CAACiC,MARF;AASxBe,EAAAA,IAAI,EAAEhD,SAAS,CAACiC,MATQ;AAUxBgB,EAAAA,KAAK,EAAEjD,SAAS,CAACiC,MAVO;AAWxBiB,EAAAA,GAAG,EAAElD,SAAS,CAACiC,MAXS;AAYxBkB,EAAAA,QAAQ,EAAEnD,SAAS,CAACiC,MAZI;AAaxBmB,EAAAA,KAAK,EAAEpD,SAAS,CAACiC,MAbO;AAcxBI,EAAAA,SAAS,EAAErC,SAAS,CAACyF,MAdG;AAexBpC,EAAAA,QAAQ,EAAErD,SAAS,CAACiC,MAfI;AAgBxBqB,EAAAA,UAAU,EAAEtD,SAAS,CAAC0F,MAhBE;AAiBxBnC,EAAAA,aAAa,EAAEvD,SAAS,CAAC0F,MAjBD;AAkBxBlC,EAAAA,aAAa,EAAExD,SAAS,CAAC0F,MAlBD;AAmBxBjC,EAAAA,QAAQ,EAAEzD,SAAS,CAAC0F,MAnBI;AAoBxBhC,EAAAA,QAAQ,EAAE1D,SAAS,CAAC0F,MApBI;AAqBxB/B,EAAAA,UAAU,EAAE3D,SAAS,CAACyF,MArBE;AAsBxB7B,EAAAA,MAAM,EAAE5D,SAAS,CAACyF,MAtBM;AAuBxBxB,EAAAA,IAAI,EAAEjE,SAAS,CAACyF,MAvBQ;AAwBxBvB,EAAAA,QAAQ,EAAElE,SAAS,CAAC2F,IAxBI;AAyBxBvB,EAAAA,kBAAkB,EAAEpE,SAAS,CAAC0F,MAzBN;AA0BxBE,EAAAA,iBAAiB,EAAE5F,SAAS,CAAC6F,KA1BL;AA2BxB5E,EAAAA,IAAI,EAAEjB,SAAS,CAAC2F,IA3BQ;AA4BxBtB,EAAAA,WAAW,EAAErE,SAAS,CAAC8F,IA5BC;AA6BxBnE,EAAAA,KAAK,EAAE3B,SAAS,CAAC0F,MA7BO;AA8BxBpB,EAAAA,cAAc,EAAEtE,SAAS,CAAC8F,IA9BF;AA+BxB3B,EAAAA,OAAO,EAAEnE,SAAS,CAAC+F;AA/BK,CAA1B","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Box, Heading, Text, Button, Icon } from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\nimport MPCart from '../../pending/Cart/MPCart';\nimport ZincCart from '../../pending/Cart/ZincCart';\nimport OrderLine from './OrderLine';\nimport { CHANNELS_QUERY, channelsQueryVars } from '../../layout/Page';\n\nconst priceString = (price, quantity) => {\n  const total = Math.round(price * quantity * 100).toString();\n  return `${total.substring(0, total.length - 2)}.${total.substring(\n    total.length - 2\n  )}`;\n};\n\nexport default function OrderListItem(props) {\n  const [open, setOpen] = useState();\n\n  const {\n    data: { channels },\n    error,\n    loading,\n  } = useQuery(CHANNELS_QUERY, {\n    variables: channelsQueryVars,\n  });\n\n  useEffect(() => {\n    setOpen(props.open);\n  }, [props.open]);\n\n  async function onCheckAllChange(e, updateIndexFunc) {\n    updateIndexFunc(e ? props.index : null);\n  }\n\n  function handleToggleClick(e) {\n    e.stopPropagation();\n    setOpen(prevOpen => !prevOpen);\n  }\n\n  function parseMP(name, string, checkout) {\n    const parse = JSON.parse(string);\n    return (\n      parse.lineItems && (\n        <MPCart cart={parse} checkout={checkout} cartName={name} />\n      )\n    );\n  }\n  function parseZinc(string, checkout) {\n    const parse = JSON.parse(string);\n    return parse.products && <ZincCart cart={parse} checkout={checkout} />;\n  }\n\n  const {\n    id,\n    orderId,\n    orderName,\n    email,\n    first_name,\n    last_name,\n    streetAddress1,\n    streetAddress2,\n    city,\n    state,\n    zip,\n    shopName,\n    phone,\n    lineItems,\n    currency,\n    totalPrice,\n    subTotalPrice,\n    totalDiscount,\n    totalTax,\n    createAt,\n    mpCheckout,\n    mpCart,\n    zincCheckout,\n    zincCart,\n    customCheckout,\n    customCart,\n    note,\n    disabled,\n    buttons,\n    selectedOrderIndex,\n    updateIndex,\n    createCheckout,\n  } = props;\n  return (\n    <Box>\n      <Box\n        display=\"flex\"\n        paddingX=\"1em\"\n        paddingY=\".7em\"\n        onClick={\n          !disabled\n            ? () =>\n                onCheckAllChange(\n                  !selectedOrderIndex,\n                  updateIndex,\n                  // createCheckout,\n                  mpCart\n                )\n            : undefined\n        }\n        pointerEvents={\n          !selectedOrderIndex || selectedOrderIndex === id ? null : 'none'\n        }\n        className={\n          !selectedOrderIndex || selectedOrderIndex === id ? 'hover' : null\n        }\n        cursor={\n          !selectedOrderIndex || selectedOrderIndex === id ? 'pointer' : null\n        }\n      >\n        <Box>\n          <Box display=\"flex\" flexWrap=\"wrap\" alignItems=\"center\" mb={1}>\n            <Heading fontSize=\"sm\" marginRight={3} color=\"text\">\n              <a\n                href={`https://${\n                  shopName.split('.')[0]\n                }.myshopify.com/admin/orders/${orderId}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {orderName}\n              </a>\n            </Heading>\n            <Heading\n              fontSize=\"xs\"\n              fontWeight={500}\n              letterSpacing=\"wide\"\n              textTransform=\"uppercase\"\n              color=\"gray.500\"\n              mr={3}\n            >\n              {shopName.split('.')[0]}\n            </Heading>\n\n            <Heading fontSize=\"xs\" color=\"gray.500\">\n              {Intl.DateTimeFormat('en-US').format(Date.parse(createAt))}\n            </Heading>\n          </Box>\n          <Box as=\"p\" fontSize=\"sm\" color=\"#425A70\" lineHeight=\"short\">\n            {first_name} {last_name}\n            <br />\n            {streetAddress1} {streetAddress2}\n            <br />\n            {city}\n            {', '}\n            {state} {zip}\n          </Box>\n        </Box>\n        <Box\n          display=\"flex\"\n          marginLeft=\"auto\"\n          justifyContent=\"center\"\n          // alignItems=\"center\"\n        >\n          {buttons}\n\n          <Button\n            bg={open && '#EDF2F7'}\n            onClick={handleToggleClick}\n            color=\"#66788a\"\n            aria-label=\"show line-items\"\n            height=\"1.3rem\"\n            minWidth=\"1.3rem\"\n            px={0}\n            ml={1}\n          >\n            <Icon name=\"chevron-down\" size=\"22px\" />\n          </Button>\n        </Box>\n      </Box>\n      {open && (\n        <>\n          <Box\n            marginLeft=\"-3px\"\n            background=\"#F7F9FD\"\n            border=\"muted\"\n            paddingY=\".7em\"\n            paddingX=\"1em\"\n          >\n            <Box marginBottom={2}>\n              <Text fontSize=\"sm\" fontWeight={500} color=\"#084B8A\">\n                Line Items\n              </Text>\n            </Box>\n            {lineItems.map(a => (\n              <OrderLine key={a.id} item={a.node ? a.node : a} />\n            ))}\n          </Box>\n\n          {channels.filter(channel => channel.type === 'MARKETPLACE').length >\n            0 &&\n            mpCart &&\n            JSON.parse(mpCart).lineItems &&\n            JSON.parse(mpCart).lineItems.edges.length > 0 && (\n              <MPCart cart={JSON.parse(mpCart)} cartName=\"Marketplace\" />\n            )}\n          {channels.filter(channel => channel.type === 'SHOPIFY').length > 0 &&\n            customCart &&\n            JSON.parse(customCart).lineItems &&\n            JSON.parse(customCart).lineItems.edges.length > 0 && (\n              <MPCart\n                cart={JSON.parse(customCart)}\n                cartName=\"BN\"\n                background=\"#F1FBFC\"\n                color=\"#007489\"\n              />\n            )}\n          {channels.filter(channel => channel.type === 'ZINC').length > 0 &&\n            zincCart &&\n            JSON.parse(zincCart).products &&\n            JSON.parse(zincCart).products.length > 0 &&\n            parseZinc(zincCart, zincCheckout)}\n          {mpCheckout && (\n            <Box\n              marginLeft=\"-3px\"\n              background=\"#F1FAF5\"\n              border=\"muted\"\n              paddingY=\".7em\"\n              paddingX=\"1em\"\n            >\n              <Box marginBottom={10}>\n                <Text size={400} fontWeight={500} color=\"#00783E\">\n                  Marketplace Order\n                </Text>\n              </Box>\n              {mpCheckout[0].marketLineItems.map(a => (\n                <Box background=\"#fff\" border=\"muted\" marginBottom={5}>\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <Box\n                      height=\"100%\"\n                      background=\"white\"\n                      borderRight=\"1px solid #e8e9ea\"\n                    >\n                      <Box as=\"img\" src={a.variantImg} width=\"100px\" />\n                    </Box>\n                    <Box padding={5} paddingLeft={10}>\n                      <Heading size={300}>{a.title}</Heading>\n                      <Box display=\"flex\">\n                        {a.quantity > 1 && (\n                          <Box>\n                            <Text size={300} color=\"muted\">\n                              ${a.variantPrice} x {a.quantity}\n                            </Text>\n                          </Box>\n                        )}\n                        <Heading size={300} marginRight={10} color=\"green\">\n                          $\n                          {a.variantPrice &&\n                            priceString(a.variantPrice, a.quantity)}\n                        </Heading>\n                      </Box>\n                    </Box>\n                  </Box>\n                </Box>\n              ))}\n            </Box>\n          )}\n        </>\n      )}\n    </Box>\n  );\n}\n\nOrderListItem.propTypes = {\n  id: PropTypes.string,\n  orderId: PropTypes.string,\n  orderName: PropTypes.string,\n  email: PropTypes.string,\n  first_name: PropTypes.string,\n  last_name: PropTypes.string,\n  streetAddress1: PropTypes.string,\n  streetAddress2: PropTypes.string,\n  city: PropTypes.string,\n  state: PropTypes.string,\n  zip: PropTypes.string,\n  shopName: PropTypes.string,\n  phone: PropTypes.string,\n  lineItems: PropTypes.object,\n  currency: PropTypes.string,\n  totalPrice: PropTypes.number,\n  subTotalPrice: PropTypes.number,\n  totalDiscount: PropTypes.number,\n  totalTax: PropTypes.number,\n  createAt: PropTypes.number,\n  mpCheckout: PropTypes.object,\n  mpCart: PropTypes.object,\n  note: PropTypes.object,\n  disabled: PropTypes.bool,\n  selectedOrderIndex: PropTypes.number,\n  selectedLineIndex: PropTypes.array,\n  open: PropTypes.bool,\n  updateIndex: PropTypes.func,\n  index: PropTypes.number,\n  createCheckout: PropTypes.func,\n  buttons: PropTypes.element,\n};\n"]},"metadata":{},"sourceType":"module"}