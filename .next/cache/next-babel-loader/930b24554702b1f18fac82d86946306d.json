{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { Box, Heading, Text, Code, Switch } from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\nimport { front, prodFront, prodEndpoint } from '../../config';\n\nfunction getWebhooks(domain, accessToken, setResults) {\n  const url = `${true ? front : prodFront}/${accessToken}/graphql`;\n  fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: `\n    {\n      webhookSubscriptions(first :5\n        callbackUrl: \"${prodEndpoint}order?spdn=${domain}\"\n        ) {\n          edges{\n            node{\n              id\n              callbackUrl\n              createdAt\n              topic\n              includeFields\n            }\n          }\n        }\n      }\n    `\n    })\n  }).then(res => res.json()).then(res => {\n    if (res.data) {\n      const results = res.data.webhookSubscriptions.edges;\n      setResults(results);\n    }\n  });\n}\n\nfunction createWebhook(domain, accessToken, setResults) {\n  const url = `${true ? front : prodFront}/${accessToken}/graphql`;\n  fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: `\n      mutation webhookSubscriptionCreate(\n        $topic: WebhookSubscriptionTopic!\n        $webhookSubscription: WebhookSubscriptionInput!\n      ) {\n        webhookSubscriptionCreate(\n          topic: $topic\n          webhookSubscription: $webhookSubscription\n        ) {\n          userErrors {\n            field\n            message\n          }\n          webhookSubscription {\n            id\n          }\n        }\n      }\n    `,\n      variables: {\n        topic: 'ORDERS_CREATE',\n        webhookSubscription: {\n          callbackUrl: `${prodEndpoint}order?spdn=${domain}`,\n          format: 'JSON'\n        }\n      }\n    })\n  }).then(res => res.json()).then(res => {\n    const webhook = res.data.webhookSubscriptionCreate;\n    getWebhooks(domain, accessToken, setResults);\n  });\n}\n\nfunction deleteWebhook(id, domain, accessToken, setResults) {\n  const url = `${true ? front : prodFront}/${accessToken}/graphql`;\n  fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: `\n      mutation   {\n        webhookSubscriptionDelete(\n          id: \"${id}\"\n        ) {\n          deletedWebhookSubscriptionId\n        }\n      }\n    `\n    })\n  }).then(res => res.json()).then(res => {\n    getWebhooks(domain, accessToken, setResults);\n  });\n}\n\nconst WebhookSwitch = ({\n  domain,\n  accessToken\n}) => {\n  const {\n    0: results,\n    1: setResults\n  } = useState([]);\n  useEffect(() => {\n    getWebhooks(domain, accessToken, setResults);\n  }, [domain, accessToken]);\n\n  function handleSwitch(e) {\n    if (e.target.checked) {\n      createWebhook(domain, accessToken, setResults);\n    } else {\n      deleteWebhook(results[0].node.id, domain, accessToken, setResults);\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    paddingY: 2,\n    paddingX: 4,\n    background: \"#f5f5f5\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\"\n  }, __jsx(Box, {\n    paddingRight: 15\n  }, __jsx(Heading, {\n    fontSize: \"sm\",\n    fontWeight: 500,\n    mb: 1,\n    color: \"gray.800\"\n  }, \"Push orders to Openship\"), __jsx(Text, {\n    fontSize: \"xs\",\n    color: \"gray.700\"\n  }, \"Orders will be pushed to the pending tab to be fulfilled\")), __jsx(Switch, {\n    marginLeft: \"auto\",\n    isChecked: results.length > 0,\n    onChange: e => handleSwitch(e)\n  })), results.map(a => __jsx(Box, {\n    paddingY: 2,\n    paddingX: 3\n  }, __jsx(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: 2\n  }, __jsx(Text, {\n    fontSize: \"sm\",\n    fontWeight: 500,\n    align: \"right\",\n    marginRight: 2,\n    flexBasis: \"100px\",\n    textAlign: \"right\",\n    color: \"text\"\n  }, \"Endpoint:\"), __jsx(Code, {\n    variantColor: \"blue\",\n    fontSize: \"xs\",\n    wordWrap: \"break-word\"\n  }, \"Openship\")), __jsx(Box, {\n    display: \"flex\",\n    alignItems: \"center\"\n  }, __jsx(Text, {\n    fontSize: \"sm\",\n    fontWeight: 500,\n    align: \"right\",\n    marginRight: 2,\n    flexBasis: \"100px\",\n    textAlign: \"right\",\n    color: \"text\"\n  }, \"Topic:\"), __jsx(Code, {\n    variantColor: \"blue\",\n    fontSize: \"xs\"\n  }, a.node.topic)))));\n};\n\nexport default WebhookSwitch;\nWebhookSwitch.propTypes = {\n  domain: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/Users/junaid/openship/components/shops/WebhookSwitch.js"],"names":["useState","useEffect","fetch","Box","Heading","Text","Code","Switch","PropTypes","front","prodFront","prodEndpoint","getWebhooks","domain","accessToken","setResults","url","method","headers","body","JSON","stringify","query","then","res","json","data","results","webhookSubscriptions","edges","createWebhook","variables","topic","webhookSubscription","callbackUrl","format","webhook","webhookSubscriptionCreate","deleteWebhook","id","WebhookSwitch","handleSwitch","e","target","checked","node","length","map","a","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { Box, Heading, Text, Code, Switch } from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\nimport { front, prodFront, prodEndpoint } from '../../config';\n\nfunction getWebhooks(domain, accessToken, setResults) {\n  const url = `${\n    process.env.NODE_ENV === 'development' ? front : prodFront\n  }/${accessToken}/graphql`;\n\n  fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      query: `\n    {\n      webhookSubscriptions(first :5\n        callbackUrl: \"${prodEndpoint}order?spdn=${domain}\"\n        ) {\n          edges{\n            node{\n              id\n              callbackUrl\n              createdAt\n              topic\n              includeFields\n            }\n          }\n        }\n      }\n    `,\n    }),\n  })\n    .then(res => res.json())\n    .then(res => {\n      if (res.data) {\n        const results = res.data.webhookSubscriptions.edges;\n        setResults(results);\n      }\n    });\n}\n\nfunction createWebhook(domain, accessToken, setResults) {\n  const url = `${\n    process.env.NODE_ENV === 'development' ? front : prodFront\n  }/${accessToken}/graphql`;\n  fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      query: `\n      mutation webhookSubscriptionCreate(\n        $topic: WebhookSubscriptionTopic!\n        $webhookSubscription: WebhookSubscriptionInput!\n      ) {\n        webhookSubscriptionCreate(\n          topic: $topic\n          webhookSubscription: $webhookSubscription\n        ) {\n          userErrors {\n            field\n            message\n          }\n          webhookSubscription {\n            id\n          }\n        }\n      }\n    `,\n      variables: {\n        topic: 'ORDERS_CREATE',\n        webhookSubscription: {\n          callbackUrl: `${prodEndpoint}order?spdn=${domain}`,\n          format: 'JSON',\n        },\n      },\n    }),\n  })\n    .then(res => res.json())\n    .then(res => {\n      const webhook = res.data.webhookSubscriptionCreate;\n      getWebhooks(domain, accessToken, setResults);\n    });\n}\n\nfunction deleteWebhook(id, domain, accessToken, setResults) {\n  const url = `${\n    process.env.NODE_ENV === 'development' ? front : prodFront\n  }/${accessToken}/graphql`;\n  fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      query: `\n      mutation   {\n        webhookSubscriptionDelete(\n          id: \"${id}\"\n        ) {\n          deletedWebhookSubscriptionId\n        }\n      }\n    `,\n    }),\n  })\n    .then(res => res.json())\n    .then(res => {\n      getWebhooks(domain, accessToken, setResults);\n    });\n}\n\nconst WebhookSwitch = ({ domain, accessToken }) => {\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    getWebhooks(domain, accessToken, setResults);\n  }, [domain, accessToken]);\n\n  function handleSwitch(e) {\n    if (e.target.checked) {\n      createWebhook(domain, accessToken, setResults);\n    } else {\n      deleteWebhook(results[0].node.id, domain, accessToken, setResults);\n    }\n  }\n\n  return (\n    <>\n      <Box\n        paddingY={2}\n        paddingX={4}\n        background=\"#f5f5f5\"\n        display=\"flex\"\n        alignItems=\"center\"\n        width=\"100%\"\n      >\n        <Box paddingRight={15}>\n          <Heading fontSize=\"sm\" fontWeight={500} mb={1} color=\"gray.800\">\n            Push orders to Openship\n          </Heading>\n          <Text fontSize=\"xs\" color=\"gray.700\">\n            Orders will be pushed to the pending tab to be fulfilled\n          </Text>\n        </Box>\n        <Switch\n          marginLeft=\"auto\"\n          isChecked={results.length > 0}\n          onChange={e => handleSwitch(e)}\n        />\n      </Box>\n      {results.map(a => (\n        <Box paddingY={2} paddingX={3}>\n          <Box display=\"flex\" alignItems=\"center\" marginBottom={2}>\n            <Text\n              fontSize=\"sm\"\n              fontWeight={500}\n              align=\"right\"\n              marginRight={2}\n              flexBasis=\"100px\"\n              textAlign=\"right\"\n              color=\"text\"\n            >\n              Endpoint:\n            </Text>\n            <Code variantColor=\"blue\" fontSize=\"xs\" wordWrap=\"break-word\">\n              Openship\n            </Code>\n          </Box>\n          <Box display=\"flex\" alignItems=\"center\">\n            <Text\n              fontSize=\"sm\"\n              fontWeight={500}\n              align=\"right\"\n              marginRight={2}\n              flexBasis=\"100px\"\n              textAlign=\"right\"\n              color=\"text\"\n            >\n              Topic:\n            </Text>\n            <Code variantColor=\"blue\" fontSize=\"xs\">\n              {a.node.topic}\n            </Code>\n          </Box>\n        </Box>\n      ))}\n    </>\n  );\n};\n\nexport default WebhookSwitch;\n\nWebhookSwitch.propTypes = {\n  domain: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}