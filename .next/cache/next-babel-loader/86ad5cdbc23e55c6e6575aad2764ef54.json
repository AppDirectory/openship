{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport App from 'next/app';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { ThemeProvider, CSSReset } from '@chakra-ui/core';\nimport Page from '../components/layout/Page';\nimport withData from '../lib/withData';\nimport PleaseSignIn from '../components/user/PleaseSignIn';\nimport theme from '../theme';\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          apollo = _this$props.apollo,\n          pageProps = _this$props.pageProps,\n          path = _this$props.path;\n\n      function pathCheck(p) {\n        if (p.startsWith('/reset')) {\n          return __jsx(Component, pageProps);\n        }\n\n        return __jsx(ThemeProvider, {\n          theme: theme\n        }, __jsx(CSSReset, null), __jsx(PleaseSignIn, null, __jsx(Page, {\n          shopsURL: p.startsWith('/shops') || p.startsWith('/settings') && true\n        }, __jsx(Component, pageProps))));\n      }\n\n      return __jsx(React.Fragment, null, __jsx(\"style\", null, \"\\n          .layout {\\n            display: flex;\\n          }\\n          .hover:hover {\\n            opacity: 0.85;\\n          }\\n\\n          @media screen and (max-width: 768px) {\\n            .hidden {\\n              display: none;\\n            }\\n\\n            .layout {\\n              display: block;\\n            }\\n          }\\n          @media screen and (min-width: 769px) {\\n            .show {\\n              display: none;\\n            }\\n          }\\n\\n        \"), __jsx(ApolloProvider, {\n        client: apollo\n      }, pathCheck(path)));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var Component, ctx, apolloClient, pageProps;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Component = _ref.Component, ctx = _ref.ctx, apolloClient = _ref.apolloClient;\n              pageProps = {};\n\n              if (!Component.getInitialProps) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(Component.getInitialProps(ctx));\n\n            case 5:\n              pageProps = _context.sent;\n\n            case 6:\n              // this exposes the query to the user\n              pageProps.query = ctx.query;\n              return _context.abrupt(\"return\", {\n                pageProps: pageProps,\n                path: ctx.asPath\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default withData(MyApp);","map":null,"metadata":{},"sourceType":"module"}