{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport { withRouter } from 'next/router';\nimport { Box, PseudoBox, Heading, Icon, Input, Text, Button, Popover, PopoverContent, PopoverTrigger, useToast } from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { CHANNELS_QUERY, channelsQueryVars } from './Page';\nimport Signout from '../user/Signout';\nimport { front, prodFront } from '../../config';\nconst CREATE_CHANNEL_MUTATION = gql`\n  mutation CREATE_CHANNEL_MUTATION(\n    $name: String!\n    $type: ChannelType!\n    $settings: Json!\n  ) {\n    createChannel(name: $name, type: $type, settings: $settings) {\n      id\n      type\n      name\n      createdAt\n      settings\n    }\n  }\n`;\n\nconst Divider = __jsx(Box, {\n  flexShrink: 0,\n  height: \"3px\",\n  backgroundColor: \"rgb(44, 71, 118)\",\n  borderRadius: 1,\n  marginY: 1,\n  marginX: 3\n});\n\nconst option = (name, options, update, selected) => __jsx(Box, {\n  marginBottom: 2\n}, __jsx(Heading, {\n  fontSize: \"sm\",\n  fontWeight: 500,\n  marginBottom: 2,\n  color: \"gray.600\"\n}, name), __jsx(Box, {\n  width: \"100%\"\n}, options.map((a, index) => __jsx(Box, {\n  display: \"flex\",\n  alignItems: \"center\",\n  p: 2,\n  mt: 2,\n  borderRadius: 2,\n  bg: a === selected ? 'blue.50' : 'gray.50',\n  onClick: () => update(a),\n  cursor: \"pointer\"\n}, __jsx(Icon, {\n  name: \"check-circle\",\n  color: a === selected ? 'blue.200' : 'gray.400',\n  mr: 3\n}), __jsx(Heading, {\n  fontSize: \"xs\",\n  fontWeight: 500,\n  color: a === selected ? 'blue.600' : 'gray.500',\n  letterSpacing: \"wide\",\n  textTransform: \"uppercase\"\n}, a)))));\n\nexport const NavGroupTitle = ({\n  title,\n  icon,\n  fd\n}) => __jsx(Box, {\n  display: \"flex\",\n  flexDirection: fd || 'row',\n  alignItems: \"center\"\n}, __jsx(Heading, {\n  my: 2,\n  ml: 4,\n  mr: \"auto\",\n  textTransform: \"uppercase\",\n  letterSpacing: \"wide\",\n  fontSize: \"sm\",\n  fontWeight: 800,\n  color: \"#d7dae0\"\n}, title), icon);\n\nfunction postRequest(url, data) {\n  return fetch(url, {\n    credentials: 'same-origin',\n    // 'include', default: 'omit'\n    method: 'POST',\n    // 'GET', 'PUT', 'DELETE', etc.\n    body: JSON.stringify({\n      shops: data\n    }),\n    // Use correct payload (matching 'Content-Type')\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n}\n\nconst Header = ({\n  router,\n  logo,\n  onClick,\n  channels,\n  channelsError,\n  shops,\n  shopsError\n}) => {\n  const {\n    0: type,\n    1: setType\n  } = useState('zinc');\n  const {\n    0: shopURL,\n    1: setShopURL\n  } = useState('');\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: key,\n    1: setKey\n  } = useState('');\n  const {\n    0: secret,\n    1: setSecret\n  } = useState('');\n  const toast = useToast();\n  const [createChannel] = useMutation(CREATE_CHANNEL_MUTATION, {\n    refetchQueries: [{\n      query: CHANNELS_QUERY,\n      variables: channelsQueryVars\n    }]\n  });\n  useEffect(() => {\n    postRequest(`${true ? front : prodFront}/_shopify`, shops);\n  }, [shops]);\n  const {\n    asPath\n  } = router;\n\n  const NavItem = ({\n    icon,\n    iconColor,\n    title,\n    href\n  }) => __jsx(Box, {\n    borderLeft: `3px solid ${asPath && asPath.startsWith(href) ? 'rgb(66, 95, 146)' : 'transparent'}`,\n    background: asPath && asPath.startsWith(href) ? 'rgb(35, 61, 106)' : null,\n    onSelect: onClick\n  }, __jsx(Link, {\n    href: href\n  }, __jsx(PseudoBox, {\n    onSelect: onClick,\n    cursor: \"pointer\",\n    width: \"100%\",\n    height: \"40px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    _hover: asPath && !asPath.startsWith(href) && {\n      bg: '#192c4e'\n    }\n  }, __jsx(Icon, {\n    name: icon,\n    color: iconColor || '#ffffff',\n    marginLeft: \"13px\" // size={15}\n\n  }), __jsx(Heading, {\n    color: \"#fff\",\n    ml: 2,\n    fontSize: 15,\n    overflow: \"visible\",\n    textTransform: \"capitalize\"\n  }, title))));\n\n  return __jsx(Box, {\n    background: \"rgb(23, 43, 77)\",\n    minHeight: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  }, __jsx(Box, null, __jsx(Box, {\n    width: \"100%\"\n  }, logo, __jsx(Box, {\n    py: 2\n  }, __jsx(NavGroupTitle, {\n    title: \"Orders\"\n  }), __jsx(NavItem, {\n    icon: \"delta\",\n    title: \"Pending\",\n    href: \"/pending\"\n  }), __jsx(NavItem, {\n    icon: \"time\",\n    title: \"Processed\",\n    href: \"/processed\"\n  }), __jsx(NavItem, {\n    icon: \"check-circle\",\n    title: \"Completed\",\n    href: \"/completed\"\n  })), Divider, __jsx(Box, {\n    py: 2\n  }, __jsx(NavGroupTitle, {\n    title: \"Products\"\n  }), __jsx(NavItem, {\n    icon: \"database\",\n    title: \"All Products\",\n    href: \"/products\"\n  }), __jsx(NavItem, {\n    icon: \"globe\",\n    title: \"Marketplace\",\n    href: \"/find\"\n  })), Divider, __jsx(Box, {\n    py: 2\n  }, __jsx(NavGroupTitle, {\n    title: __jsx(Link, {\n      href: \"/shops\"\n    }, __jsx(Box, {\n      color: \"#d7dae0\",\n      cursor: \"pointer\"\n    }, \"Shops\")),\n    fd: shops && shops.length === 0 && 'column',\n    icon: __jsx(Popover, null, shops.length > 0 ? __jsx(PopoverTrigger, null, __jsx(Button, {\n      variantColor: \"green\",\n      backgroundImage: \"linear-gradient(to bottom, #23C277, #399D6C)\",\n      borderRadius: \"50%\",\n      height: \"20px\",\n      minWidth: \"20px\",\n      px: 0,\n      mr: 4\n    }, __jsx(Icon, {\n      size: 5,\n      name: \"small-add\"\n    }))) : __jsx(PopoverTrigger, null, __jsx(Box, {\n      px: 4,\n      mt: 2,\n      width: \"100%\"\n    }, __jsx(Button, {\n      variantColor: \"green\",\n      variant: \"ghost\",\n      bg: \"green.50\",\n      width: \"100%\",\n      borderRadius: 3,\n      marginRight: 1,\n      px: 2,\n      textTransform: \"uppercase\",\n      letterSpacing: \"wide\",\n      fontSize: \"md\",\n      fontWeight: 700,\n      _hover: {\n        opacity: 0.8\n      }\n    }, \"Add first shop\"))), __jsx(PopoverContent, {\n      zIndex: 4\n    }, __jsx(Box, {\n      width: \"100%\",\n      display: \"flex\",\n      alignItems: \"left\",\n      justifyContent: \"center\",\n      flexDirection: \"column\",\n      padding: 15\n    }, __jsx(\"form\", {\n      method: \"GET\",\n      action: \"/shopify/auth\",\n      style: {\n        width: '100%'\n      }\n    }, __jsx(Text, {\n      fontSize: \"sm\",\n      color: \"gray.600\",\n      mb: 1,\n      fontWeight: 500\n    }, \"Shop Name\"), __jsx(Input, {\n      label: \"Shop Name\",\n      mb: 2\n    }), __jsx(Text, {\n      fontSize: \"sm\",\n      color: \"gray.600\",\n      mb: 1,\n      fontWeight: 500\n    }, \"Shop URL\"), __jsx(Input, {\n      label: \"Shop URL\",\n      mb: 1,\n      id: \"shop\",\n      name: \"shop\"\n    }), __jsx(Text, {\n      fontSize: \"xs\",\n      color: \"gray.500\",\n      mb: 1\n    }, \"Must end in .myshopify.com\"), __jsx(Button, {\n      variantColor: \"green\",\n      variant: \"ghost\",\n      backgroundColor: \"green.50\",\n      borderRadius: 3,\n      marginRight: 1,\n      px: 3,\n      height: 8,\n      width: \"100%\",\n      type: \"submit\"\n    }, __jsx(Heading, {\n      fontSize: \"sm\",\n      fontWeight: 700,\n      textTransform: \"uppercase\",\n      letterSpacing: \"wide\"\n    }, \"Add Shop\"))))))\n  }), (() => {\n    if (shopsError || !shops) return null;\n    return shops.map((shop, index) => __jsx(Box, {\n      key: index\n    }, __jsx(NavItem, {\n      icon: \"vinyl\",\n      iconColor: \"green.500\",\n      title: shop.name,\n      href: `/shop?shop=${shop.domain.split('.')[0]}`\n    })));\n  })()), Divider, __jsx(Box, {\n    py: 2\n  }, __jsx(NavGroupTitle, {\n    title: __jsx(Box, {\n      color: \"#d7dae0\",\n      cursor: \"pointer\"\n    }, \"Channels\"),\n    fd: channels && channels.length === 0 && 'column',\n    icon: __jsx(Popover, null, channels && channels.length === 0 ? __jsx(PopoverTrigger, null, __jsx(Box, {\n      px: 4,\n      mt: 2,\n      width: \"100%\"\n    }, __jsx(Button, {\n      variantColor: \"blue\",\n      variant: \"ghost\",\n      bg: \"blue.50\",\n      width: \"100%\",\n      borderRadius: 3,\n      marginRight: 1,\n      px: 2,\n      textTransform: \"uppercase\",\n      letterSpacing: \"wide\",\n      fontSize: \"md\",\n      fontWeight: 700,\n      _hover: {\n        opacity: 0.8\n      }\n    }, \"Add first channel\"))) : __jsx(PopoverTrigger, null, __jsx(Button, {\n      variantColor: \"green\",\n      backgroundImage: \"linear-gradient(to bottom, #23C277, #399D6C)\",\n      borderRadius: \"50%\",\n      height: \"20px\",\n      minWidth: \"20px\",\n      px: 0,\n      mr: 4\n    }, __jsx(Icon, {\n      size: 5,\n      name: \"small-add\"\n    }))), __jsx(PopoverContent, {\n      zIndex: 4\n    }, __jsx(Box, {\n      width: \"100%\",\n      display: \"flex\",\n      alignItems: \"left\",\n      justifyContent: \"center\",\n      flexDirection: \"column\",\n      padding: 15\n    }, option('Channel Type', ['zinc', 'shopify'], a => setType(a), type), __jsx(Text, {\n      fontSize: \"sm\",\n      color: \"gray.600\",\n      mb: 1,\n      fontWeight: 500\n    }, \"Name\"), __jsx(Input, {\n      label: \"Name\",\n      mb: 2,\n      value: name,\n      onChange: e => setName(e.target.value)\n    }), type === 'zinc' && __jsx(React.Fragment, null, __jsx(Text, {\n      fontSize: \"sm\",\n      color: \"gray.600\",\n      mb: 1,\n      fontWeight: 500\n    }, \"API Key\"), __jsx(Input, {\n      label: \"API Key\",\n      mb: 1,\n      value: key,\n      onChange: e => setKey(e.target.value)\n    }), __jsx(Text, {\n      fontSize: \"xs\",\n      color: \"gray.500\",\n      mb: 2\n    }, \"You must get the key at Zinc.io\")), type === 'shopify' && __jsx(React.Fragment, null, __jsx(Text, {\n      fontSize: \"sm\",\n      color: \"gray.600\",\n      mb: 1,\n      fontWeight: 500\n    }, \"Shop URL\"), __jsx(Input, {\n      label: \"Name\",\n      mb: 2,\n      value: shopURL,\n      onChange: e => setShopURL(e.target.value)\n    }), __jsx(Text, {\n      fontSize: \"sm\",\n      color: \"gray.600\",\n      mb: 1,\n      fontWeight: 500\n    }, \"API Key\"), __jsx(Input, {\n      label: \"key\",\n      mb: 2,\n      value: key,\n      onChange: e => setKey(e.target.value)\n    }), __jsx(Text, {\n      fontSize: \"sm\",\n      color: \"gray.600\",\n      mb: 1,\n      fontWeight: 500\n    }, \"Secret\"), __jsx(Input, {\n      label: \"Secret\",\n      mb: 2,\n      value: secret,\n      onChange: e => setSecret(e.target.value)\n    })), __jsx(Button, {\n      variantColor: \"green\",\n      variant: \"ghost\",\n      backgroundColor: \"green.50\",\n      borderRadius: 3,\n      marginRight: 1,\n      px: 3,\n      height: 8,\n      width: \"100%\",\n      onClick: async () => {\n        await createChannel({\n          variables: {\n            type: type.toUpperCase(),\n            name,\n            settings: _objectSpread({}, key && {\n              key\n            }, {}, secret && {\n              secret\n            }, {}, shopURL && {\n              shopURL\n            })\n          }\n        });\n        setName('');\n        setKey('');\n        setSecret('');\n        setShopURL('');\n        toast({\n          position: 'top-right',\n          title: 'Channel has been added.',\n          status: 'success',\n          duration: 2000,\n          isClosable: true\n        });\n      }\n    }, __jsx(Heading, {\n      fontSize: \"sm\",\n      fontWeight: 700,\n      textTransform: \"uppercase\",\n      letterSpacing: \"wide\"\n    }, \"Add Channel\")))))\n  }), (() => {\n    if (channelsError || !channels) return null;\n    return channels.map((channel, index) => __jsx(Box, {\n      key: index\n    }, __jsx(NavItem, {\n      icon: \"vinyl\",\n      iconColor: \"green.500\",\n      title: channel.name,\n      href: `/channel?channel=${channel.name}`\n    })));\n  })()), Divider, __jsx(Box, null, __jsx(NavItem, {\n    icon: \"settings\",\n    title: \"Settings\",\n    href: \"/settings\"\n  })))), __jsx(Box, {\n    marginTop: \"auto\"\n  }, __jsx(Signout, null)));\n};\n\nexport default withRouter(Header);","map":{"version":3,"sources":["/Users/junaid/openship/components/layout/Header.js"],"names":["useState","useEffect","Link","withRouter","Box","PseudoBox","Heading","Icon","Input","Text","Button","Popover","PopoverContent","PopoverTrigger","useToast","PropTypes","useMutation","gql","CHANNELS_QUERY","channelsQueryVars","Signout","front","prodFront","CREATE_CHANNEL_MUTATION","Divider","option","name","options","update","selected","map","a","index","NavGroupTitle","title","icon","fd","postRequest","url","data","fetch","credentials","method","body","JSON","stringify","shops","headers","Header","router","logo","onClick","channels","channelsError","shopsError","type","setType","shopURL","setShopURL","setName","key","setKey","secret","setSecret","toast","createChannel","refetchQueries","query","variables","asPath","NavItem","iconColor","href","startsWith","bg","length","opacity","width","shop","domain","split","e","target","value","toUpperCase","settings","position","status","duration","isClosable","channel"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport { withRouter } from 'next/router';\nimport {\n  Box,\n  PseudoBox,\n  Heading,\n  Icon,\n  Input,\n  Text,\n  Button,\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n  useToast,\n} from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { CHANNELS_QUERY, channelsQueryVars } from './Page';\nimport Signout from '../user/Signout';\nimport { front, prodFront } from '../../config';\n\nconst CREATE_CHANNEL_MUTATION = gql`\n  mutation CREATE_CHANNEL_MUTATION(\n    $name: String!\n    $type: ChannelType!\n    $settings: Json!\n  ) {\n    createChannel(name: $name, type: $type, settings: $settings) {\n      id\n      type\n      name\n      createdAt\n      settings\n    }\n  }\n`;\n\nconst Divider = (\n  <Box\n    flexShrink={0}\n    height=\"3px\"\n    backgroundColor=\"rgb(44, 71, 118)\"\n    borderRadius={1}\n    marginY={1}\n    marginX={3}\n  />\n);\n\nconst option = (name, options, update, selected) => (\n  <Box marginBottom={2}>\n    <Heading fontSize=\"sm\" fontWeight={500} marginBottom={2} color=\"gray.600\">\n      {name}\n    </Heading>\n    <Box width=\"100%\">\n      {options.map((a, index) => (\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          p={2}\n          mt={2}\n          borderRadius={2}\n          bg={a === selected ? 'blue.50' : 'gray.50'}\n          onClick={() => update(a)}\n          cursor=\"pointer\"\n        >\n          <Icon\n            name=\"check-circle\"\n            color={a === selected ? 'blue.200' : 'gray.400'}\n            mr={3}\n          />\n\n          <Heading\n            fontSize=\"xs\"\n            fontWeight={500}\n            color={a === selected ? 'blue.600' : 'gray.500'}\n            letterSpacing=\"wide\"\n            textTransform=\"uppercase\"\n          >\n            {a}\n          </Heading>\n        </Box>\n      ))}\n    </Box>\n  </Box>\n);\n\nexport const NavGroupTitle = ({ title, icon, fd }) => (\n  <Box display=\"flex\" flexDirection={fd || 'row'} alignItems=\"center\">\n    <Heading\n      my={2}\n      ml={4}\n      mr=\"auto\"\n      textTransform=\"uppercase\"\n      letterSpacing=\"wide\"\n      fontSize=\"sm\"\n      fontWeight={800}\n      color=\"#d7dae0\"\n    >\n      {title}\n    </Heading>\n    {icon}\n  </Box>\n);\n\nfunction postRequest(url, data) {\n  return fetch(url, {\n    credentials: 'same-origin', // 'include', default: 'omit'\n    method: 'POST', // 'GET', 'PUT', 'DELETE', etc.\n    body: JSON.stringify({ shops: data }), // Use correct payload (matching 'Content-Type')\n    headers: { 'Content-Type': 'application/json' },\n  });\n}\n\nconst Header = ({\n  router,\n  logo,\n  onClick,\n  channels,\n  channelsError,\n  shops,\n  shopsError,\n}) => {\n  const [type, setType] = useState('zinc');\n  const [shopURL, setShopURL] = useState('');\n  const [name, setName] = useState('');\n  const [key, setKey] = useState('');\n  const [secret, setSecret] = useState('');\n  const toast = useToast();\n\n  const [createChannel] = useMutation(CREATE_CHANNEL_MUTATION, {\n    refetchQueries: [\n      {\n        query: CHANNELS_QUERY,\n        variables: channelsQueryVars,\n      },\n    ],\n  });\n\n  useEffect(() => {\n    postRequest(\n      `${process.env.NODE_ENV === 'development' ? front : prodFront}/_shopify`,\n      shops\n    );\n  }, [shops]);\n\n  const { asPath } = router;\n\n  const NavItem = ({ icon, iconColor, title, href }) => (\n    <Box\n      borderLeft={`3px solid ${\n        asPath && asPath.startsWith(href) ? 'rgb(66, 95, 146)' : 'transparent'\n      }`}\n      background={asPath && asPath.startsWith(href) ? 'rgb(35, 61, 106)' : null}\n      onSelect={onClick}\n    >\n      <Link href={href}>\n        <PseudoBox\n          onSelect={onClick}\n          cursor=\"pointer\"\n          width=\"100%\"\n          height=\"40px\"\n          display=\"flex\"\n          alignItems=\"center\"\n          _hover={asPath && !asPath.startsWith(href) && { bg: '#192c4e' }}\n        >\n          <Icon\n            name={icon}\n            color={iconColor || '#ffffff'}\n            marginLeft=\"13px\"\n            // size={15}\n          />\n          <Heading\n            color=\"#fff\"\n            ml={2}\n            fontSize={15}\n            overflow=\"visible\"\n            textTransform=\"capitalize\"\n          >\n            {title}\n          </Heading>\n        </PseudoBox>\n      </Link>\n    </Box>\n  );\n\n  return (\n    <Box\n      background=\"rgb(23, 43, 77)\"\n      minHeight=\"100vh\"\n      display=\"flex\"\n      flexDirection=\"column\"\n    >\n      <Box>\n        <Box width=\"100%\">\n          {logo}\n          <Box py={2}>\n            <NavGroupTitle title=\"Orders\" />\n            <NavItem icon=\"delta\" title=\"Pending\" href=\"/pending\" />\n            <NavItem icon=\"time\" title=\"Processed\" href=\"/processed\" />\n            <NavItem icon=\"check-circle\" title=\"Completed\" href=\"/completed\" />\n          </Box>\n          {Divider}\n          <Box py={2}>\n            <NavGroupTitle title=\"Products\" />\n            <NavItem icon=\"database\" title=\"All Products\" href=\"/products\" />\n            <NavItem icon=\"globe\" title=\"Marketplace\" href=\"/find\" />\n          </Box>\n          {Divider}\n          <Box py={2}>\n            <NavGroupTitle\n              title={\n                <Link href=\"/shops\">\n                  <Box color=\"#d7dae0\" cursor=\"pointer\">\n                    Shops\n                  </Box>\n                </Link>\n              }\n              fd={shops && shops.length === 0 && 'column'}\n              icon={\n                <Popover>\n                  {shops.length > 0 ? (\n                    <PopoverTrigger>\n                      <Button\n                        variantColor=\"green\"\n                        backgroundImage=\"linear-gradient(to bottom, #23C277, #399D6C)\"\n                        borderRadius=\"50%\"\n                        height=\"20px\"\n                        minWidth=\"20px\"\n                        px={0}\n                        mr={4}\n                      >\n                        <Icon size={5} name=\"small-add\" />\n                      </Button>\n                    </PopoverTrigger>\n                  ) : (\n                    <PopoverTrigger>\n                      <Box px={4} mt={2} width=\"100%\">\n                        <Button\n                          variantColor=\"green\"\n                          variant=\"ghost\"\n                          bg=\"green.50\"\n                          width=\"100%\"\n                          borderRadius={3}\n                          marginRight={1}\n                          px={2}\n                          textTransform=\"uppercase\"\n                          letterSpacing=\"wide\"\n                          fontSize=\"md\"\n                          fontWeight={700}\n                          _hover={{ opacity: 0.8 }}\n                        >\n                          Add first shop\n                        </Button>\n                      </Box>\n                    </PopoverTrigger>\n                  )}\n                  <PopoverContent zIndex={4}>\n                    <Box\n                      width=\"100%\"\n                      display=\"flex\"\n                      alignItems=\"left\"\n                      justifyContent=\"center\"\n                      flexDirection=\"column\"\n                      padding={15}\n                    >\n                      <form\n                        method=\"GET\"\n                        action=\"/shopify/auth\"\n                        style={{ width: '100%' }}\n                      >\n                        <Text\n                          fontSize=\"sm\"\n                          color=\"gray.600\"\n                          mb={1}\n                          fontWeight={500}\n                        >\n                          Shop Name\n                        </Text>\n                        <Input label=\"Shop Name\" mb={2} />\n\n                        <Text\n                          fontSize=\"sm\"\n                          color=\"gray.600\"\n                          mb={1}\n                          fontWeight={500}\n                        >\n                          Shop URL\n                        </Text>\n                        <Input label=\"Shop URL\" mb={1} id=\"shop\" name=\"shop\" />\n                        <Text fontSize=\"xs\" color=\"gray.500\" mb={1}>\n                          Must end in .myshopify.com\n                        </Text>\n\n                        <Button\n                          variantColor=\"green\"\n                          variant=\"ghost\"\n                          backgroundColor=\"green.50\"\n                          borderRadius={3}\n                          marginRight={1}\n                          px={3}\n                          height={8}\n                          width=\"100%\"\n                          type=\"submit\"\n                        >\n                          <Heading\n                            fontSize=\"sm\"\n                            fontWeight={700}\n                            textTransform=\"uppercase\"\n                            letterSpacing=\"wide\"\n                          >\n                            Add Shop\n                          </Heading>\n                        </Button>\n                      </form>\n                    </Box>\n                  </PopoverContent>\n                </Popover>\n              }\n            />\n            {(() => {\n              if (shopsError || !shops) return null;\n              return shops.map((shop, index) => (\n                <Box key={index}>\n                  <NavItem\n                    icon=\"vinyl\"\n                    iconColor=\"green.500\"\n                    title={shop.name}\n                    href={`/shop?shop=${shop.domain.split('.')[0]}`}\n                  />\n                </Box>\n              ));\n            })()}\n          </Box>\n          {Divider}\n          <Box py={2}>\n            <NavGroupTitle\n              title={\n                <Box color=\"#d7dae0\" cursor=\"pointer\">\n                  Channels\n                </Box>\n              }\n              fd={channels && channels.length === 0 && 'column'}\n              icon={\n                <Popover>\n                  {channels && channels.length === 0 ? (\n                    <PopoverTrigger>\n                      <Box px={4} mt={2} width=\"100%\">\n                        <Button\n                          variantColor=\"blue\"\n                          variant=\"ghost\"\n                          bg=\"blue.50\"\n                          width=\"100%\"\n                          borderRadius={3}\n                          marginRight={1}\n                          px={2}\n                          textTransform=\"uppercase\"\n                          letterSpacing=\"wide\"\n                          fontSize=\"md\"\n                          fontWeight={700}\n                          _hover={{ opacity: 0.8 }}\n                        >\n                          Add first channel\n                        </Button>\n                      </Box>\n                    </PopoverTrigger>\n                  ) : (\n                    <PopoverTrigger>\n                      <Button\n                        variantColor=\"green\"\n                        backgroundImage=\"linear-gradient(to bottom, #23C277, #399D6C)\"\n                        borderRadius=\"50%\"\n                        height=\"20px\"\n                        minWidth=\"20px\"\n                        px={0}\n                        mr={4}\n                      >\n                        <Icon size={5} name=\"small-add\" />\n                      </Button>\n                    </PopoverTrigger>\n                  )}\n                  <PopoverContent zIndex={4}>\n                    <Box\n                      width=\"100%\"\n                      display=\"flex\"\n                      alignItems=\"left\"\n                      justifyContent=\"center\"\n                      flexDirection=\"column\"\n                      padding={15}\n                    >\n                      {option(\n                        'Channel Type',\n                        ['zinc', 'shopify'],\n                        a => setType(a),\n                        type\n                      )}\n                      <Text\n                        fontSize=\"sm\"\n                        color=\"gray.600\"\n                        mb={1}\n                        fontWeight={500}\n                      >\n                        Name\n                      </Text>\n                      <Input\n                        label=\"Name\"\n                        mb={2}\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                      />\n                      {type === 'zinc' && (\n                        <>\n                          <Text\n                            fontSize=\"sm\"\n                            color=\"gray.600\"\n                            mb={1}\n                            fontWeight={500}\n                          >\n                            API Key\n                          </Text>\n                          <Input\n                            label=\"API Key\"\n                            mb={1}\n                            value={key}\n                            onChange={e => setKey(e.target.value)}\n                          />\n                          <Text fontSize=\"xs\" color=\"gray.500\" mb={2}>\n                            You must get the key at Zinc.io\n                          </Text>\n                        </>\n                      )}\n                      {type === 'shopify' && (\n                        <>\n                          <Text\n                            fontSize=\"sm\"\n                            color=\"gray.600\"\n                            mb={1}\n                            fontWeight={500}\n                          >\n                            Shop URL\n                          </Text>\n                          <Input\n                            label=\"Name\"\n                            mb={2}\n                            value={shopURL}\n                            onChange={e => setShopURL(e.target.value)}\n                          />\n                          <Text\n                            fontSize=\"sm\"\n                            color=\"gray.600\"\n                            mb={1}\n                            fontWeight={500}\n                          >\n                            API Key\n                          </Text>\n                          <Input\n                            label=\"key\"\n                            mb={2}\n                            value={key}\n                            onChange={e => setKey(e.target.value)}\n                          />\n                          <Text\n                            fontSize=\"sm\"\n                            color=\"gray.600\"\n                            mb={1}\n                            fontWeight={500}\n                          >\n                            Secret\n                          </Text>\n                          <Input\n                            label=\"Secret\"\n                            mb={2}\n                            value={secret}\n                            onChange={e => setSecret(e.target.value)}\n                          />\n                        </>\n                      )}\n\n                      <Button\n                        variantColor=\"green\"\n                        variant=\"ghost\"\n                        backgroundColor=\"green.50\"\n                        borderRadius={3}\n                        marginRight={1}\n                        px={3}\n                        height={8}\n                        width=\"100%\"\n                        onClick={async () => {\n                          await createChannel({\n                            variables: {\n                              type: type.toUpperCase(),\n                              name,\n                              settings: {\n                                ...(key && { key }),\n                                ...(secret && { secret }),\n                                ...(shopURL && { shopURL }),\n                              },\n                            },\n                          });\n                          setName('');\n                          setKey('');\n                          setSecret('');\n                          setShopURL('');\n                          toast({\n                            position: 'top-right',\n                            title: 'Channel has been added.',\n                            status: 'success',\n                            duration: 2000,\n                            isClosable: true,\n                          });\n                        }}\n                      >\n                        <Heading\n                          fontSize=\"sm\"\n                          fontWeight={700}\n                          textTransform=\"uppercase\"\n                          letterSpacing=\"wide\"\n                        >\n                          Add Channel\n                        </Heading>\n                      </Button>\n                    </Box>\n                  </PopoverContent>\n                </Popover>\n              }\n            />\n            {(() => {\n              if (channelsError || !channels) return null;\n              return channels.map((channel, index) => (\n                <Box key={index}>\n                  <NavItem\n                    icon=\"vinyl\"\n                    iconColor=\"green.500\"\n                    title={channel.name}\n                    href={`/channel?channel=${channel.name}`}\n                  />\n                </Box>\n              ));\n            })()}\n          </Box>\n          {Divider}\n          <Box>\n            {/* <NavGroupTitle title=\"Settings\" /> */}\n            <NavItem icon=\"settings\" title=\"Settings\" href=\"/settings\" />\n          </Box>\n        </Box>\n      </Box>\n      <Box marginTop=\"auto\">\n        <Signout />\n      </Box>\n    </Box>\n  );\n};\n\nexport default withRouter(Header);\n"]},"metadata":{},"sourceType":"module"}