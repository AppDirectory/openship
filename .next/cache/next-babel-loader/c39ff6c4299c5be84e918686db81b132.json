{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Box, Heading, Text, Icon, Input, Divider, Button } from '@chakra-ui/core';\nvar sucessCard = {\n  paddingX: 10,\n  paddingY: 5,\n  background: '#F1FAF5',\n  display: 'flex',\n  alignItems: 'center'\n};\n\nvar sellerOnboarding = function sellerOnboarding(_ref) {\n  var sellerStep = _ref.sellerStep,\n      requested = _ref.requested,\n      shopName = _ref.shopName,\n      setShopName = _ref.setShopName,\n      reviews = _ref.reviews,\n      setReviews = _ref.setReviews,\n      threshold = _ref.threshold,\n      setThreshold = _ref.setThreshold,\n      error = _ref.error,\n      loading = _ref.loading,\n      updateSeller = _ref.updateSeller,\n      id = _ref.id;\n  var tabs = ['Shop Info', 'Connect Stripe', 'Add Products'];\n\n  function onConfirm() {\n    var res;\n    return _regeneratorRuntime.async(function onConfirm$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(updateSeller({\n              variables: {\n                userInput: {\n                  questions: [{\n                    shopName: shopName\n                  }, {\n                    reviews: reviews\n                  }, {\n                    threshold: threshold\n                  }]\n                }\n              }\n            }));\n\n          case 2:\n            res = _context.sent;\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return __jsx(Box, {\n    boxShadow: \"sm\",\n    borderRadius: \"5px\"\n  }, __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    borderTopRightRadius: \"5px\",\n    borderTopLeftRadius: \"5px\",\n    borderBottom: \"1px solid #E4E7EB\"\n  }, tabs.map(function (tab, index) {\n    return __jsx(Box, _extends({\n      flex: 1,\n      display: \"flex\" // flexDirection=\"column\"\n      ,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: 13,\n      flexWrap: \"wrap\" // {...index !== 0 && { borderLeft: '1px solid #DDEBF7' }}\n\n    }, index <= sellerStep && {\n      background: '#123950'\n    }, index === 0 && {\n      borderTopLeftRadius: '5px'\n    }, index === 1 && sellerStep === 0 && {\n      borderRight: '2px solid #f0f0f0'\n    }, index === 2 && {\n      borderTopRightRadius: '5px'\n    }), __jsx(Icon, {\n      name: \"check-circle\",\n      size: 4,\n      color: index <= sellerStep ? 'green.400' : 'white',\n      bg: index <= sellerStep ? 'white' : 'green.400',\n      borderRadius: \"999px\",\n      p: index <= sellerStep ? '0px' : '1px'\n    }), __jsx(Text, _extends({\n      key: tab,\n      id: tab,\n      \"aria-controls\": \"Boxl-\".concat(tab),\n      textAlign: \"center\",\n      fontSize: \"sm\",\n      marginX: 2,\n      marginY: 1,\n      color: \"text\"\n    }, index <= sellerStep && {\n      fontWeight: '600',\n      color: '#fff'\n    }), tab));\n  })), __jsx(Box, {\n    background: \"white\",\n    flex: \"1\",\n    borderBottomLeftRadius: 5,\n    borderBottomRightRadius: 5\n  }, tabs.map(function (tab, index) {\n    return __jsx(Box, {\n      key: tab,\n      id: \"Boxl-\".concat(tab),\n      \"aria-labelledby\": tab,\n      \"aria-hidden\": index !== sellerStep,\n      display: index === sellerStep ? 'block' : 'none'\n    }, function () {\n      switch (index) {\n        case 0:\n          return __jsx(React.Fragment, null, __jsx(Box, {\n            padding: 4\n          }, __jsx(Box, {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginBottom: 15\n          }, __jsx(Heading, {\n            fontSize: \"md\",\n            color: \"#425A70\",\n            fontWeight: 500\n          }, \"Getting started as a marketplace seller\")), __jsx(Divider, null), __jsx(Box, {\n            mb: 4\n          }, __jsx(Text, {\n            color: \"#425A70\",\n            fontSize: \"sm\",\n            fontWeight: 500,\n            mb: 1\n          }, \"Shop Name\"), __jsx(Input, {\n            size: \"sm\",\n            placeholder: requested || \"Frank's Bike Shop\",\n            value: shopName,\n            onChange: function onChange(e) {\n              return setShopName(e.target.value);\n            },\n            disabled: requested,\n            mb: 1\n          }), __jsx(Text, {\n            fontSize: \"xs\",\n            color: \"gray.500\"\n          }, \"Name of shop that will appear on marketplace\")), __jsx(Box, {\n            mb: 4\n          }, __jsx(Text, {\n            color: \"#425A70\",\n            fontSize: \"sm\",\n            fontWeight: 500,\n            mb: 1\n          }, \"Shop Reviews\"), __jsx(Input, {\n            size: \"sm\",\n            placeholder: requested || 'www.google.com/reviews/franksbikeshop',\n            value: reviews,\n            onChange: function onChange(e) {\n              return setReviews(e.target.value);\n            },\n            disabled: requested,\n            mb: 1\n          }), __jsx(Text, {\n            fontSize: \"xs\",\n            color: \"gray.500\"\n          }, \"Please link us to any shop reviews you have\")), __jsx(Box, {\n            mb: 4\n          }, __jsx(Text, {\n            color: \"#425A70\",\n            fontSize: \"sm\",\n            fontWeight: 500,\n            mb: 1\n          }, \"Order Threshold\"), __jsx(Input, {\n            size: \"sm\",\n            placeholder: requested || '100',\n            value: threshold,\n            onChange: function onChange(e) {\n              return setThreshold(e.target.value);\n            },\n            disabled: requested,\n            mb: 1\n          }), __jsx(Text, {\n            fontSize: \"xs\",\n            color: \"gray.500\"\n          }, \"Limit on how many orders can be handled daily by shop\"))), requested ? __jsx(Box, _extends({}, sucessCard, {\n            padding: 15,\n            borderTop: \"2px solid #f0f0f0\",\n            borderBottomLeftRadius: \"5\",\n            borderBottomRightRadius: \"5\",\n            borderTopLeftRadius: \"0\",\n            borderTopRightRadius: \"0\"\n          }), __jsx(Icon, {\n            icon: \"endorsed\",\n            color: \"#47B881\",\n            marginRight: 10\n          }), __jsx(Text, {\n            fontSize: \"sm\",\n            color: \"#47B881\",\n            fontWeight: 500\n          }, \"Marketplace seller access has been requested. We'll be in touch soon.\")) : __jsx(Button, {\n            height: 35,\n            fontSize: 15,\n            width: \"100%\",\n            color: \"#fff\",\n            letterSpacing: \"wider\",\n            fontWeight: 700,\n            textTransform: \"uppercase\",\n            background: \"#47B881\",\n            borderBottomLeftRadius: \"5\",\n            borderBottomRightRadius: \"5\",\n            borderTopLeftRadius: \"0\",\n            borderTopRightRadius: \"0\",\n            _hover: {\n              opacity: 0.8\n            }\n          }, \"Confirm\"));\n\n        case 1:\n          return __jsx(React.Fragment, null, __jsx(Box, {\n            padding: 4\n          }, __jsx(Box, {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginBottom: 15\n          }, __jsx(Heading, {\n            fontSize: \"md\",\n            fontWeight: 500,\n            color: \"#425A70\"\n          }, \"Your marketplace account has been approved.\")), __jsx(Divider, null), __jsx(Heading, {\n            fontSize: \"md\",\n            fontWeight: 500,\n            marginBottom: 2,\n            color: \"#425A70\"\n          }, \"Stripe Integration\"), __jsx(Box, {\n            as: \"p\",\n            marginBottom: 5,\n            color: \"#425A70\",\n            fontSize: \"sm\"\n          }, \"By connecting Stripe, the marketplace will be able to accept payments from buyers on your behalf. Funds and payouts can be managed from your Stripe dashboard.\")), __jsx(\"a\", {\n            href: \"https://connect.stripe.com/oauth/authorize?response_type=code&client_id=ca_FP0VAQDBcM7LCrGiCMuARMl7DJoTyZM6&scope=read_write&state=\".concat(id),\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }, __jsx(Button, {\n            height: 35,\n            fontSize: 15,\n            width: \"100%\",\n            color: \"#fff\",\n            letterSpacing: \"wider\",\n            fontWeight: 700,\n            textTransform: \"uppercase\",\n            background: \"#1070ca\",\n            borderBottomLeftRadius: \"5\",\n            borderBottomRightRadius: \"5\",\n            borderTopLeftRadius: \"0\",\n            borderTopRightRadius: \"0\",\n            _hover: {\n              opacity: 0.8\n            }\n          }, \"Connect Stripe\")));\n\n        case 2:\n          return __jsx(Box, {\n            padding: 4\n          }, __jsx(Box, {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginBottom: 15\n          }, __jsx(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"confetti\"\n          }, \"\\uD83C\\uDF89\"), __jsx(Heading, {\n            fontSize: \"md\",\n            fontWeight: 600,\n            color: \"#425A70\"\n          }, \"You're all set!\")), __jsx(Divider, null), __jsx(Heading, {\n            fontSize: \"md\",\n            fontWeight: 500,\n            marginBottom: 2,\n            color: \"#425A70\"\n          }, \"Adding Products\"), __jsx(Box, {\n            as: \"p\",\n            marginBottom: 25,\n            color: \"#425A70\",\n            fontSize: \"sm\"\n          }, \"To add products to the marketplace, simply navigate to the all products link. You will see a sync button next to each product. Once clicked, you can edit the item, add quantity, and have the item listed. We currently only support free shipping so please price this into the cost of the item.\"), __jsx(Heading, {\n            fontSize: \"md\",\n            fontWeight: 500,\n            marginBottom: 2,\n            color: \"#425A70\"\n          }, \"Orders\"), __jsx(Box, {\n            as: \"p\",\n            marginBottom: 25,\n            color: \"#425A70\",\n            fontSize: \"sm\"\n          }, \"Once your item in the marketplace is sold, an order will be created on the Shopify shop that the product was added from. Payments will be handled by Stripe and a link to the Stripe payment page will be added to the created order.\"), __jsx(Heading, {\n            fontSize: \"md\",\n            fontWeight: 500,\n            marginBottom: 2,\n            color: \"#425A70\"\n          }, \"Payments\"), __jsx(Box, {\n            as: \"p\",\n            marginBottom: 25,\n            color: \"#425A70\",\n            fontSize: \"sm\"\n          }, \"The openship marketplace has a 4% seller fee on each order (this does not include credit card processing fees from Stripe). Payouts and chargebacks are to be handled directly on your Stripe dashboard.\"), __jsx(Heading, {\n            fontSize: \"md\",\n            fontWeight: 500,\n            marginBottom: 2,\n            color: \"#425A70\"\n          }, \"Fulfillment\"), __jsx(Box, {\n            as: \"p\",\n            color: \"#425A70\",\n            fontSize: \"sm\"\n          }, \"The created order on your Shopify shop can be fulfilled like any other order. Once the order is fulfilled, the tracking information will be synced directly to the buyer's shop.\"));\n\n        default:\n          return __jsx(\"div\", null, \"Error\");\n      }\n    }());\n  })));\n};\n\nexport default sellerOnboarding;","map":null,"metadata":{},"sourceType":"module"}