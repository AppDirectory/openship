{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport MktProduct from '../MarketplaceSearch/MktProduct';\n\nfunction ShopifySearch({\n  addCustomItem,\n  atcDisabled,\n  searchEntry,\n  token,\n  apiKey,\n  url\n}) {\n  const {\n    0: results,\n    1: setResults\n  } = useState([]);\n  const {\n    0: error,\n    1: setError\n  } = useState('');\n  useEffect(() => {\n    async function findItems() {\n      const query = `\n      query AllOrdersQuery($query: String)\n      {\n        products(query: $query first:5) \n        {\n          pageInfo {\n            hasNextPage\n            hasPreviousPage\n          }\n          edges {\n            node {\n              id\n              title\n              options {\n                id\n                name\n                values\n              }\n              variants(first: 250) {\n                pageInfo {\n                  hasNextPage\n                  hasPreviousPage\n                }\n                edges {\n                  node {\n                    id\n                    title\n                    selectedOptions {\n                      name\n                      value\n                    }\n                    image {\n                      src\n                    }\n                    price\n                  }\n                }\n              }\n              images(first: 250) {\n                pageInfo {\n                  hasNextPage\n                  hasPreviousPage\n                }\n                edges {\n                  node {\n                    src\n                  }\n                }\n              }\n            }\n          }\n          }\n        }\n      `;\n      const variables = {\n        query: searchEntry\n      };\n      const items = await fetch(`https://${url}.myshopify.com/api/graphql`, {\n        method: 'POST',\n        body: JSON.stringify({\n          query,\n          variables\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Shopify-Storefront-Access-Token': apiKey\n        }\n      }).then(res => res.json()).then(json => setResults(json.data.products.edges));\n    }\n\n    searchEntry && findItems();\n  }, [apiKey, searchEntry, url]);\n  return results.map(product => __jsx(MktProduct, {\n    addVariantToCart: (a, b) => addCustomItem(a, b),\n    checkout: () => toaster.success(`checkout`),\n    key: product.node.id.toString(),\n    product: product.node,\n    client: \"Marketplace\",\n    atcDisabled: atcDisabled\n  }));\n}\n\nexport default ShopifySearch;","map":{"version":3,"sources":["/Users/junaid/openship/components/find/ShopifySearch/index.js"],"names":["React","useState","useEffect","MktProduct","ShopifySearch","addCustomItem","atcDisabled","searchEntry","token","apiKey","url","results","setResults","error","setError","findItems","query","variables","items","fetch","method","body","JSON","stringify","headers","then","res","json","data","products","edges","map","product","a","b","toaster","success","node","id","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,iCAAvB;;AAEA,SAASC,aAAT,CAAuB;AACrBC,EAAAA,aADqB;AAErBC,EAAAA,WAFqB;AAGrBC,EAAAA,WAHqB;AAIrBC,EAAAA,KAJqB;AAKrBC,EAAAA,MALqB;AAMrBC,EAAAA;AANqB,CAAvB,EAOG;AACD,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACY,KAAD;AAAA,OAAQC;AAAR,MAAoBb,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAea,SAAf,GAA2B;AACzB,YAAMC,KAAK,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAAf;AAuDA,YAAMC,SAAS,GAAG;AAChBD,QAAAA,KAAK,EAAET;AADS,OAAlB;AAIA,YAAMW,KAAK,GAAG,MAAMC,KAAK,CAAE,WAAUT,GAAI,4BAAhB,EAA6C;AACpEU,QAAAA,MAAM,EAAE,MAD4D;AAEpEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,UAAAA,KAAF;AAASC,UAAAA;AAAT,SAAf,CAF8D;AAGpEO,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,+CAAqCf;AAF9B;AAH2D,OAA7C,CAAL,CAQjBgB,IARiB,CAQZC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARK,EASjBF,IATiB,CASZE,IAAI,IAAIf,UAAU,CAACe,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmBC,KAApB,CATN,CAApB;AAUD;;AAEDvB,IAAAA,WAAW,IAAIQ,SAAS,EAAxB;AACD,GA1EQ,EA0EN,CAACN,MAAD,EAASF,WAAT,EAAsBG,GAAtB,CA1EM,CAAT;AA4EA,SAAOC,OAAO,CAACoB,GAAR,CAAYC,OAAO,IACxB,MAAC,UAAD;AACE,IAAA,gBAAgB,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAU7B,aAAa,CAAC4B,CAAD,EAAIC,CAAJ,CAD3C;AAEE,IAAA,QAAQ,EAAE,MAAMC,OAAO,CAACC,OAAR,CAAiB,UAAjB,CAFlB;AAGE,IAAA,GAAG,EAAEJ,OAAO,CAACK,IAAR,CAAaC,EAAb,CAAgBC,QAAhB,EAHP;AAIE,IAAA,OAAO,EAAEP,OAAO,CAACK,IAJnB;AAKE,IAAA,MAAM,EAAC,aALT;AAME,IAAA,WAAW,EAAE/B;AANf,IADK,CAAP;AAUD;;AAED,eAAeF,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MktProduct from '../MarketplaceSearch/MktProduct';\n\nfunction ShopifySearch({\n  addCustomItem,\n  atcDisabled,\n  searchEntry,\n  token,\n  apiKey,\n  url,\n}) {\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    async function findItems() {\n      const query = `\n      query AllOrdersQuery($query: String)\n      {\n        products(query: $query first:5) \n        {\n          pageInfo {\n            hasNextPage\n            hasPreviousPage\n          }\n          edges {\n            node {\n              id\n              title\n              options {\n                id\n                name\n                values\n              }\n              variants(first: 250) {\n                pageInfo {\n                  hasNextPage\n                  hasPreviousPage\n                }\n                edges {\n                  node {\n                    id\n                    title\n                    selectedOptions {\n                      name\n                      value\n                    }\n                    image {\n                      src\n                    }\n                    price\n                  }\n                }\n              }\n              images(first: 250) {\n                pageInfo {\n                  hasNextPage\n                  hasPreviousPage\n                }\n                edges {\n                  node {\n                    src\n                  }\n                }\n              }\n            }\n          }\n          }\n        }\n      `;\n\n      const variables = {\n        query: searchEntry,\n      };\n\n      const items = await fetch(`https://${url}.myshopify.com/api/graphql`, {\n        method: 'POST',\n        body: JSON.stringify({ query, variables }),\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Shopify-Storefront-Access-Token': apiKey,\n        },\n      })\n        .then(res => res.json())\n        .then(json => setResults(json.data.products.edges));\n    }\n\n    searchEntry && findItems();\n  }, [apiKey, searchEntry, url]);\n\n  return results.map(product => (\n    <MktProduct\n      addVariantToCart={(a, b) => addCustomItem(a, b)}\n      checkout={() => toaster.success(`checkout`)}\n      key={product.node.id.toString()}\n      product={product.node}\n      client=\"Marketplace\"\n      atcDisabled={atcDisabled}\n    />\n  ));\n}\n\nexport default ShopifySearch;\n"]},"metadata":{},"sourceType":"module"}