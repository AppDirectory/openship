{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($first: Int!, $skip: Int!) {\\n    shops(orderBy: createdAt_DESC, first: $first, skip: $skip) {\\n      id\\n      domain\\n      accessToken\\n      createdAt\\n      name\\n      settings\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { Pane, Heading, Popover, TextInputField } from 'evergreen-ui';\nimport ShopListItem from './ShopListItem';\nimport { CardStyle } from '../common/DefaultStyles';\nimport Button from '../common/Button';\nexport var shopsQuery = gql(_templateObject());\nexport var shopsQueryVars = {\n  skip: 0,\n  first: 10\n};\nexport default function ShopList() {\n  return React.createElement(React.Fragment, null, React.createElement(Pane, {\n    display: \"flex\",\n    paddingTop: 16,\n    paddingBottom: 16\n  }, React.createElement(Pane, {\n    flex: 1,\n    alignItems: \"center\",\n    display: \"flex\"\n  }, React.createElement(Heading, {\n    size: 700\n  }, \"Shops\")), React.createElement(Pane, null, React.createElement(Popover, {\n    content: React.createElement(Pane, {\n      width: 300,\n      display: \"flex\",\n      alignItems: \"left\",\n      justifyContent: \"center\",\n      flexDirection: \"column\",\n      padding: 15\n    }, React.createElement(\"form\", {\n      method: \"GET\",\n      action: \"/shopify/auth\",\n      style: {\n        width: '100%'\n      }\n    }, React.createElement(TextInputField, {\n      label: \"Shop Name\",\n      marginBottom: \"10px\"\n    }), React.createElement(TextInputField, {\n      label: \"Shop URL\",\n      marginBottom: \"10px\",\n      hint: \"Must end in .myshopify.com\",\n      id: \"shop\",\n      name: \"shop\"\n    }), React.createElement(Button, {\n      width: \"100%\",\n      justifyContent: \"center\",\n      appearance: \"primary\",\n      intent: \"success\",\n      fontSize: \"12px\",\n      paddingY: 3\n    }, \"Go to Shopify\")))\n  }, React.createElement(Pane, null, React.createElement(Button, {\n    intent: \"primary\"\n  }, \"Add Shop\"))))), React.createElement(Query, {\n    query: shopsQuery,\n    variables: shopsQueryVars\n  }, function (_ref) {\n    var data = _ref.data,\n        error = _ref.error,\n        loading = _ref.loading;\n    if (loading) return React.createElement(\"p\", null, \"Loading...\");\n    if (error || !data.shops) return React.createElement(\"h1\", null, \"Error loading shops: \", error);\n    return React.createElement(Pane, {\n      display: \"flex\",\n      width: \"calc(100% + 20px)\",\n      flexWrap: \"wrap\",\n      marginX: \"-10px\"\n    }, data.shops.map(function (shop) {\n      return React.createElement(Pane, {\n        flex: 1,\n        padding: 10,\n        key: shop.id\n      }, React.createElement(ShopListItem, {\n        shop: shop\n      }));\n    }));\n  }));\n}","map":{"version":3,"sources":["/Users/junaid/openship/components/shops/ShopList.js"],"names":["Query","gql","Pane","Heading","Popover","TextInputField","ShopListItem","CardStyle","Button","shopsQuery","shopsQueryVars","skip","first","ShopList","width","data","error","loading","shops","map","shop","id"],"mappings":"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","sourcesContent":["import { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { Pane, Heading, Popover, TextInputField } from 'evergreen-ui';\nimport ShopListItem from './ShopListItem';\nimport { CardStyle } from '../common/DefaultStyles';\nimport Button from '../common/Button';\n\nexport const shopsQuery = gql`\n  query($first: Int!, $skip: Int!) {\n    shops(orderBy: createdAt_DESC, first: $first, skip: $skip) {\n      id\n      domain\n      accessToken\n      createdAt\n      name\n      settings\n    }\n  }\n`;\n\nexport const shopsQueryVars = {\n  skip: 0,\n  first: 10,\n};\n\nexport default function ShopList() {\n  return (\n    <>\n      <Pane display=\"flex\" paddingTop={16} paddingBottom={16}>\n        <Pane flex={1} alignItems=\"center\" display=\"flex\">\n          <Heading size={700}>Shops</Heading>\n        </Pane>\n        <Pane>\n          <Popover\n            content={\n              <Pane\n                width={300}\n                display=\"flex\"\n                alignItems=\"left\"\n                justifyContent=\"center\"\n                flexDirection=\"column\"\n                padding={15}\n              >\n                <form\n                  method=\"GET\"\n                  action=\"/shopify/auth\"\n                  style={{ width: '100%' }}\n                >\n                  <TextInputField label=\"Shop Name\" marginBottom=\"10px\" />\n                  <TextInputField\n                    label=\"Shop URL\"\n                    marginBottom=\"10px\"\n                    hint=\"Must end in .myshopify.com\"\n                    id=\"shop\"\n                    name=\"shop\"\n                  />\n\n                  <Button\n                    width=\"100%\"\n                    justifyContent=\"center\"\n                    appearance=\"primary\"\n                    intent=\"success\"\n                    fontSize=\"12px\"\n                    paddingY={3}\n                  >\n                    Go to Shopify\n                  </Button>\n                </form>\n              </Pane>\n            }\n          >\n            <Pane>\n              <Button intent=\"primary\">Add Shop</Button>\n            </Pane>\n          </Popover>\n        </Pane>\n      </Pane>\n      <Query query={shopsQuery} variables={shopsQueryVars}>\n        {({ data, error, loading }) => {\n          if (loading) return <p>Loading...</p>;\n          if (error || !data.shops)\n            return <h1>Error loading shops: {error}</h1>;\n          return (\n            <Pane\n              display=\"flex\"\n              width=\"calc(100% + 20px)\"\n              flexWrap=\"wrap\"\n              marginX=\"-10px\"\n            >\n              {data.shops.map(shop => (\n                <Pane flex={1} padding={10} key={shop.id}>\n                  <ShopListItem shop={shop} />\n                </Pane>\n              ))}\n            </Pane>\n          );\n        }}\n      </Query>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}