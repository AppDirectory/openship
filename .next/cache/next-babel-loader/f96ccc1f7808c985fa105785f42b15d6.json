{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Box, Button, InputGroup, InputLeftElement, Input, Icon, Heading, useToast } from '@chakra-ui/core';\nimport { CURRENT_USER_QUERY } from '../user/User';\nimport Pagination from '../common/Pagination';\nimport { CardStyle } from '../common/DefaultStyles';\nimport MarketplaceSearch from './MarketplaceSearch';\nimport ZincSearch from './ZincSearch';\nimport ShopifySearch from './ShopifySearch';\nimport { CHANNELS_QUERY, channelsQueryVars } from '../layout/Page';\nexport const getItemGroup = gql`\n  query getItemGroup($itemID: String) {\n    getItemGroup(itemID: $itemID) {\n      item\n    }\n  }\n`;\nconst sortOptions = [{\n  label: 'Lowest Price',\n  value: 'price'\n}, {\n  label: 'Highest Price',\n  value: '-price'\n}, {\n  label: 'Best Match',\n  value: 'match'\n}];\nexport const option = (name, options, update, selected) => __jsx(Box, {\n  marginBottom: 2,\n  marginRight: 5\n}, __jsx(Heading, {\n  fontSize: \"sm\",\n  color: \"text\",\n  fontWeight: 500,\n  marginBottom: 0\n}, name), __jsx(Box, {\n  display: \"flex\"\n}, options.map((a, index) => __jsx(Box, {\n  id: a,\n  key: index,\n  p: 1,\n  mr: 2,\n  mt: 2,\n  borderRadius: 3,\n  bg: a === selected ? '#e2e9f2' : 'transparent',\n  onClick: () => update(a),\n  cursor: \"pointer\"\n}, __jsx(Heading, {\n  fontSize: \"xs\",\n  fontWeight: 500,\n  px: 1,\n  color: a === selected ? '#1070ca' : '#425a70',\n  letterSpacing: \"wide\",\n  textTransform: \"uppercase\"\n}, a)))));\n\nconst Find = ({\n  headerSize,\n  atcDisabled,\n  addMPItem,\n  addCustomItem,\n  addZincItem\n}) => {\n  const {\n    0: value,\n    1: setValue\n  } = useState('price');\n  const {\n    0: searchBar,\n    1: setSearchBar\n  } = useState('');\n  const {\n    0: searchEntry,\n    1: setSearchEntry\n  } = useState('');\n  const {\n    0: limit,\n    1: setLimit\n  } = useState(10);\n  const {\n    0: pageNum,\n    1: setPageNum\n  } = useState(0);\n  const {\n    0: min,\n    1: setMin\n  } = useState('');\n  const {\n    0: max,\n    1: setMax\n  } = useState('');\n  const {\n    0: price,\n    1: setPrice\n  } = useState(null);\n  const {\n    0: priceCurrency,\n    1: setPriceCurrency\n  } = useState('USD');\n  const {\n    0: itemLocationCountry,\n    1: setItemLocationCountry\n  } = useState('US');\n  const {\n    0: include,\n    1: setInclude\n  } = useState([]);\n  const {\n    0: exclude,\n    1: setExclude\n  } = useState([]);\n  const {\n    0: selectedChannel,\n    1: setSelectedChannel\n  } = useState('Marketplace');\n  const {\n    data: {\n      me\n    }\n  } = useQuery(CURRENT_USER_QUERY);\n  const allChannels = useQuery(CHANNELS_QUERY, {\n    variables: channelsQueryVars\n  });\n  const {\n    data,\n    error: channelsError,\n    loading: channelsLoading\n  } = allChannels;\n  const toast = useToast();\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    display: \"flex\",\n    py: 4\n  }, __jsx(Box, {\n    flex: 1,\n    alignItems: \"center\",\n    display: \"flex\"\n  }, __jsx(Heading, {\n    fontSize: \"2xl\",\n    color: \"text\",\n    fontWeight: 500\n  }, \"Marketplace\"))), __jsx(Box, _extends({}, CardStyle, {\n    background: \"white\"\n  }), (() => {\n    if (!me) return null;\n\n    if (me.buyer && me.buyer.status) {\n      return __jsx(React.Fragment, null, __jsx(Box, {\n        display: \"flex\",\n        paddingX: \"1em\",\n        paddingY: \"1em\",\n        flexWrap: \"wrap\"\n      }, __jsx(Pagination, {\n        leftDisabled: pageNum === 0,\n        onLeft: () => setPageNum(pageNum - 1),\n        onRight: () => setPageNum(pageNum + 1)\n      }), __jsx(Box, {\n        flex: 1\n      }, __jsx(InputGroup, {\n        width: \"100%\",\n        borderColor: \"gray.300\"\n      }, __jsx(InputLeftElement, {\n        children: __jsx(Icon, {\n          name: \"search\",\n          color: \"gray.300\"\n        })\n      }), __jsx(Input, {\n        value: searchBar,\n        onChange: e => {\n          setSearchBar(e.target.value);\n          setPageNum(0);\n        },\n        onKeyPress: e => {\n          if (e.key === 'Enter') {\n            setSearchEntry(searchBar);\n          }\n        },\n        placeholder: \"Search\"\n      })))), (() => {\n        if (channelsError || !data || !data.channels) return null;\n        return __jsx(React.Fragment, null, __jsx(Box, {\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          background: \"#f5f5f5\",\n          paddingY: \".7em\",\n          paddingX: \"1em\"\n        }, option('Channel', data.channels.map(a => a.name), a => setSelectedChannel(a), selectedChannel), option('Location', ['US', 'CN', 'All'], a => setItemLocationCountry(a), itemLocationCountry), option('Items per page', [10, 50, 100], a => setLimit(a), limit)), searchEntry && data.channels.filter(order => order.name === selectedChannel)[0].type === 'MARKETPLACE' && __jsx(MarketplaceSearch, {\n          search: searchEntry,\n          limit,\n          sort: value,\n          pageNum,\n          exclude,\n          include,\n          priceCurrency,\n          price,\n          itemLocationCountry,\n          atcDisabled,\n          addMPItem\n        }), data.channels.filter(order => order.name === selectedChannel)[0].type === 'ZINC' && __jsx(ZincSearch, {\n          addZincItem: addZincItem,\n          atcDisabled: atcDisabled,\n          searchEntry: searchEntry,\n          token: data.channels.filter(c => c.type === 'ZINC')[0].settings.key\n        }), data.channels.filter(order => order.name === selectedChannel)[0].type === 'SHOPIFY' && __jsx(ShopifySearch, {\n          addVariantToCart: (a, b) => addCustomItem(a, b),\n          checkout: () => toast({\n            position: 'top-right',\n            title: `Checkout`,\n            status: 'success',\n            duration: 2000,\n            isClosable: true\n          }),\n          client: \"Marketplace\",\n          atcDisabled: atcDisabled,\n          searchEntry: searchEntry\n        }));\n      })());\n    }\n\n    return __jsx(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: \"100%\",\n      height: \"200px\"\n    }, __jsx(Link, {\n      href: \"/settings\"\n    }, __jsx(\"a\", null, __jsx(Button, {\n      background: \"#DDEBF7\",\n      borderRadius: 3\n    }, __jsx(Heading, {\n      fontSize: \"lg\",\n      fontWeight: 700,\n      color: \"#1070CA\"\n    }, \"APPLY FOR BETA ACCESS\")))));\n  })()));\n};\n\nexport default Find;","map":{"version":3,"sources":["/Users/junaid/openship2/components/find/Find.js"],"names":["React","useState","Link","gql","useQuery","Box","Button","InputGroup","InputLeftElement","Input","Icon","Heading","useToast","CURRENT_USER_QUERY","Pagination","CardStyle","MarketplaceSearch","ZincSearch","ShopifySearch","CHANNELS_QUERY","channelsQueryVars","getItemGroup","sortOptions","label","value","option","name","options","update","selected","map","a","index","Find","headerSize","atcDisabled","addMPItem","addCustomItem","addZincItem","setValue","searchBar","setSearchBar","searchEntry","setSearchEntry","limit","setLimit","pageNum","setPageNum","min","setMin","max","setMax","price","setPrice","priceCurrency","setPriceCurrency","itemLocationCountry","setItemLocationCountry","include","setInclude","exclude","setExclude","selectedChannel","setSelectedChannel","data","me","allChannels","variables","error","channelsError","loading","channelsLoading","toast","buyer","status","e","target","key","channels","filter","order","type","search","sort","c","settings","b","position","title","duration","isClosable"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Link from 'next/link';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport {\n  Box,\n  Button,\n  InputGroup,\n  InputLeftElement,\n  Input,\n  Icon,\n  Heading,\n  useToast,\n} from '@chakra-ui/core';\nimport { CURRENT_USER_QUERY } from '../user/User';\nimport Pagination from '../common/Pagination';\nimport { CardStyle } from '../common/DefaultStyles';\nimport MarketplaceSearch from './MarketplaceSearch';\nimport ZincSearch from './ZincSearch';\nimport ShopifySearch from './ShopifySearch';\nimport { CHANNELS_QUERY, channelsQueryVars } from '../layout/Page';\n\nexport const getItemGroup = gql`\n  query getItemGroup($itemID: String) {\n    getItemGroup(itemID: $itemID) {\n      item\n    }\n  }\n`;\n\nconst sortOptions = [\n  {\n    label: 'Lowest Price',\n    value: 'price',\n  },\n  {\n    label: 'Highest Price',\n    value: '-price',\n  },\n  {\n    label: 'Best Match',\n    value: 'match',\n  },\n];\n\nexport const option = (name, options, update, selected) => (\n  <Box marginBottom={2} marginRight={5}>\n    <Heading fontSize=\"sm\" color=\"text\" fontWeight={500} marginBottom={0}>\n      {name}\n    </Heading>\n    <Box display=\"flex\">\n      {options.map((a, index) => (\n        <Box\n          id={a}\n          key={index}\n          p={1}\n          mr={2}\n          mt={2}\n          borderRadius={3}\n          bg={a === selected ? '#e2e9f2' : 'transparent'}\n          onClick={() => update(a)}\n          cursor=\"pointer\"\n        >\n          <Heading\n            fontSize=\"xs\"\n            fontWeight={500}\n            px={1}\n            color={a === selected ? '#1070ca' : '#425a70'}\n            letterSpacing=\"wide\"\n            textTransform=\"uppercase\"\n          >\n            {a}\n          </Heading>\n        </Box>\n      ))}\n    </Box>\n  </Box>\n);\n\nconst Find = ({\n  headerSize,\n  atcDisabled,\n  addMPItem,\n  addCustomItem,\n  addZincItem,\n}) => {\n  const [value, setValue] = useState('price');\n  const [searchBar, setSearchBar] = useState('');\n  const [searchEntry, setSearchEntry] = useState('');\n  const [limit, setLimit] = useState(10);\n  const [pageNum, setPageNum] = useState(0);\n  const [min, setMin] = useState('');\n  const [max, setMax] = useState('');\n  const [price, setPrice] = useState(null);\n  const [priceCurrency, setPriceCurrency] = useState('USD');\n  const [itemLocationCountry, setItemLocationCountry] = useState('US');\n  const [include, setInclude] = useState([]);\n  const [exclude, setExclude] = useState([]);\n  const [selectedChannel, setSelectedChannel] = useState('Marketplace');\n\n  const {\n    data: { me },\n  } = useQuery(CURRENT_USER_QUERY);\n\n  const allChannels = useQuery(CHANNELS_QUERY, {\n    variables: channelsQueryVars,\n  });\n\n  const { data, error: channelsError, loading: channelsLoading } = allChannels;\n\n  const toast = useToast();\n\n  return (\n    <>\n      <Box display=\"flex\" py={4}>\n        <Box flex={1} alignItems=\"center\" display=\"flex\">\n          <Heading fontSize=\"2xl\" color=\"text\" fontWeight={500}>\n            Marketplace\n          </Heading>\n        </Box>\n      </Box>\n      <Box {...CardStyle} background=\"white\">\n        {(() => {\n          if (!me) return null;\n          if (me.buyer && me.buyer.status) {\n            return (\n              <>\n                <Box\n                  display=\"flex\"\n                  paddingX=\"1em\"\n                  paddingY=\"1em\"\n                  flexWrap=\"wrap\"\n                >\n                  <Pagination\n                    leftDisabled={pageNum === 0}\n                    onLeft={() => setPageNum(pageNum - 1)}\n                    onRight={() => setPageNum(pageNum + 1)}\n                  />\n                  <Box flex={1}>\n                    <InputGroup width=\"100%\" borderColor=\"gray.300\">\n                      <InputLeftElement\n                        children={<Icon name=\"search\" color=\"gray.300\" />}\n                      />\n                      <Input\n                        value={searchBar}\n                        onChange={e => {\n                          setSearchBar(e.target.value);\n                          setPageNum(0);\n                        }}\n                        onKeyPress={e => {\n                          if (e.key === 'Enter') {\n                            setSearchEntry(searchBar);\n                          }\n                        }}\n                        placeholder=\"Search\"\n                      />\n                    </InputGroup>\n                  </Box>\n                </Box>\n                {(() => {\n                  if (channelsError || !data || !data.channels) return null;\n                  return (\n                    <>\n                      <Box\n                        display=\"flex\"\n                        flexWrap=\"wrap\"\n                        background=\"#f5f5f5\"\n                        paddingY=\".7em\"\n                        paddingX=\"1em\"\n                      >\n                        {option(\n                          'Channel',\n                          data.channels.map(a => a.name),\n                          a => setSelectedChannel(a),\n                          selectedChannel\n                        )}\n                        {option(\n                          'Location',\n                          ['US', 'CN', 'All'],\n                          a => setItemLocationCountry(a),\n                          itemLocationCountry\n                        )}\n                        {option(\n                          'Items per page',\n                          [10, 50, 100],\n                          a => setLimit(a),\n                          limit\n                        )}\n                      </Box>\n                      {searchEntry &&\n                        data.channels.filter(\n                          order => order.name === selectedChannel\n                        )[0].type === 'MARKETPLACE' && (\n                          <MarketplaceSearch\n                            {...{\n                              search: searchEntry,\n                              limit,\n                              sort: value,\n                              pageNum,\n                              exclude,\n                              include,\n                              priceCurrency,\n                              price,\n                              itemLocationCountry,\n                              atcDisabled,\n                              addMPItem,\n                            }}\n                          />\n                        )}\n                      {data.channels.filter(\n                        order => order.name === selectedChannel\n                      )[0].type === 'ZINC' && (\n                        <ZincSearch\n                          addZincItem={addZincItem}\n                          atcDisabled={atcDisabled}\n                          searchEntry={searchEntry}\n                          token={\n                            data.channels.filter(c => c.type === 'ZINC')[0]\n                              .settings.key\n                          }\n                        />\n                      )}\n                      {data.channels.filter(\n                        order => order.name === selectedChannel\n                      )[0].type === 'SHOPIFY' && (\n                        <ShopifySearch\n                          addVariantToCart={(a, b) => addCustomItem(a, b)}\n                          checkout={() =>\n                            toast({\n                              position: 'top-right',\n                              title: `Checkout`,\n                              status: 'success',\n                              duration: 2000,\n                              isClosable: true,\n                            })\n                          }\n                          client=\"Marketplace\"\n                          atcDisabled={atcDisabled}\n                          searchEntry={searchEntry}\n                        />\n                      )}\n                    </>\n                  );\n                })()}\n              </>\n            );\n          }\n          return (\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              width=\"100%\"\n              height=\"200px\"\n            >\n              <Link href=\"/settings\">\n                <a>\n                  <Button background=\"#DDEBF7\" borderRadius={3}>\n                    <Heading fontSize=\"lg\" fontWeight={700} color=\"#1070CA\">\n                      APPLY FOR BETA ACCESS\n                    </Heading>\n                  </Button>\n                </a>\n              </Link>\n            </Box>\n          );\n        })()}\n      </Box>\n    </>\n  );\n};\n\nexport default Find;\n"]},"metadata":{},"sourceType":"module"}