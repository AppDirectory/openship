{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { CardElement, StripeProvider, Elements, injectStripe } from 'react-stripe-elements';\nimport { Box, Heading, Button, Input } from '@chakra-ui/core';\n\nvar createOptions = function createOptions(fontSize, padding) {\n  return {\n    style: {\n      base: {\n        fontSize: fontSize,\n        color: '#424770',\n        letterSpacing: '0.025em',\n        fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n        '::placeholder': {\n          color: '#aab7c4'\n        },\n        padding: padding\n      },\n      invalid: {\n        color: '#9e2146'\n      }\n    }\n  };\n};\n\nvar _CardForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(_CardForm, _React$Component);\n\n  function _CardForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, _CardForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(_CardForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      name: '',\n      addressLine1: '',\n      addressLine2: '',\n      addressCity: '',\n      addressState: '',\n      addressZip: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (ev) {\n      ev.preventDefault();\n      var stripe = _this.props.stripe;\n\n      if (stripe) {\n        stripe.createToken(_objectSpread({}, _this.state)).then(function _callee(payload) {\n          var customer;\n          return _regeneratorRuntime.async(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return _regeneratorRuntime.awrap(_this.props.createCustomer({\n                    variables: {\n                      userInput: {\n                        token: {\n                          id: payload.token.id\n                        }\n                      }\n                    }\n                  }));\n\n                case 2:\n                  customer = _context.sent;\n\n                case 3:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(_CardForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var fontSize = this.props.fontSize;\n      var _this$state = this.state,\n          name = _this$state.name,\n          addressLine1 = _this$state.addressLine1,\n          addressLine2 = _this$state.addressLine2;\n      return __jsx(React.Fragment, null, __jsx(\"form\", {\n        onSubmit: function onSubmit(e) {\n          return _this2.handleSubmit(e, createCustomer);\n        }\n      }, __jsx(Box, {\n        padding: 4,\n        paddingBottom: 2\n      }, __jsx(Heading, {\n        fontSize: \"md\",\n        marginBottom: 2,\n        fontWeight: 500,\n        color: \"#425A70\"\n      }, \"Name\"), __jsx(Box, {\n        elevation: 1,\n        borderRadius: 3,\n        marginBottom: 4,\n        width: \"100%\"\n      }, __jsx(Input, {\n        value: name,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            name: e.target.value\n          });\n        },\n        placeholder: \"James Michael\",\n        height: \"32px\",\n        px: 3,\n        borderColor: \"transparent\"\n      })), __jsx(Heading, {\n        fontSize: \"md\",\n        marginBottom: 2,\n        fontWeight: 500,\n        color: \"#425A70\"\n      }, \"Address\"), __jsx(Box, {\n        elevation: 1,\n        borderRadius: 3,\n        marginBottom: 4,\n        width: \"100%\"\n      }, __jsx(Input, {\n        value: addressLine1,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            addressLine1: e.target.value\n          });\n        },\n        placeholder: \"2 Infinite Loop\",\n        height: \"32px\",\n        px: 3,\n        borderColor: \"transparent\"\n      })), __jsx(Heading, {\n        fontSize: \"md\",\n        marginBottom: 2,\n        fontWeight: 500,\n        color: \"#425A70\"\n      }, \"Suite (optional)\"), __jsx(Box, {\n        elevation: 1,\n        borderRadius: 3,\n        marginBottom: 4,\n        width: \"100%\"\n      }, __jsx(Input, {\n        value: addressLine2,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            addressLine2: e.target.value\n          });\n        },\n        placeholder: \"Suite 5\",\n        height: \"32px\",\n        px: 3,\n        borderColor: \"transparent\"\n      })), __jsx(Heading, {\n        fontSize: \"md\",\n        marginBottom: 2,\n        fontWeight: 500,\n        color: \"#425A70\"\n      }, \"Credit or Debit Card Number\"), __jsx(Box, {\n        marginBottom: 4,\n        background: \"#fff\",\n        padding: 2,\n        borderRadius: 3,\n        elevation: 1\n      }, __jsx(CardElement, createOptions(fontSize)))), __jsx(Button, {\n        height: 35,\n        fontSize: 15,\n        width: \"100%\",\n        color: \"#fff\",\n        letterSpacing: \"wider\",\n        fontWeight: 700,\n        textTransform: \"uppercase\",\n        background: \"#1070ca\",\n        borderBottomLeftRadius: \"5\",\n        borderBottomRightRadius: \"5\",\n        borderTopLeftRadius: \"0\",\n        borderTopRightRadius: \"0\",\n        _hover: {\n          opacity: 0.8\n        }\n      }, \"Submit\")));\n    }\n  }]);\n\n  return _CardForm;\n}(React.Component);\n\nvar CardForm = injectStripe(_CardForm);\n/* eslint-disable */\n\nvar AddCard = /*#__PURE__*/function (_React$Component2) {\n  _inherits(AddCard, _React$Component2);\n\n  function AddCard() {\n    var _this3;\n\n    _classCallCheck(this, AddCard);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(AddCard).call(this));\n    _this3.state = {\n      renderElements: false\n    };\n    return _this3;\n  }\n\n  _createClass(AddCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        renderElements: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var renderElements = this.state.renderElements;\n      return renderElements && __jsx(StripeProvider, {\n        apiKey: \"pk_test_8DBiS9gU5BhsZZ0KkXllJppT00APOMomgF\"\n      }, __jsx(Elements, null, __jsx(CardForm, {\n        fontSize: 12\n      })));\n    }\n  }]);\n\n  return AddCard;\n}(React.Component);\n/* eslint-disable */\n\n\nexport default AddCard;","map":null,"metadata":{},"sourceType":"module"}