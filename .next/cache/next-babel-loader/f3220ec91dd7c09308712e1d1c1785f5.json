{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { Box, Icon, Text } from '@chakra-ui/core';\nconst errorCard = {\n  paddingX: 10,\n  paddingY: 5,\n  background: '#FAE2E2',\n  borderRadius: 3,\n  display: 'flex',\n  alignItems: 'center'\n};\n\nconst DisplayError = ({\n  error\n}) => {\n  if (!error || !error.message) return null;\n\n  if (error.networkError && error.networkError.result && error.networkError.result.errors.length) {\n    return error.networkError.result.errors.map((error, i) => __jsx(Box, _extends({\n      key: i\n    }, errorCard), __jsx(Icon, {\n      name: \"warning-2\",\n      color: \"red.400\"\n    }), __jsx(Text, {\n      color: \"#EC4C47\",\n      fontWeight: 500,\n      fontSize: \"14px\"\n    }, error.message.replace('GraphQL error: ', ''))));\n  }\n\n  return __jsx(Box, errorCard, __jsx(Icon, {\n    icon: \"warning-sign\",\n    color: \"danger\",\n    marginRight: 10\n  }), __jsx(Text, {\n    color: \"#EC4C47\",\n    fontWeight: 500,\n    fontSize: \"14px\"\n  }, error.message.replace('GraphQL error: ', '')));\n};\n\nDisplayError.defaultProps = {\n  error: {}\n};\nexport default DisplayError;","map":null,"metadata":{},"sourceType":"module"}