{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport MktProduct from '../MarketplaceSearch/MktProduct';\n\nfunction ShopifySearch({\n  addZincItem,\n  atcDisabled,\n  searchEntry,\n  token\n}) {\n  const {\n    0: results,\n    1: setResults\n  } = useState([]);\n  const {\n    0: error,\n    1: setError\n  } = useState('');\n  useEffect(() => {\n    async function findItems() {\n      const query = `\n      query AllOrdersQuery($query: String)\n      {\n        products(query: $query first:5) \n        {\n          pageInfo {\n            hasNextPage\n            hasPreviousPage\n          }\n          edges {\n            node {\n              id\n              title\n              options {\n                id\n                name\n                values\n              }\n              variants(first: 250) {\n                pageInfo {\n                  hasNextPage\n                  hasPreviousPage\n                }\n                edges {\n                  node {\n                    id\n                    title\n                    selectedOptions {\n                      name\n                      value\n                    }\n                    image {\n                      src\n                    }\n                    price\n                  }\n                }\n              }\n              images(first: 250) {\n                pageInfo {\n                  hasNextPage\n                  hasPreviousPage\n                }\n                edges {\n                  node {\n                    src\n                  }\n                }\n              }\n            }\n          }\n          }\n        }\n      `;\n      const variables = {\n        query: searchEntry\n      };\n      const items = await fetch(`https://${process.env.CUSTOM_SHOP_NAME}.myshopify.com/api/graphql`, {\n        method: 'POST',\n        body: JSON.stringify({\n          query,\n          variables\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Shopify-Storefront-Access-Token': process.env.CUSTOM_SHOP_ACCESS\n        }\n      }).then(res => res.json()).then(json => setResults(json.data.products.edges));\n    }\n\n    searchEntry && findItems();\n  }, [searchEntry]);\n  return results.map(product => __jsx(MktProduct, {\n    addVariantToCart: (a, b) => addCustomItem(a, b),\n    checkout: () => toaster.success(`checkout`),\n    key: product.node.id.toString(),\n    product: product.node,\n    client: \"Marketplace\",\n    atcDisabled: atcDisabled\n  }));\n}\n\nexport default ShopifySearch;","map":{"version":3,"sources":["/Users/junaid/openship2/components/find/ShopifySearch/index.js"],"names":["React","useState","useEffect","MktProduct","ShopifySearch","addZincItem","atcDisabled","searchEntry","token","results","setResults","error","setError","findItems","query","variables","items","fetch","process","env","CUSTOM_SHOP_NAME","method","body","JSON","stringify","headers","CUSTOM_SHOP_ACCESS","then","res","json","data","products","edges","map","product","a","b","addCustomItem","toaster","success","node","id","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,iCAAvB;;AAEA,SAASC,aAAT,CAAuB;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,WAAf;AAA4BC,EAAAA,WAA5B;AAAyCC,EAAAA;AAAzC,CAAvB,EAAyE;AACvE,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACU,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeW,SAAf,GAA2B;AACzB,YAAMC,KAAK,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAAf;AAuDA,YAAMC,SAAS,GAAG;AAChBD,QAAAA,KAAK,EAAEP;AADS,OAAlB;AAIA,YAAMS,KAAK,GAAG,MAAMC,KAAK,CACtB,WAAUC,OAAO,CAACC,GAAR,CAAYC,gBAAiB,4BADjB,EAEvB;AACEC,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEV,UAAAA,KAAF;AAASC,UAAAA;AAAT,SAAf,CAFR;AAGEU,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,+CAAqCP,OAAO,CAACC,GAAR,CAAYO;AAF1C;AAHX,OAFuB,CAAL,CAWjBC,IAXiB,CAWZC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAXK,EAYjBF,IAZiB,CAYZE,IAAI,IAAInB,UAAU,CAACmB,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmBC,KAApB,CAZN,CAApB;AAaD;;AAEDzB,IAAAA,WAAW,IAAIM,SAAS,EAAxB;AACD,GA7EQ,EA6EN,CAACN,WAAD,CA7EM,CAAT;AA+EA,SAAOE,OAAO,CAACwB,GAAR,CAAYC,OAAO,IACxB,MAAC,UAAD;AACE,IAAA,gBAAgB,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUC,aAAa,CAACF,CAAD,EAAIC,CAAJ,CAD3C;AAEE,IAAA,QAAQ,EAAE,MAAME,OAAO,CAACC,OAAR,CAAiB,UAAjB,CAFlB;AAGE,IAAA,GAAG,EAAEL,OAAO,CAACM,IAAR,CAAaC,EAAb,CAAgBC,QAAhB,EAHP;AAIE,IAAA,OAAO,EAAER,OAAO,CAACM,IAJnB;AAKE,IAAA,MAAM,EAAC,aALT;AAME,IAAA,WAAW,EAAElC;AANf,IADK,CAAP;AAUD;;AAED,eAAeF,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MktProduct from '../MarketplaceSearch/MktProduct';\n\nfunction ShopifySearch({ addZincItem, atcDisabled, searchEntry, token }) {\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    async function findItems() {\n      const query = `\n      query AllOrdersQuery($query: String)\n      {\n        products(query: $query first:5) \n        {\n          pageInfo {\n            hasNextPage\n            hasPreviousPage\n          }\n          edges {\n            node {\n              id\n              title\n              options {\n                id\n                name\n                values\n              }\n              variants(first: 250) {\n                pageInfo {\n                  hasNextPage\n                  hasPreviousPage\n                }\n                edges {\n                  node {\n                    id\n                    title\n                    selectedOptions {\n                      name\n                      value\n                    }\n                    image {\n                      src\n                    }\n                    price\n                  }\n                }\n              }\n              images(first: 250) {\n                pageInfo {\n                  hasNextPage\n                  hasPreviousPage\n                }\n                edges {\n                  node {\n                    src\n                  }\n                }\n              }\n            }\n          }\n          }\n        }\n      `;\n\n      const variables = {\n        query: searchEntry,\n      };\n\n      const items = await fetch(\n        `https://${process.env.CUSTOM_SHOP_NAME}.myshopify.com/api/graphql`,\n        {\n          method: 'POST',\n          body: JSON.stringify({ query, variables }),\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Shopify-Storefront-Access-Token': process.env.CUSTOM_SHOP_ACCESS,\n          },\n        }\n      )\n        .then(res => res.json())\n        .then(json => setResults(json.data.products.edges));\n    }\n\n    searchEntry && findItems();\n  }, [searchEntry]);\n\n  return results.map(product => (\n    <MktProduct\n      addVariantToCart={(a, b) => addCustomItem(a, b)}\n      checkout={() => toaster.success(`checkout`)}\n      key={product.node.id.toString()}\n      product={product.node}\n      client=\"Marketplace\"\n      atcDisabled={atcDisabled}\n    />\n  ));\n}\n\nexport default ShopifySearch;\n"]},"metadata":{},"sourceType":"module"}