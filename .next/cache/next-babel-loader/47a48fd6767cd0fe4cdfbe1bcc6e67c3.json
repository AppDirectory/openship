{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Box, Spinner } from '@chakra-ui/core';\nimport { useQuery } from '@apollo/react-hooks';\nimport OrderDetails from '../common/OrderDetails';\nimport { SHOP_ORDERS_QUERY } from '../completed/completedOrderList/CompletedOrderList';\n\nfunction Order(_ref) {\n  var store = _ref.store,\n      name = _ref.name;\n\n  var _useQuery = useQuery(SHOP_ORDERS_QUERY, {\n    variables: {\n      domain: \"\".concat(store, \".myshopify.com\"),\n      query: name,\n      first: 10\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  function formatNote(note) {\n    if (!note.includes('Walmart')) {\n      return note.split('||').map(function (a) {\n        var obj = {};\n        a.split(',').forEach(function (b) {\n          obj[b.split(':')[0].trim()] = b.split(':')[1].trim();\n        });\n        obj.lineID = obj.lineID.split('|').map(function (c) {\n          return parseFloat(c);\n        });\n        obj.marketID = obj.marketID;\n        obj.transID = parseFloat(obj.transID);\n        return obj;\n      });\n    }\n\n    return null;\n  }\n\n  if (loading) return __jsx(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"100vh\"\n  }, __jsx(Spinner, {\n    size: 80\n  }));\n  if (error || !data.shopOrders) return __jsx(\"div\", null, error);\n  var note = data.shopOrders.edges[0].node.note;\n  return __jsx(Box, {\n    maxWidth: \"45em\"\n  }, __jsx(OrderDetails, _extends({}, data.shopOrders.edges[0].node, {\n    // note={note && formatNote(note)}\n    store: store\n  })));\n}\n\nexport default Order;","map":null,"metadata":{},"sourceType":"module"}