{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport AmzProduct from './AmzProduct';\nimport { front, prodFront } from '../../../config';\n\nfunction ZincSearch(_ref) {\n  var _addZincItem = _ref.addZincItem,\n      atcDisabled = _ref.atcDisabled,\n      searchEntry = _ref.searchEntry,\n      token = _ref.token;\n\n  var _useState = useState([]),\n      results = _useState[0],\n      setResults = _useState[1];\n\n  var _useState2 = useState(''),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  useEffect(function () {\n    function findItems() {\n      var res;\n      return _regeneratorRuntime.async(function findItems$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"\".concat(true ? front : prodFront, \"/api/zinc/search?query=\").concat(searchEntry, \"&token=\").concat(token)).then(function (res) {\n                return res.json();\n              }).then(function (json) {\n                return setResults(json);\n              })[\"catch\"](function (error) {\n                return setError('Error: ', error);\n              }));\n\n            case 2:\n              res = _context.sent;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    searchEntry && findItems();\n  }, [searchEntry, token]);\n  return results.map(function (product) {\n    return __jsx(React.Fragment, null, __jsx(\"div\", null, error), __jsx(AmzProduct, {\n      product: product,\n      addVariantToCart: function addVariantToCart(a) {\n        return toaster.success(a);\n      },\n      atcDisabled: atcDisabled,\n      addZincItem: function addZincItem(a, b, c, d, e) {\n        return _addZincItem(a, b, c, d, e);\n      }\n    }));\n  });\n}\n\nexport default ZincSearch;","map":{"version":3,"sources":["/Users/junaid/openship/components/find/ZincSearch/index.js"],"names":["React","useState","useEffect","AmzProduct","front","prodFront","ZincSearch","addZincItem","atcDisabled","searchEntry","token","results","setResults","error","setError","findItems","fetch","then","res","json","map","product","a","toaster","success","b","c","d","e"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,iBAAjC;;AAEA,SAASC,UAAT,OAAsE;AAAA,MAAhDC,YAAgD,QAAhDA,WAAgD;AAAA,MAAnCC,WAAmC,QAAnCA,WAAmC;AAAA,MAAtBC,WAAsB,QAAtBA,WAAsB;AAAA,MAATC,KAAS,QAATA,KAAS;;AAAA,kBACtCT,QAAQ,CAAC,EAAD,CAD8B;AAAA,MAC7DU,OAD6D;AAAA,MACpDC,UADoD;;AAAA,mBAE1CX,QAAQ,CAAC,EAAD,CAFkC;AAAA,MAE7DY,KAF6D;AAAA,MAEtDC,QAFsD;;AAIpEZ,EAAAA,SAAS,CAAC,YAAM;AACd,aAAea,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACoBC,KAAK,WAEnB,OAAyCZ,KAAzC,GAAiDC,SAF9B,oCAGKI,WAHL,oBAG0BC,KAH1B,EAAL,CAKfO,IALe,CAKV,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eALO,EAMfF,IANe,CAMV,UAAAE,IAAI;AAAA,uBAAIP,UAAU,CAACO,IAAD,CAAd;AAAA,eANM,WAOT,UAAAN,KAAK;AAAA,uBAAIC,QAAQ,CAAC,SAAD,EAAYD,KAAZ,CAAZ;AAAA,eAPI,CADpB;;AAAA;AACQK,cAAAA,GADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWAT,IAAAA,WAAW,IAAIM,SAAS,EAAxB;AACD,GAbQ,EAaN,CAACN,WAAD,EAAcC,KAAd,CAbM,CAAT;AAeA,SAAOC,OAAO,CAACS,GAAR,CAAY,UAAAC,OAAO;AAAA,WACxB,4BACE,mBAAMR,KAAN,CADF,EAEE,MAAC,UAAD;AACE,MAAA,OAAO,EAAEQ,OADX;AAEE,MAAA,gBAAgB,EAAE,0BAAAC,CAAC;AAAA,eAAIC,OAAO,CAACC,OAAR,CAAgBF,CAAhB,CAAJ;AAAA,OAFrB;AAGE,MAAA,WAAW,EAAEd,WAHf;AAIE,MAAA,WAAW,EAAE,qBAACc,CAAD,EAAIG,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAaC,CAAb;AAAA,eAAmBrB,YAAW,CAACe,CAAD,EAAIG,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAaC,CAAb,CAA9B;AAAA;AAJf,MAFF,CADwB;AAAA,GAAnB,CAAP;AAWD;;AAED,eAAetB,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport AmzProduct from './AmzProduct';\nimport { front, prodFront } from '../../../config';\n\nfunction ZincSearch({ addZincItem, atcDisabled, searchEntry, token }) {\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    async function findItems() {\n      const res = await fetch(\n        `${\n          process.env.NODE_ENV === 'development' ? front : prodFront\n        }/api/zinc/search?query=${searchEntry}&token=${token}`\n      )\n        .then(res => res.json())\n        .then(json => setResults(json))\n        .catch(error => setError('Error: ', error));\n    }\n\n    searchEntry && findItems();\n  }, [searchEntry, token]);\n\n  return results.map(product => (\n    <>\n      <div>{error}</div>\n      <AmzProduct\n        product={product}\n        addVariantToCart={a => toaster.success(a)}\n        atcDisabled={atcDisabled}\n        addZincItem={(a, b, c, d, e) => addZincItem(a, b, c, d, e)}\n      />\n    </>\n  ));\n}\n\nexport default ZincSearch;\n"]},"metadata":{},"sourceType":"module"}