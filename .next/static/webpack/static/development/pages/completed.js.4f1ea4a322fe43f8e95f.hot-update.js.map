{"version":3,"file":"static/webpack/static/development/pages/completed.js.4f1ea4a322fe43f8e95f.hot-update.js","sources":["webpack:///./components/common/OrderDetails.js"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  Heading,\n  Text,\n  Icon,\n  Badge,\n  Button,\n  useDisclosure,\n} from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\nimport Reshipment from './Reshipment';\n\nconst secondaryLayout = {\n  flex: '1 1 10rem',\n  marginLeft: '1.5rem',\n  marginTop: '.3rem',\n};\n\nconst Layout = {\n  flex: '2 2 20rem',\n  marginLeft: '1.5rem',\n  marginTop: '.3rem',\n};\n\nconst OrderDetailsComp = ({\n  backgroundColor,\n  name,\n  store,\n  processedAt,\n  fulfillments,\n  lineItems,\n  shippingAddress,\n  onOpen,\n}) => (\n  <>\n    <Box\n      display=\"flex\"\n      paddingY={4}\n      backgroundColor={backgroundColor}\n      boxShadow={backgroundColor && '0 0 1px rgba(67, 90, 111, 0.3)'}\n      paddingX={backgroundColor && 4}\n    >\n      <Box flex={1} alignItems=\"center\" display=\"flex\">\n        <Box>\n          <Heading size=\"lg\" fontWeight={600} color=\"text\">\n            {name}\n          </Heading>\n          <Heading\n            fontSize=\"xs\"\n            fontWeight={600}\n            color=\"gray.500\"\n            letterSpacing=\"wide\"\n            textTransform=\"uppercase\"\n            display=\"flex\"\n            alignItems=\"center\"\n          >\n            {store} Â·\n            <Text ml={1} color=\"#234361\" fontSize=\"xs\" fontWeight={400}>\n              {processedAt &&\n                Intl.DateTimeFormat('en-US').format(Date.parse(processedAt))}\n            </Text>\n          </Heading>\n          <Badge\n            marginTop={2}\n            variantColor={fulfillments.length > 0 ? 'green' : 'red'}\n            variant=\"solid\"\n          >\n            {fulfillments.length > 0 ? 'Processed' : 'Not Processed'}\n          </Badge>\n        </Box>\n      </Box>\n      {/* <Button\n          background=\"#DDEBF7\"\n          borderRadius={3}\n          marginRight={5}\n          onClick={onOpen}\n        >\n          <Box padding={3} display=\"flex\" alignItems=\"center\">\n            <Heading\n              size={100}\n              fontSize={13}\n              fontWeight={700}\n              color=\"#1070CA\"\n              marginRight={2}\n            >\n              RESHIP\n            </Heading>\n            <Icon size={4} color=\"#1070CA\" name=\"repeat\" />\n          </Box>\n        </Button> */}\n      <Button\n        background=\"#DDEBF7\"\n        borderRadius={3}\n        marginRight={1}\n        px={3}\n        height={8}\n        onClick={onOpen}\n      >\n        <Heading fontSize=\"sm\" fontWeight={700} color=\"#1070CA\" marginRight={2}>\n          RESHIP\n        </Heading>\n        <Icon size={4} color=\"#1070CA\" name=\"repeat\" />\n      </Button>\n    </Box>\n    <Box\n      display=\"flex\"\n      flexWrap=\"wrap\"\n      marginLeft=\"-1.5rem\"\n      marginTop=\"-.3rem\"\n      padding={backgroundColor && 4}\n    >\n      <Box {...Layout}>\n        {lineItems.edges.map(a => {\n          const ID = a.node.id\n            .toString()\n            .split('/')\n            .pop();\n          return (\n            <Box\n              boxShadow=\"sm\"\n              background=\"white\"\n              padding={2}\n              marginBottom={15}\n              key={ID}\n            >\n              <Box display=\"flex\" alignItems=\"center\">\n                <Box>\n                  <Box\n                    as=\"img\"\n                    src={a.node.image && a.node.image.originalSrc}\n                    borderStyle=\"solid\"\n                    borderWidth=\"1px\"\n                    borderRadius={3}\n                    borderColor=\"#e8e9ea\"\n                    width=\"130px\"\n                  />\n                </Box>\n                <Box marginLeft={4}>\n                  <Heading size=\"sm\" fontWeight={600} color=\"text\">\n                    {a.node.name}\n                  </Heading>\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <Text color=\"#66788a\" fontSize={14} mr={1}>\n                      {ID}\n                    </Text>\n                    -\n                    <Text color=\"#234361\" fontSize=\"sm\" ml={1}>\n                      QUANTITY: {a.node.quantity}\n                    </Text>\n                  </Box>\n                </Box>\n              </Box>\n              {/* {props.note && mOrderLineItem(props.note, Number(ID))} */}\n            </Box>\n          );\n        })}\n      </Box>\n      <Box {...secondaryLayout}>\n        <Box boxShadow=\"sm\" background=\"white\" padding={3} marginBottom={15}>\n          <Heading\n            fontSize=\"xs\"\n            fontWeight={500}\n            color=\"gray.500\"\n            letterSpacing=\"wide\"\n            textTransform=\"uppercase\"\n            mb={2}\n          >\n            Customer\n          </Heading>\n          <Box display=\"block\">\n            <Box fontSize=\"sm\" color=\"#425A70\" fontWeight={500}>\n              <Box>\n                {shippingAddress.name.split(' ')[0]}{' '}\n                {shippingAddress.name.split(' ').pop()}\n              </Box>\n              {shippingAddress.address1} {shippingAddress.address2}\n              <br />\n              {shippingAddress.city}\n              {', '}\n              {shippingAddress.province} {shippingAddress.zip}\n            </Box>\n          </Box>\n        </Box>\n        {fulfillments.length > 0 && (\n          <Box boxShadow=\"sm\" background=\"white\" padding={3} marginBottom={15}>\n            <Heading\n              fontSize=\"xs\"\n              fontWeight={500}\n              color=\"gray.500\"\n              letterSpacing=\"wide\"\n              textTransform=\"uppercase\"\n              mb={2}\n            >\n              Shipments\n            </Heading>\n            <Box display=\"block\">\n              {fulfillments.map(a =>\n                a.trackingInfo.map((b, index) => (\n                  <Box key={index} display=\"flex\" alignItems=\"center\">\n                    <Icon\n                      name=\"check-circle\n\n\"\n                      color=\"#47B881\"\n                      marginRight={4}\n                    />\n                    <a href={b.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                      <Box fontSize=\"sm\" color=\"#425A70\" fontWeight={500}>\n                        {b.number}\n                      </Box>\n                    </a>\n                  </Box>\n                ))\n              )}\n            </Box>\n          </Box>\n        )}\n      </Box>\n    </Box>\n  </>\n);\n\nconst OrderDetails = props => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      <Reshipment\n        isOpen={isOpen}\n        onClose={onClose}\n        order={props}\n        shop={props.store}\n      />\n      <OrderDetailsComp {...props} onOpen={onOpen} />\n    </>\n  );\n};\n\nexport default OrderDetails;\n\nexport { OrderDetailsComp };\n\nOrderDetails.propTypes = {\n  store: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  name: PropTypes.string,\n  processedAt: PropTypes.string,\n  note: PropTypes.object,\n  lineItems: PropTypes.array,\n  shippingAddress: PropTypes.object,\n  fulfillments: PropTypes.array,\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AASA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AA6BA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AALA;AASA;AAIA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AASA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAVA;AADA;AA5KA;AACA;AAqMA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;;;A","sourceRoot":""}