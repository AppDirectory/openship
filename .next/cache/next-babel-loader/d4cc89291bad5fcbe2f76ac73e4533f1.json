{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation SIGNUP_MUTATION($email: String!) {\\n    requestReset(email: $email) {\\n      message\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Userform from './Userform';\nvar REUQEST_RESET_MUTATION = gql(_templateObject());\n\nfunction RequestReset(_ref) {\n  var formChange = _ref.formChange;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  return React.createElement(Mutation, {\n    mutation: REUQEST_RESET_MUTATION,\n    variables: {\n      email: email\n    }\n  }, function (reset, _ref2) {\n    var error = _ref2.error,\n        loading = _ref2.loading,\n        called = _ref2.called;\n    return React.createElement(Userform, {\n      title: \"Please enter your email and we'll send a link to reset your password\",\n      handleToggleClick: function handleToggleClick() {\n        return formChange();\n      },\n      buttonTitle: \"Send Reset Link\",\n      buttonColor: \"#14B5D0\",\n      error: error,\n      loading: loading,\n      buttonDisabled: !email,\n      fields: [{\n        label: 'Email',\n        value: email,\n        onChange: setEmail,\n        icon: 'envelope'\n      }],\n      bottomLinkText: \"Back to sign in\",\n      onSubmit:\n      /*#__PURE__*/\n      function () {\n        var _ref3 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(e) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  e.preventDefault();\n                  _context.next = 3;\n                  return reset();\n\n                case 3:\n                  setEmail('');\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref3.apply(this, arguments);\n        };\n      }(),\n      success: called\n    });\n  });\n}\n\nexport default RequestReset;","map":null,"metadata":{},"sourceType":"module"}