{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport React from \"react\";\nimport { useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { Pane, TextInput, Heading, Text, Code, Switch } from 'evergreen-ui';\nimport PropTypes from 'prop-types';\nimport { front, prodFront, prodEndpoint } from '../../config';\n\nfunction getWebhooks(domain, accessToken, setResults) {\n  var url = \"\".concat(process.env.NODE_ENV === 'development' ? front : prodFront, \"/\").concat(accessToken, \"/graphql\");\n  fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify({\n      query: \"\\n    {\\n      webhookSubscriptions(first :5\\n        callbackUrl: \\\"\".concat(prodEndpoint, \"order?spdn=\").concat(domain, \"\\\"\\n        ) {\\n          edges{\\n            node{\\n              id\\n              callbackUrl\\n              createdAt\\n              topic\\n              includeFields\\n            }\\n          }\\n        }\\n      }\\n    \")\n    })\n  }).then(function (res) {\n    return res.json();\n  }).then(function (res) {\n    if (res.data) {\n      var results = res.data.webhookSubscriptions.edges;\n      setResults(results);\n    }\n  });\n}\n\nfunction createWebhook(domain, accessToken, setResults) {\n  var url = \"\".concat(process.env.NODE_ENV === 'development' ? front : prodFront, \"/\").concat(accessToken, \"/graphql\");\n  fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify({\n      query: \"\\n      mutation webhookSubscriptionCreate(\\n        $topic: WebhookSubscriptionTopic!\\n        $webhookSubscription: WebhookSubscriptionInput!\\n      ) {\\n        webhookSubscriptionCreate(\\n          topic: $topic\\n          webhookSubscription: $webhookSubscription\\n        ) {\\n          userErrors {\\n            field\\n            message\\n          }\\n          webhookSubscription {\\n            id\\n          }\\n        }\\n      }\\n    \",\n      variables: {\n        topic: 'ORDERS_CREATE',\n        webhookSubscription: {\n          callbackUrl: \"\".concat(prodEndpoint, \"order?spdn=\").concat(domain),\n          format: 'JSON'\n        }\n      }\n    })\n  }).then(function (res) {\n    return res.json();\n  }).then(function (res) {\n    var webhook = res.data.webhookSubscriptionCreate;\n    getWebhooks(domain, accessToken, setResults);\n  });\n}\n\nfunction deleteWebhook(id, domain, accessToken, setResults) {\n  var url = \"\".concat(process.env.NODE_ENV === 'development' ? front : prodFront, \"/\").concat(accessToken, \"/graphql\");\n  fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify({\n      query: \"\\n      mutation   {\\n        webhookSubscriptionDelete(\\n          id: \\\"\".concat(id, \"\\\"\\n        ) {\\n          deletedWebhookSubscriptionId\\n        }\\n      }\\n    \")\n    })\n  }).then(function (res) {\n    return res.json();\n  }).then(function (res) {\n    getWebhooks(domain, accessToken, setResults);\n  });\n}\n\nvar WebhookSwitch = function WebhookSwitch(_ref) {\n  var domain = _ref.domain,\n      accessToken = _ref.accessToken;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      results = _useState2[0],\n      setResults = _useState2[1];\n\n  useEffect(function () {\n    getWebhooks(domain, accessToken, setResults);\n  }, [domain, accessToken]);\n\n  function handleSwitch(e) {\n    if (e.target.checked) {\n      createWebhook(domain, accessToken, setResults);\n    } else {\n      deleteWebhook(results[0].node.id, domain, accessToken, setResults);\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Pane, {\n    paddingY: 10,\n    paddingX: 15,\n    background: \"#f5f5f5\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\"\n  }, React.createElement(Pane, {\n    paddingRight: 15\n  }, React.createElement(Heading, {\n    size: 500,\n    fontSize: \"15px\",\n    fontWeight: 500\n  }, \"Push orders to Openship\"), React.createElement(Text, {\n    size: 300\n  }, \"Orders will be pushed to the pending tab to be fulfilled\")), React.createElement(Switch, {\n    marginLeft: \"auto\",\n    checked: results.length > 0,\n    onChange: function onChange(e) {\n      return handleSwitch(e);\n    }\n  })), results.map(function (a) {\n    return React.createElement(Pane, {\n      paddingY: 10,\n      paddingX: 15\n    }, React.createElement(Pane, {\n      display: \"flex\",\n      alignItems: \"center\",\n      marginBottom: 10\n    }, React.createElement(Text, {\n      size: 400,\n      paddingRight: 5,\n      fontWeight: 500,\n      align: \"right\",\n      marginRight: 5,\n      flexBasis: \"100px\"\n    }, \"Endpoint:\"), React.createElement(Code, {\n      fontSize: \"12px\",\n      size: 300,\n      wordWrap: \"break-word\"\n    }, \"Openship\")), React.createElement(Pane, {\n      display: \"flex\",\n      alignItems: \"center\"\n    }, React.createElement(Text, {\n      size: 400,\n      paddingRight: 5,\n      fontWeight: 500,\n      align: \"right\",\n      marginRight: 5,\n      flexBasis: \"100px\"\n    }, \"Topic:\"), React.createElement(Code, {\n      fontSize: \"12px\",\n      size: 300\n    }, a.node.topic)));\n  }));\n};\n\nexport default WebhookSwitch;\nWebhookSwitch.propTypes = {\n  domain: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/Users/junaid/openship/components/shops/WebhookSwitch.js"],"names":["useState","useEffect","fetch","Pane","TextInput","Heading","Text","Code","Switch","PropTypes","front","prodFront","prodEndpoint","getWebhooks","domain","accessToken","setResults","url","process","env","NODE_ENV","method","headers","body","query","then","res","json","data","results","webhookSubscriptions","edges","createWebhook","variables","topic","webhookSubscription","callbackUrl","format","webhook","webhookSubscriptionCreate","deleteWebhook","id","WebhookSwitch","handleSwitch","e","target","checked","node","length","map","a","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { Pane, TextInput, Heading, Text, Code, Switch } from 'evergreen-ui';\nimport PropTypes from 'prop-types';\nimport { front, prodFront, prodEndpoint } from '../../config';\n\nfunction getWebhooks(domain, accessToken, setResults) {\n  const url = `${\n    process.env.NODE_ENV === 'development' ? front : prodFront\n  }/${accessToken}/graphql`;\n\n  fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      query: `\n    {\n      webhookSubscriptions(first :5\n        callbackUrl: \"${prodEndpoint}order?spdn=${domain}\"\n        ) {\n          edges{\n            node{\n              id\n              callbackUrl\n              createdAt\n              topic\n              includeFields\n            }\n          }\n        }\n      }\n    `,\n    }),\n  })\n    .then(res => res.json())\n    .then(res => {\n      if (res.data) {\n        const results = res.data.webhookSubscriptions.edges;\n        setResults(results);\n      }\n    });\n}\n\nfunction createWebhook(domain, accessToken, setResults) {\n  const url = `${\n    process.env.NODE_ENV === 'development' ? front : prodFront\n  }/${accessToken}/graphql`;\n  fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      query: `\n      mutation webhookSubscriptionCreate(\n        $topic: WebhookSubscriptionTopic!\n        $webhookSubscription: WebhookSubscriptionInput!\n      ) {\n        webhookSubscriptionCreate(\n          topic: $topic\n          webhookSubscription: $webhookSubscription\n        ) {\n          userErrors {\n            field\n            message\n          }\n          webhookSubscription {\n            id\n          }\n        }\n      }\n    `,\n      variables: {\n        topic: 'ORDERS_CREATE',\n        webhookSubscription: {\n          callbackUrl: `${prodEndpoint}order?spdn=${domain}`,\n          format: 'JSON',\n        },\n      },\n    }),\n  })\n    .then(res => res.json())\n    .then(res => {\n      const webhook = res.data.webhookSubscriptionCreate;\n      getWebhooks(domain, accessToken, setResults);\n    });\n}\n\nfunction deleteWebhook(id, domain, accessToken, setResults) {\n  const url = `${\n    process.env.NODE_ENV === 'development' ? front : prodFront\n  }/${accessToken}/graphql`;\n  fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      query: `\n      mutation   {\n        webhookSubscriptionDelete(\n          id: \"${id}\"\n        ) {\n          deletedWebhookSubscriptionId\n        }\n      }\n    `,\n    }),\n  })\n    .then(res => res.json())\n    .then(res => {\n      getWebhooks(domain, accessToken, setResults);\n    });\n}\n\nconst WebhookSwitch = ({ domain, accessToken }) => {\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    getWebhooks(domain, accessToken, setResults);\n  }, [domain, accessToken]);\n\n  function handleSwitch(e) {\n    if (e.target.checked) {\n      createWebhook(domain, accessToken, setResults);\n    } else {\n      deleteWebhook(results[0].node.id, domain, accessToken, setResults);\n    }\n  }\n\n  return (\n    <>\n      <Pane\n        paddingY={10}\n        paddingX={15}\n        background=\"#f5f5f5\"\n        display=\"flex\"\n        alignItems=\"center\"\n        width=\"100%\"\n      >\n        <Pane paddingRight={15}>\n          <Heading size={500} fontSize=\"15px\" fontWeight={500}>\n            Push orders to Openship\n          </Heading>\n          <Text size={300}>\n            Orders will be pushed to the pending tab to be fulfilled\n          </Text>\n        </Pane>\n        <Switch\n          marginLeft=\"auto\"\n          checked={results.length > 0}\n          onChange={e => handleSwitch(e)}\n        />\n      </Pane>\n      {results.map(a => (\n        <Pane paddingY={10} paddingX={15}>\n          <Pane display=\"flex\" alignItems=\"center\" marginBottom={10}>\n            <Text\n              size={400}\n              paddingRight={5}\n              fontWeight={500}\n              align=\"right\"\n              marginRight={5}\n              flexBasis=\"100px\"\n            >\n              Endpoint:\n            </Text>\n            <Code fontSize=\"12px\" size={300} wordWrap=\"break-word\">\n              Openship\n            </Code>\n          </Pane>\n          <Pane display=\"flex\" alignItems=\"center\">\n            <Text\n              size={400}\n              paddingRight={5}\n              fontWeight={500}\n              align=\"right\"\n              marginRight={5}\n              flexBasis=\"100px\"\n            >\n              Topic:\n            </Text>\n            <Code fontSize=\"12px\" size={300}>\n              {a.node.topic}\n            </Code>\n          </Pane>\n        </Pane>\n      ))}\n    </>\n  );\n};\n\nexport default WebhookSwitch;\n\nWebhookSwitch.propTypes = {\n  domain: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}