{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport { Heading, Pane, Spinner } from 'evergreen-ui';\n\nvar intentCSS = function intentCSS(arg) {\n  switch (arg) {\n    case 'none':\n      return {\n        color: '#234361',\n        background: '#F5F6F7'\n      };\n\n    case 'primary':\n      return {\n        color: '#1070ca',\n        background: '#ddebf7'\n      };\n\n    case 'success':\n      return {\n        color: '#00783e',\n        background: '#d4eee2'\n      };\n\n    case 'warning':\n      return {\n        color: 'rgb(126, 101, 20)',\n        background: 'rgb(251, 230, 162);'\n      };\n\n    case 'danger':\n      return {\n        color: '#bf0e08',\n        background: '#fae2e2'\n      };\n\n    default:\n      return null;\n  }\n};\n\nfunction Button(_ref) {\n  var background = _ref.background,\n      width = _ref.width,\n      onClick = _ref.onClick,\n      padding = _ref.padding,\n      marginRight = _ref.marginRight,\n      borderRadius = _ref.borderRadius,\n      marginLeft = _ref.marginLeft,\n      disabled = _ref.disabled,\n      children = _ref.children,\n      height = _ref.height,\n      intent = _ref.intent,\n      appearance = _ref.appearance,\n      boxShadow = _ref.boxShadow,\n      hoverBg = _ref.hoverBg,\n      isLoading = _ref.isLoading,\n      textColor = _ref.textColor,\n      fontSize = _ref.fontSize,\n      marginX = _ref.marginX,\n      marginY = _ref.marginY,\n      paddingX = _ref.paddingX,\n      paddingY = _ref.paddingY,\n      borderBottomLeftRadius = _ref.borderBottomLeftRadius,\n      borderBottomRightRadius = _ref.borderBottomRightRadius,\n      borderTopLeftRadius = _ref.borderTopLeftRadius,\n      borderTopRightRadius = _ref.borderTopRightRadius,\n      zIndex = _ref.zIndex;\n  return React.createElement(React.Fragment, null, React.createElement(Heading, _extends({\n    width: width,\n    size: 100,\n    fontWeight: 700,\n    color: textColor,\n    background: background,\n    is: \"button\",\n    height: height,\n    borderColor: \"transparent\",\n    transition: \"all 0.1s ease-in\",\n    outline: \"none\",\n    cursor: \"pointer\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    zIndex: zIndex,\n    boxShadow: boxShadow,\n    onClick: onClick,\n    fontSize: fontSize,\n    marginLeft: marginLeft,\n    marginRight: marginRight,\n    paddingX: paddingX,\n    paddingY: paddingY,\n    borderBottomLeftRadius: borderBottomLeftRadius || 3,\n    borderBottomRightRadius: borderBottomRightRadius || 3,\n    borderTopLeftRadius: borderTopLeftRadius || 3,\n    borderTopRightRadius: borderTopRightRadius || 3,\n    disabled: disabled || isLoading,\n    className: \"gen \".concat((disabled || isLoading) && 'disabled')\n  }, intent ? intentCSS(intent) : {\n    color: textColor,\n    background: background\n  }), isLoading && React.createElement(Spinner, {\n    marginRight: 6,\n    size: Math.round(height / 1.5)\n  }), children, React.createElement(_JSXStyle, {\n    id: \"4014959183\",\n    dynamic: [appearance === 'minimal' && \"color: #fff;\", hoverBg && \"background-color:\".concat(hoverBg)]\n  }, [\".gen:active{border-color:transparent;border:'none';}\", \".gen:selected{opacity:0.8;border-color:transparent;border:'none';}\", \".gen:focus{z-index:2;outline:none;box-shadow:inset 0 0 2px rgba(67,90,111,0.14), 0 0 0 3px rgba(16,112,202,0.14);}\", \".gen:hover{opacity:0.8;border:'none';border-color:transparent;\".concat(appearance === 'minimal' && \"color: #fff;\", \" \").concat(hoverBg && \"background-color:\".concat(hoverBg), \";}\"), \".disabled{pointer-events:none;background-color:rgb(245,246,247);color:rgb(166,177,187);}\"])));\n}\n\nexport default Button;","map":null,"metadata":{},"sourceType":"module"}