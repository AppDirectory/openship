{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport Link from \"next/link\";\nimport { withRouter } from \"next/router\";\nimport { Menu, Icon, Heading, Pane, TextInputField, Popover, IconButton, Tablist, Tab } from \"evergreen-ui\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport Button from \"../common/Button\";\nimport { shopsQuery, shopsQueryVars } from \"../shops/ShopList\";\nimport Signout from \"../user/Signout\";\nimport { front, prodFront } from \"../../config\"; // import AddChannel from \"../common/AddChannel\";\n\nexport const channelsQuery = gql`\n  query($first: Int!, $skip: Int!) {\n    channels(orderBy: createdAt_DESC, first: $first, skip: $skip) {\n      id\n      type\n      name\n      createdAt\n      settings\n    }\n  }\n`;\nexport const channelsQueryVars = {\n  skip: 0,\n  first: 10\n};\n\nconst Divider = __jsx(Pane, {\n  flexShrink: 0,\n  height: 3,\n  backgroundColor: \"rgb(44, 71, 118)\",\n  borderRadius: 1,\n  marginY: 5,\n  marginX: 12\n});\n\nconst option = (name, options, update, selected) => __jsx(Pane, {\n  marginBottom: 10,\n  marginRight: 10\n}, __jsx(Heading, {\n  size: 500,\n  fontSize: \"14px\",\n  fontWeight: 500,\n  marginBottom: 8\n}, name), __jsx(Tablist, null, options.map((a, index) => __jsx(Tab, {\n  key: a,\n  id: a,\n  marginLeft: 0,\n  height: \"20px\",\n  fontSize: \"10px\",\n  marginBottom: 3,\n  letterSpacing: \"0.3px\",\n  fontWeight: 400,\n  textTransform: \"uppercase\",\n  onSelect: () => update(a),\n  isSelected: a === selected,\n  \"aria-controls\": `panel-${a}`\n}, a))));\n\nexport const NavGroupTitle = ({\n  title,\n  icon\n}) => __jsx(Pane, {\n  display: \"flex\",\n  alignItems: \"center\"\n}, __jsx(Heading, {\n  size: 100,\n  marginTop: 8,\n  marginBottom: 8,\n  marginLeft: 16,\n  marginRight: 16,\n  fontWeight: 700,\n  fontSize: \"13px\",\n  color: \"#d7dae0\",\n  flex: 1\n}, title), icon);\n\nfunction postRequest(url, data) {\n  return fetch(url, {\n    credentials: \"same-origin\",\n    // 'include', default: 'omit'\n    method: \"POST\",\n    // 'GET', 'PUT', 'DELETE', etc.\n    body: _JSON$stringify({\n      shops: data\n    }),\n    // Use correct payload (matching 'Content-Type')\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n}\n\nconst Header = ({\n  router,\n  logo,\n  onClick\n}) => {\n  const {\n    0: type,\n    1: setType\n  } = useState(\"zinc\");\n  const {\n    asPath\n  } = router;\n\n  const NavItem = ({\n    icon,\n    iconColor,\n    title,\n    href\n  }) => __jsx(Pane, {\n    borderLeft: `3px solid ${asPath && asPath.startsWith(href) ? \"rgb(66, 95, 146)\" : \"transparent\"}`,\n    background: asPath && asPath.startsWith(href) ? \"rgb(35, 61, 106)\" : null,\n    onSelect: onClick\n  }, __jsx(Link, {\n    href: href\n  }, __jsx(Menu.Item, {\n    icon: __jsx(Icon, {\n      icon: icon,\n      color: iconColor || \"#ffffff\",\n      marginRight: \"-8px\",\n      marginLeft: \"13px\",\n      size: 15\n    }),\n    onSelect: onClick,\n    width: \"100%\"\n  }, __jsx(Heading, {\n    color: \"#fff\",\n    size: 500,\n    fontSize: 15,\n    overflow: \"visible\",\n    textTransform: \"capitalize\"\n  }, title))));\n\n  return __jsx(Pane, {\n    background: \"rgb(23, 43, 77)\",\n    minHeight: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  }, __jsx(Pane, null, __jsx(Menu, {\n    width: \"100%\"\n  }, logo, __jsx(Menu.Group, null, __jsx(NavGroupTitle, {\n    title: \"Orders\"\n  }), __jsx(NavItem, {\n    icon: \"delta\",\n    title: \"Pending\",\n    href: \"/pending\"\n  }), __jsx(NavItem, {\n    icon: \"time\",\n    title: \"Processed\",\n    href: \"/processed\"\n  }), __jsx(NavItem, {\n    icon: \"tick-circle\",\n    title: \"Completed\",\n    href: \"/completed\"\n  })), Divider, __jsx(Menu.Group, null, __jsx(NavGroupTitle, {\n    title: \"Products\"\n  }), __jsx(NavItem, {\n    icon: \"database\",\n    title: \"All Products\",\n    href: \"/products\"\n  }), __jsx(NavItem, {\n    icon: \"globe\",\n    title: \"Marketplace\",\n    href: \"/find\"\n  })), Divider, __jsx(Menu.Group, null, __jsx(NavGroupTitle, {\n    title: __jsx(Link, {\n      href: \"/shops\"\n    }, __jsx(Pane, {\n      color: \"#d7dae0\",\n      cursor: \"pointer\"\n    }, \"Shops\")),\n    icon: __jsx(Popover, {\n      content: __jsx(Pane, {\n        width: 300,\n        display: \"flex\",\n        alignItems: \"left\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        padding: 15\n      }, __jsx(\"form\", {\n        method: \"GET\",\n        action: \"/shopify/auth\",\n        style: {\n          width: \"100%\"\n        }\n      }, __jsx(TextInputField, {\n        label: \"Shop Name\",\n        marginBottom: \"10px\"\n      }), __jsx(TextInputField, {\n        label: \"Shop URL\",\n        marginBottom: \"10px\",\n        hint: \"Must end in .myshopify.com\",\n        id: \"shop\",\n        name: \"shop\"\n      }), __jsx(Button, {\n        width: \"100%\",\n        justifyContent: \"center\",\n        appearance: \"primary\",\n        intent: \"success\",\n        fontSize: \"12px\",\n        paddingY: 3\n      }, \"Go to Shopify\")))\n    }, __jsx(IconButton, {\n      height: 20,\n      icon: \"plus\",\n      marginRight: 16,\n      appearance: \"primary\",\n      intent: \"success\",\n      borderRadius: 20,\n      outline: \"none\"\n    }))\n  }), __jsx(Query, {\n    query: shopsQuery,\n    variables: shopsQueryVars\n  }, ({\n    data,\n    error,\n    loading\n  }) => {\n    if (error || !data.shops) return null;\n    const {\n      shops\n    } = data;\n    postRequest(`${false ? front : prodFront}/_shopify`, shops);\n    return shops.map((shop, index) => __jsx(Pane, {\n      key: index\n    }, __jsx(NavItem, {\n      icon: __jsx(Pane, {\n        marginRight: \"-8px\",\n        marginLeft: \"13px\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        display: \"flex\"\n      }, __jsx(\"svg\", {\n        version: \"1.1\",\n        xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n        x: \"0px\",\n        y: \"0px\",\n        width: \"16px\",\n        height: \"16px\",\n        viewBox: \"0 0 48 48\",\n        enableBackground: \"new 0 0 16 16\",\n        xmlSpace: \"preserve\",\n        fill: \"#47B881\"\n      }, __jsx(\"path\", {\n        d: \"M24 0C10.746 0 0 10.746 0 24s10.746 24 24 24 24-10.746 24-24S37.254 0 24 0zm0 36c-6.627 0-12-5.373-12-12s5.373-12 12-12 12 5.373 12 12-5.373 12-12 12z\"\n      }))),\n      iconColor: \"success\",\n      title: shop.name,\n      href: `/shop?shop=${shop.domain.split(\".\")[0]}`\n    })));\n  })), Divider, __jsx(Menu.Group, null, __jsx(NavItem, {\n    icon: \"cog\",\n    title: \"Settings\",\n    href: \"/settings\"\n  })))), __jsx(Pane, {\n    marginTop: \"auto\"\n  }, __jsx(Signout, null)));\n};\n\nexport default withRouter(Header);","map":null,"metadata":{},"sourceType":"module"}