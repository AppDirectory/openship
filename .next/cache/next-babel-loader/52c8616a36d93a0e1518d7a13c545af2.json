{"ast":null,"code":"import React, { useState } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport PropTypes from 'prop-types';\nimport Userform from './Userform';\nconst REUQEST_RESET_MUTATION = gql`\n  mutation SIGNUP_MUTATION($email: String!) {\n    requestReset(email: $email) {\n      message\n    }\n  }\n`;\n\nfunction RequestReset({\n  formChange\n}) {\n  const [email, setEmail] = useState('');\n  return React.createElement(Mutation, {\n    mutation: REUQEST_RESET_MUTATION,\n    variables: {\n      email\n    }\n  }, (reset, {\n    error,\n    loading,\n    called\n  }) => React.createElement(Userform, {\n    title: \"Please enter your email and we'll send a link to reset your password\",\n    handleToggleClick: () => formChange(),\n    buttonTitle: \"Send Reset Link\",\n    buttonColor: \"#14B5D0\",\n    error: error,\n    loading: loading,\n    buttonDisabled: !email,\n    fields: [{\n      label: 'Email',\n      value: email,\n      onChange: setEmail,\n      icon: 'envelope'\n    }],\n    bottomLinkText: \"Back to sign in\",\n    onSubmit: async e => {\n      e.preventDefault();\n      await reset();\n      setEmail('');\n    },\n    success: called\n  }));\n}\n\nexport default RequestReset;\nRequestReset.propTypes = {\n  formChange: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/junaid/openship/components/user/RequestReset.js"],"names":["React","useState","Mutation","gql","PropTypes","Userform","REUQEST_RESET_MUTATION","RequestReset","formChange","email","setEmail","reset","error","loading","called","label","value","onChange","icon","e","preventDefault","propTypes","func","isRequired"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,sBAAsB,GAAGH,GAAI;;;;;;CAAnC;;AAQA,SAASI,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAsC;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEA,SACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEK,sBAApB;AAA4C,IAAA,SAAS,EAAE;AAAEG,MAAAA;AAAF;AAAvD,KACG,CAACE,KAAD,EAAQ;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,GAAR,KACC,oBAAC,QAAD;AACE,IAAA,KAAK,EAAC,sEADR;AAEE,IAAA,iBAAiB,EAAE,MAAMN,UAAU,EAFrC;AAGE,IAAA,WAAW,EAAC,iBAHd;AAIE,IAAA,WAAW,EAAC,SAJd;AAKE,IAAA,KAAK,EAAEI,KALT;AAME,IAAA,OAAO,EAAEC,OANX;AAOE,IAAA,cAAc,EAAE,CAACJ,KAPnB;AAQE,IAAA,MAAM,EAAE,CACN;AACEM,MAAAA,KAAK,EAAE,OADT;AAEEC,MAAAA,KAAK,EAAEP,KAFT;AAGEQ,MAAAA,QAAQ,EAAEP,QAHZ;AAIEQ,MAAAA,IAAI,EAAE;AAJR,KADM,CARV;AAgBE,IAAA,cAAc,EAAC,iBAhBjB;AAiBE,IAAA,QAAQ,EAAE,MAAMC,CAAN,IAAW;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMT,KAAK,EAAX;AACAD,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,KArBH;AAsBE,IAAA,OAAO,EAAEI;AAtBX,IAFJ,CADF;AA8BD;;AAED,eAAeP,YAAf;AAEAA,YAAY,CAACc,SAAb,GAAyB;AACvBb,EAAAA,UAAU,EAAEJ,SAAS,CAACkB,IAAV,CAAeC;AADJ,CAAzB","sourcesContent":["import React, { useState } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport PropTypes from 'prop-types';\nimport Userform from './Userform';\n\nconst REUQEST_RESET_MUTATION = gql`\n  mutation SIGNUP_MUTATION($email: String!) {\n    requestReset(email: $email) {\n      message\n    }\n  }\n`;\n\nfunction RequestReset({ formChange }) {\n  const [email, setEmail] = useState('');\n\n  return (\n    <Mutation mutation={REUQEST_RESET_MUTATION} variables={{ email }}>\n      {(reset, { error, loading, called }) => (\n        <Userform\n          title=\"Please enter your email and we'll send a link to reset your password\"\n          handleToggleClick={() => formChange()}\n          buttonTitle=\"Send Reset Link\"\n          buttonColor=\"#14B5D0\"\n          error={error}\n          loading={loading}\n          buttonDisabled={!email}\n          fields={[\n            {\n              label: 'Email',\n              value: email,\n              onChange: setEmail,\n              icon: 'envelope',\n            },\n          ]}\n          bottomLinkText=\"Back to sign in\"\n          onSubmit={async e => {\n            e.preventDefault();\n            await reset();\n            setEmail('');\n          }}\n          success={called}\n        />\n      )}\n    </Mutation>\n  );\n}\n\nexport default RequestReset;\n\nRequestReset.propTypes = {\n  formChange: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}