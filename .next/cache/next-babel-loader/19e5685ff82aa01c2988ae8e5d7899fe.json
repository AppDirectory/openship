{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\nimport { Pane, Heading, Spinner, Icon } from 'evergreen-ui';\nimport OrderListItem from '../common/orderListItem/OrderListItem';\nimport Button from '../common/Button';\nimport { CardStyle } from '../common/DefaultStyles';\nexport const OrdersQuery = gql`\n  query OrdersQuery($skip: Int, $first: Int) {\n    orders(\n      first: $first\n      skip: $skip\n      orderBy: createdAt_DESC\n      where: { processed: \"TRUE\" }\n    ) {\n      id\n      orderId\n      orderName\n      email\n      first_name\n      last_name\n      streetAddress1\n      streetAddress2\n      city\n      state\n      zip\n      phone\n      lineItems\n      currency\n      totalPrice\n      subTotalPrice\n      totalDiscount\n      totalTax\n      createAt\n      mpCart\n      mpCheckout\n      zincCart\n      zincCheckout\n      processed\n      shopName\n    }\n  }\n`;\nconst PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY {\n    ordersConnection(where: { processed: \"TRUE\" }) {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nfunction PendingOrders() {\n  const {\n    0: skip,\n    1: setSkip\n  } = useState(0);\n  const {\n    0: firstQ,\n    1: setFirstQ\n  } = useState(100);\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  return __jsx(React.Fragment, null, __jsx(Pane, {\n    display: \"flex\",\n    paddingTop: 16,\n    paddingBottom: 16\n  }, __jsx(Pane, {\n    flex: 1,\n    alignItems: \"center\",\n    display: \"flex\"\n  }, __jsx(Heading, {\n    size: 700\n  }, \"Processed Orders\"))), __jsx(Pane, {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  }, __jsx(Query, {\n    query: OrdersQuery,\n    variables: {\n      skip,\n      first: firstQ\n    }\n  }, ({\n    loading,\n    error,\n    data\n  }) => {\n    if (loading) return __jsx(React.Fragment, null, __jsx(Pane, null, __jsx(Pane, CardStyle, __jsx(Pane, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"50vh\"\n    }, __jsx(Spinner, {\n      size: 80\n    })))));\n    if (error) return `Error! ${error.message}`;\n    const {\n      orders\n    } = data;\n    return __jsx(React.Fragment, null, __jsx(Pane, _extends({\n      width: \"100%\"\n    }, CardStyle), __jsx(Pane, {\n      display: \"flex\",\n      paddingX: \"1em\",\n      paddingY: \".8em\",\n      alignItems: \"center\"\n    }, __jsx(Query, {\n      query: PAGINATION_QUERY\n    }, ({\n      data,\n      loading,\n      error\n    }) => {\n      const count = data.ordersConnection ? data.ordersConnection.aggregate.count : 0;\n      return __jsx(React.Fragment, null, __jsx(Heading, {\n        size: 100\n      }, count, \" Orders\"), __jsx(Pane, {\n        marginLeft: \"auto\"\n      }, __jsx(Button, {\n        background: open ? '#D4EEE2' : '#F7F7F7',\n        borderRadius: 3,\n        onClick: () => setOpen(!open)\n      }, __jsx(Heading, {\n        size: 100,\n        fontWeight: 700,\n        color: \"#00783E\"\n      }, \"Expand All\"), __jsx(Icon, {\n        color: \"#00783E\",\n        size: 13,\n        icon: \"chevron-down\",\n        marginRight: -4,\n        marginLeft: 3\n      }))));\n    })), orders.length ? orders.map(order => __jsx(Pane, {\n      key: order.id\n    }, __jsx(Pane, {\n      opacity: loading && '0.2',\n      width: \"100%\",\n      height: \"100%\",\n      position: \"relative\"\n    }, loading && __jsx(Pane, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      position: \"absolute\",\n      width: \"100%\",\n      height: \"100%\"\n    }, __jsx(Spinner, {\n      size: 80\n    })), __jsx(Pane, {\n      borderTop: \"0.1rem solid #dfe3e8\"\n    }, __jsx(OrderListItem, _extends({}, order, {\n      key: order.id,\n      index: order.id,\n      disabled: true,\n      open: open\n    })))))) : __jsx(Pane, {\n      background: \"tint2\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      borderRadius: 3\n    }, __jsx(Heading, {\n      margin: \"1em\",\n      size: 600\n    }, \"Your processed orders will appear here.\"))));\n  })));\n}\n\nexport default PendingOrders;","map":null,"metadata":{},"sourceType":"module"}