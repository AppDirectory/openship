{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Box, Spinner } from '@chakra-ui/core';\nimport { useQuery } from '@apollo/react-hooks';\nimport OrderDetails from '../common/OrderDetails';\nimport { SHOP_ORDERS_QUERY } from '../completed/completedOrderList/CompletedOrderList';\n\nfunction Order({\n  store,\n  name\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(SHOP_ORDERS_QUERY, {\n    variables: {\n      domain: `${store}.myshopify.com`,\n      query: name,\n      first: 10\n    }\n  });\n\n  function formatNote(note) {\n    if (!note.includes('Walmart')) {\n      return note.split('||').map(a => {\n        const obj = {};\n        a.split(',').forEach(b => {\n          obj[b.split(':')[0].trim()] = b.split(':')[1].trim();\n        });\n        obj.lineID = obj.lineID.split('|').map(c => parseFloat(c));\n        obj.marketID = obj.marketID;\n        obj.transID = parseFloat(obj.transID);\n        return obj;\n      });\n    }\n\n    return null;\n  }\n\n  if (loading) return __jsx(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"100vh\"\n  }, __jsx(Spinner, {\n    size: 80\n  }));\n  if (error || !data.shopOrders) return __jsx(\"div\", null, error);\n  const {\n    note\n  } = data.shopOrders.edges[0].node;\n  return __jsx(Box, {\n    maxWidth: \"45em\"\n  }, __jsx(OrderDetails, _extends({}, data.shopOrders.edges[0].node, {\n    // note={note && formatNote(note)}\n    store: store\n  })));\n}\n\nexport default Order;","map":null,"metadata":{},"sourceType":"module"}