{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Text, Badge } from '@chakra-ui/core';\nimport CartItem from './ZincCartItem';\n\nvar Cart = /*#__PURE__*/function (_Component) {\n  _inherits(Cart, _Component);\n\n  function Cart() {\n    _classCallCheck(this, Cart);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Cart).apply(this, arguments));\n  }\n\n  _createClass(Cart, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          cart = _this$props.cart,\n          checkout = _this$props.checkout,\n          removeItem = _this$props.removeItem,\n          checkoutLineItemsUpdate = _this$props.checkoutLineItemsUpdate,\n          loading = _this$props.loading;\n      return __jsx(Box, {\n        marginLeft: \"-3px\",\n        background: \"#EDF2F7\",\n        paddingY: \".7em\",\n        paddingX: \"1em\",\n        border: \"1px solid #edf0f2\"\n      }, __jsx(Box, {\n        marginBottom: 2,\n        display: \"flex\",\n        alignItems: \"center\"\n      }, __jsx(Text, {\n        fontSize: \"sm\",\n        fontWeight: 500,\n        color: \"#1A202C\"\n      }, \"Zinc Cart\"), checkout && checkout._type === 'error' && __jsx(Box, {\n        marginLeft: \"auto\"\n      }, __jsx(\"a\", {\n        href: \"https://dash.zinc.io/orders/\".concat(checkout.request_id),\n        target: \"_blank\",\n        rel: \"noopener noreferrer\"\n      }, __jsx(Badge, {\n        variantColor: \"red\"\n      }, \"Status: Error\"))), checkout && checkout.tracking && __jsx(Box, {\n        marginLeft: \"auto\"\n      }, __jsx(\"a\", {\n        href: \"https://dash.zinc.io/orders/\".concat(checkout.request_id),\n        target: \"_blank\",\n        rel: \"noopener noreferrer\"\n      }, __jsx(Badge, null, \"Status: \", checkout.tracking.length > 0 ? 'Shipped' : 'Pending')))), cart && cart.products && cart.products.length ? cart.products.map(function (a) {\n        return __jsx(CartItem, {\n          removeItem: removeItem ? function (a) {\n            return removeItem(a);\n          } : undefined,\n          checkoutLineItemsUpdate: checkoutLineItemsUpdate ? function (id, quantity) {\n            return checkoutLineItemsUpdate(id, quantity);\n          } : undefined,\n          key: a.product_id,\n          lineItem: a,\n          loading: loading\n        });\n      }) : __jsx(Box, {\n        background: \"#fff\",\n        border: \"muted\",\n        padding: 2,\n        display: \"flex\",\n        justifyContent: \"center\"\n      }, __jsx(Text, {\n        fontSize: \"sm\"\n      }, \"Cart is empty\")));\n    }\n  }]);\n\n  return Cart;\n}(Component);\n\n_defineProperty(Cart, \"propTypes\", {\n  cart: PropTypes.object,\n  removeItem: PropTypes.func,\n  checkoutLineItemsUpdate: PropTypes.func\n});\n\nexport default Cart;","map":{"version":3,"sources":["/Users/junaid/openship/components/pending/Cart/ZincCart.js"],"names":["React","Component","PropTypes","Box","Text","Badge","CartItem","Cart","props","cart","checkout","removeItem","checkoutLineItemsUpdate","loading","_type","request_id","tracking","length","products","map","a","undefined","id","quantity","product_id","object","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Text, Badge } from '@chakra-ui/core';\nimport CartItem from './ZincCartItem';\n\nclass Cart extends Component {\n  static propTypes = {\n    cart: PropTypes.object,\n    removeItem: PropTypes.func,\n    checkoutLineItemsUpdate: PropTypes.func,\n  };\n\n  render() {\n    const {\n      cart,\n      checkout,\n      removeItem,\n      checkoutLineItemsUpdate,\n      loading,\n    } = this.props;\n\n    return (\n      <Box\n        marginLeft=\"-3px\"\n        background=\"#EDF2F7\"\n        paddingY=\".7em\"\n        paddingX=\"1em\"\n        border=\"1px solid #edf0f2\"\n      >\n        <Box marginBottom={2} display=\"flex\" alignItems=\"center\">\n          <Text fontSize=\"sm\" fontWeight={500} color=\"#1A202C\">\n            Zinc Cart\n          </Text>\n          {checkout && checkout._type === 'error' && (\n            <Box marginLeft=\"auto\">\n              <a\n                href={`https://dash.zinc.io/orders/${checkout.request_id}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Badge variantColor=\"red\">Status: Error</Badge>\n              </a>\n            </Box>\n          )}\n          {checkout && checkout.tracking && (\n            <Box marginLeft=\"auto\">\n              <a\n                href={`https://dash.zinc.io/orders/${checkout.request_id}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Badge>\n                  Status: {checkout.tracking.length > 0 ? 'Shipped' : 'Pending'}\n                </Badge>\n              </a>\n            </Box>\n          )}\n        </Box>\n        {cart && cart.products && cart.products.length ? (\n          cart.products.map(a => (\n            <CartItem\n              removeItem={removeItem ? a => removeItem(a) : undefined}\n              checkoutLineItemsUpdate={\n                checkoutLineItemsUpdate\n                  ? (id, quantity) => checkoutLineItemsUpdate(id, quantity)\n                  : undefined\n              }\n              key={a.product_id}\n              lineItem={a}\n              loading={loading}\n            />\n          ))\n        ) : (\n          <Box\n            background=\"#fff\"\n            border=\"muted\"\n            padding={2}\n            display=\"flex\"\n            justifyContent=\"center\"\n          >\n            <Text fontSize=\"sm\">Cart is empty</Text>\n          </Box>\n        )}\n      </Box>\n    );\n  }\n}\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}