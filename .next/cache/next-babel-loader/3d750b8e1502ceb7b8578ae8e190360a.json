{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation RESET_MUTATION(\\n    $resetToken: String!\\n    $password: String!\\n    $confirmPassword: String!\\n  ) {\\n    resetPassword(\\n      resetToken: $resetToken\\n      password: $password\\n      confirmPassword: $confirmPassword\\n    ) {\\n      id\\n      email\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport { Pane, Spinner } from 'evergreen-ui';\nimport { CURRENT_USER_QUERY } from './User';\nimport Userform from './Userform';\nimport Logo from '../Logo/Logo';\nvar RESET_MUTATION = gql(_templateObject());\n\nfunction Reset(_ref) {\n  var resetToken = _ref.resetToken;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      confirmPassword = _useState4[0],\n      setConfirmPassword = _useState4[1];\n\n  useEffect(function () {\n    if (!resetToken) {\n      Router.push('/');\n    }\n  });\n  return React.createElement(Pane, {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    height: \"100vh\",\n    background: \"tint1\"\n  }, resetToken ? React.createElement(Pane, {\n    margin: 16\n  }, React.createElement(Pane, {\n    width: 180,\n    marginX: \"15px\",\n    marginBottom: \"15px\"\n  }, React.createElement(Logo, {\n    color: \"#162b4c\"\n  })), React.createElement(Mutation, {\n    mutation: RESET_MUTATION,\n    variables: {\n      resetToken: resetToken,\n      password: password,\n      confirmPassword: confirmPassword\n    },\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }],\n    onCompleted: function onCompleted() {\n      Router.push('/');\n    }\n  }, function (reset, _ref2) {\n    var error = _ref2.error,\n        loading = _ref2.loading,\n        called = _ref2.called;\n    return React.createElement(Userform, {\n      title: \"Please enter a new password\",\n      handleToggleClick: function handleToggleClick() {\n        Router.push('/');\n      },\n      buttonTitle: \"Confirm\",\n      buttonColor: \"#47B881\",\n      error: error,\n      loading: loading,\n      buttonDisabled: !password || !confirmPassword,\n      fields: [{\n        label: 'Password',\n        value: password,\n        onChange: setPassword,\n        icon: 'lock'\n      }, {\n        label: 'Confirm Password',\n        value: confirmPassword,\n        onChange: setConfirmPassword,\n        icon: 'lock',\n        type: 'password'\n      }] // bottomText=\"Already have an account?\"\n      ,\n      bottomLinkText: \"Back to Sign In\",\n      onSubmit:\n      /*#__PURE__*/\n      function () {\n        var _ref3 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(e) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  e.preventDefault();\n                  _context.next = 3;\n                  return reset();\n\n                case 3:\n                  setPassword('');\n                  setConfirmPassword('');\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref3.apply(this, arguments);\n        };\n      }()\n    });\n  })) : React.createElement(Spinner, null), \";\");\n}\n\nexport default Reset;","map":null,"metadata":{},"sourceType":"module"}