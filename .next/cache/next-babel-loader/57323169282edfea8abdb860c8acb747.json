{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Box, Heading, Text, Input, InputGroup, InputLeftElement, Icon, Button } from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\nimport ErrorMessage from '../common/ErrorMessage';\nvar sucessCard = {\n  paddingX: 10,\n  paddingY: 5,\n  background: '#F1FAF5',\n  borderRadius: 3,\n  display: 'flex',\n  alignItems: 'center'\n};\n\nvar Userform = function Userform(_ref) {\n  var title = _ref.title,\n      fields = _ref.fields,\n      handleToggleClick = _ref.handleToggleClick,\n      links = _ref.links,\n      buttonTitle = _ref.buttonTitle,\n      buttonColor = _ref.buttonColor,\n      bottomText = _ref.bottomText,\n      bottomLinkText = _ref.bottomLinkText,\n      onSubmit = _ref.onSubmit,\n      buttonDisabled = _ref.buttonDisabled,\n      error = _ref.error,\n      loading = _ref.loading,\n      success = _ref.success;\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    width: 350,\n    alignItems: \"center\"\n  }, __jsx(Box, {\n    marginBottom: 2,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }, __jsx(Heading, {\n    fontSize: \"lg\",\n    fontWeight: \"500\",\n    marginRight: \"auto\",\n    color: \"#425A70\"\n  }, title), links && links), fields && fields.map(function (field) {\n    return __jsx(InputGroup, {\n      width: \"100%\",\n      borderColor: \"gray.200\",\n      mb: 4\n    }, __jsx(InputLeftElement, {\n      children: __jsx(Icon, {\n        name: field.icon,\n        color: \"gray.300\"\n      })\n    }), __jsx(Input, {\n      value: field.value,\n      name: field.label,\n      type: field.type || field.label,\n      onChange: function onChange(e) {\n        return field.onChange(e.target.value);\n      },\n      placeholder: field.label\n    }));\n  }), __jsx(Button, {\n    bg: buttonColor === 'blue' ? '#DDEBF7' : '#d4eee2',\n    color: buttonColor === 'blue' ? '#1070ca' : '#00783e',\n    _hover: buttonColor === 'blue' ? {\n      bg: '#c0d8ed'\n    } : {\n      bg: '#bfe3d2'\n    },\n    borderRadius: 3,\n    px: 3,\n    height: 8,\n    width: \"100%\",\n    disabled: buttonDisabled,\n    isLoading: loading,\n    onClick: onSubmit\n  }, __jsx(Heading, {\n    fontSize: \"md\",\n    textTransform: \"uppercase\",\n    letterSpacing: \"wider\",\n    fontWeight: 700,\n    marginRight: 2\n  }, buttonTitle), __jsx(Icon, {\n    size: 4,\n    name: \"arrow-forward\"\n  })), __jsx(Box, {\n    marginTop: 15\n  }, __jsx(ErrorMessage, {\n    error: error\n  })), success && __jsx(Box, sucessCard, __jsx(Icon, {\n    icon: \"tick-circle\",\n    color: \"success\",\n    marginRight: 10\n  }), __jsx(Text, {\n    color: \"#47B881\",\n    fontWeight: 500,\n    fontSize: \"14px\"\n  }, \"Link sent. Please check your email.\"))), handleToggleClick && __jsx(Box, {\n    mt: 6\n  }, __jsx(Text, {\n    width: \"100%\",\n    color: \"gray.500\",\n    my: 1\n  }, bottomText), __jsx(Text, {\n    \"float\": \"left\",\n    onClick: handleToggleClick,\n    color: buttonColor === 'blue' ? '#1070ca' : '#00783e',\n    paddingBottom: \"1px\",\n    borderBottom: \"2px solid \".concat(buttonColor === 'blue' ? '#1070ca' : '#00783e'),\n    cursor: \"pointer\",\n    className: \"hover\",\n    my: 0\n  }, bottomLinkText)));\n};\n\nexport default Userform;\nUserform.propTypes = {\n  title: PropTypes.element,\n  fields: PropTypes.array,\n  handleToggleClick: PropTypes.func,\n  links: PropTypes.element,\n  buttonTitle: PropTypes.string,\n  buttonColor: PropTypes.string,\n  bottomText: PropTypes.string,\n  bottomLinkText: PropTypes.string,\n  onSubmit: PropTypes.func,\n  buttonDisabled: PropTypes.bool,\n  error: PropTypes.object,\n  loading: PropTypes.string,\n  success: PropTypes.bool\n};","map":{"version":3,"sources":["/Users/junaid/openship2/components/user/Userform.js"],"names":["Box","Heading","Text","Input","InputGroup","InputLeftElement","Icon","Button","PropTypes","ErrorMessage","sucessCard","paddingX","paddingY","background","borderRadius","display","alignItems","Userform","title","fields","handleToggleClick","links","buttonTitle","buttonColor","bottomText","bottomLinkText","onSubmit","buttonDisabled","error","loading","success","map","field","icon","value","label","type","e","onChange","target","bg","propTypes","element","array","func","string","bool","object"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Heading,\n  Text,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Icon,\n  Button,\n} from '@chakra-ui/core';\nimport PropTypes from 'prop-types';\nimport ErrorMessage from '../common/ErrorMessage';\n\nconst sucessCard = {\n  paddingX: 10,\n  paddingY: 5,\n  background: '#F1FAF5',\n  borderRadius: 3,\n  display: 'flex',\n  alignItems: 'center',\n};\n\nconst Userform = ({\n  title,\n  fields,\n  handleToggleClick,\n  links,\n  buttonTitle,\n  buttonColor,\n  bottomText,\n  bottomLinkText,\n  onSubmit,\n  buttonDisabled,\n  error,\n  loading,\n  success,\n}) => (\n  <>\n    <Box width={350} alignItems=\"center\">\n      <Box\n        marginBottom={2}\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Heading\n          fontSize=\"lg\"\n          fontWeight=\"500\"\n          marginRight=\"auto\"\n          color=\"#425A70\"\n        >\n          {title}\n        </Heading>\n        {links && links}\n      </Box>\n      {fields &&\n        fields.map(field => (\n          <InputGroup width=\"100%\" borderColor=\"gray.200\" mb={4}>\n            <InputLeftElement\n              children={<Icon name={field.icon} color=\"gray.300\" />}\n            />\n            <Input\n              value={field.value}\n              name={field.label}\n              type={field.type || field.label}\n              onChange={e => field.onChange(e.target.value)}\n              placeholder={field.label}\n            />\n          </InputGroup>\n        ))}\n\n      <Button\n        bg={buttonColor === 'blue' ? '#DDEBF7' : '#d4eee2'}\n        color={buttonColor === 'blue' ? '#1070ca' : '#00783e'}\n        _hover={buttonColor === 'blue' ? { bg: '#c0d8ed' } : { bg: '#bfe3d2' }}\n        borderRadius={3}\n        px={3}\n        height={8}\n        width=\"100%\"\n        disabled={buttonDisabled}\n        isLoading={loading}\n        onClick={onSubmit}\n      >\n        <Heading\n          fontSize=\"md\"\n          textTransform=\"uppercase\"\n          letterSpacing=\"wider\"\n          fontWeight={700}\n          marginRight={2}\n        >\n          {buttonTitle}\n        </Heading>\n        <Icon size={4} name=\"arrow-forward\" />\n      </Button>\n      <Box marginTop={15}>\n        <ErrorMessage error={error} />\n      </Box>\n      {success && (\n        <Box {...sucessCard}>\n          <Icon icon=\"tick-circle\" color=\"success\" marginRight={10} />\n          <Text color=\"#47B881\" fontWeight={500} fontSize=\"14px\">\n            Link sent. Please check your email.\n          </Text>\n        </Box>\n      )}\n    </Box>\n    {handleToggleClick && (\n      <Box mt={6}>\n        <Text width=\"100%\" color=\"gray.500\" my={1}>\n          {bottomText}\n        </Text>\n        <Text\n          float=\"left\"\n          onClick={handleToggleClick}\n          color={buttonColor === 'blue' ? '#1070ca' : '#00783e'}\n          paddingBottom=\"1px\"\n          borderBottom={`2px solid ${\n            buttonColor === 'blue' ? '#1070ca' : '#00783e'\n          }`}\n          cursor=\"pointer\"\n          className=\"hover\"\n          my={0}\n        >\n          {bottomLinkText}\n        </Text>\n      </Box>\n    )}\n  </>\n);\n\nexport default Userform;\n\nUserform.propTypes = {\n  title: PropTypes.element,\n  fields: PropTypes.array,\n  handleToggleClick: PropTypes.func,\n  links: PropTypes.element,\n  buttonTitle: PropTypes.string,\n  buttonColor: PropTypes.string,\n  bottomText: PropTypes.string,\n  bottomLinkText: PropTypes.string,\n  onSubmit: PropTypes.func,\n  buttonDisabled: PropTypes.bool,\n  error: PropTypes.object,\n  loading: PropTypes.string,\n  success: PropTypes.bool,\n};\n"]},"metadata":{},"sourceType":"module"}