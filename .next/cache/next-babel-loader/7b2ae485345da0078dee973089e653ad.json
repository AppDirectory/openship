{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport MktProduct from '../MarketplaceSearch/MktProduct';\n\nfunction ShopifySearch(_ref) {\n  var addZincItem = _ref.addZincItem,\n      atcDisabled = _ref.atcDisabled,\n      searchEntry = _ref.searchEntry,\n      token = _ref.token;\n\n  var _useState = useState([]),\n      results = _useState[0],\n      setResults = _useState[1];\n\n  var _useState2 = useState(''),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  useEffect(function () {\n    function findItems() {\n      var query, variables, items;\n      return _regeneratorRuntime.async(function findItems$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              query = \"\\n      query AllOrdersQuery($query: String)\\n      {\\n        products(query: $query first:5) \\n        {\\n          pageInfo {\\n            hasNextPage\\n            hasPreviousPage\\n          }\\n          edges {\\n            node {\\n              id\\n              title\\n              options {\\n                id\\n                name\\n                values\\n              }\\n              variants(first: 250) {\\n                pageInfo {\\n                  hasNextPage\\n                  hasPreviousPage\\n                }\\n                edges {\\n                  node {\\n                    id\\n                    title\\n                    selectedOptions {\\n                      name\\n                      value\\n                    }\\n                    image {\\n                      src\\n                    }\\n                    price\\n                  }\\n                }\\n              }\\n              images(first: 250) {\\n                pageInfo {\\n                  hasNextPage\\n                  hasPreviousPage\\n                }\\n                edges {\\n                  node {\\n                    src\\n                  }\\n                }\\n              }\\n            }\\n          }\\n          }\\n        }\\n      \";\n              variables = {\n                query: searchEntry\n              };\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch(\"https://\".concat(process.env.CUSTOM_SHOP_NAME, \".myshopify.com/api/graphql\"), {\n                method: 'POST',\n                body: JSON.stringify({\n                  query: query,\n                  variables: variables\n                }),\n                headers: {\n                  'Content-Type': 'application/json',\n                  'X-Shopify-Storefront-Access-Token': process.env.CUSTOM_SHOP_ACCESS\n                }\n              }).then(function (res) {\n                return res.json();\n              }).then(function (json) {\n                return setResults(json.data.products.edges);\n              }));\n\n            case 4:\n              items = _context.sent;\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    searchEntry && findItems();\n  }, [searchEntry]);\n  return results.map(function (product) {\n    return __jsx(MktProduct, {\n      addVariantToCart: function addVariantToCart(a, b) {\n        return addCustomItem(a, b);\n      },\n      checkout: function checkout() {\n        return toaster.success(\"checkout\");\n      },\n      key: product.node.id.toString(),\n      product: product.node,\n      client: \"Marketplace\",\n      atcDisabled: atcDisabled\n    });\n  });\n}\n\nexport default ShopifySearch;","map":null,"metadata":{},"sourceType":"module"}