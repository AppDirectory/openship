{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from 'react';\nimport { Pane, Heading, Text, Tablist, Paragraph, Icon, ListItem } from 'evergreen-ui';\nimport Button from '../common/Button';\nimport AddCard from './AddCard';\nvar sucessCard = {\n  paddingX: 10,\n  paddingY: 5,\n  background: '#F1FAF5',\n  display: 'flex',\n  alignItems: 'center'\n};\n\nvar buyerOnboarding = function buyerOnboarding(_ref) {\n  var buyerStep = _ref.buyerStep,\n      requested = _ref.requested,\n      shopName = _ref.shopName,\n      setShopName = _ref.setShopName,\n      reviews = _ref.reviews,\n      setReviews = _ref.setReviews,\n      threshold = _ref.threshold,\n      setThreshold = _ref.setThreshold,\n      error = _ref.error,\n      loading = _ref.loading,\n      createCustomer = _ref.createCustomer;\n  var tabs = ['Buyer Access', 'Payment Method', 'Ready to go'];\n\n  function onConfirm() {\n    return _onConfirm.apply(this, arguments);\n  }\n\n  function _onConfirm() {\n    _onConfirm = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return createCustomer({\n                variables: {\n                  userInput: {\n                    questions: [{\n                      request: true\n                    }]\n                  }\n                }\n              });\n\n            case 2:\n              res = _context.sent;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _onConfirm.apply(this, arguments);\n  }\n\n  return React.createElement(Pane, {\n    elevation: 1,\n    borderRadius: \"5px\"\n  }, React.createElement(Tablist, {\n    display: \"flex\",\n    justifyContent: \"center\" // background=\"#10384f\"\n    ,\n    borderTopRightRadius: \"5px\",\n    borderTopLeftRadius: \"5px\",\n    borderBottom: \"1px solid #E4E7EB\"\n  }, tabs.map(function (tab, index) {\n    return React.createElement(Pane, _extends({\n      flex: 1,\n      display: \"flex\" // flexDirection=\"column\"\n      ,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: 13,\n      flexWrap: \"wrap\" // {...index !== 0 && { borderLeft: '1px solid #DDEBF7' }}\n\n    }, index <= buyerStep && {\n      background: '#123950'\n    }, index === 0 && {\n      borderTopLeftRadius: '5px'\n    }, index === 1 && buyerStep === 0 && {\n      borderRight: '2px solid #f0f0f0'\n    }, index === 2 && {\n      borderTopRightRadius: '5px'\n    }), index <= buyerStep ? React.createElement(Icon, {\n      icon: \"tick\",\n      color: \"#fff\",\n      background: \"#46b880\",\n      borderRadius: \"999px\",\n      padding: 3,\n      size: 16\n    }) : React.createElement(Icon, {\n      icon: \"tick\",\n      color: \"#46b880\",\n      borderRadius: \"999px\",\n      boxShadow: \"0px 0px 0 1px #46b880\",\n      padding: 3,\n      size: 16\n    }), React.createElement(Text, _extends({\n      key: tab,\n      id: tab,\n      \"aria-controls\": \"panel-\".concat(tab),\n      textAlign: \"center\",\n      marginX: 8,\n      marginY: 4\n    }, index <= buyerStep && {\n      fontWeight: '600',\n      color: '#fff'\n    }), tab)) // <Pane\n    //   display=\"flex\"\n    //   justifyContent=\"center\"\n    //   alignItems=\"center\"\n    //   // {...index !== 0 && { paddingLeft: 40 }}\n    // >\n    //   {index !== 0 && (\n    //     <Pane\n    //       height={3}\n    //       width={40}\n    //       marginLeft={7.5}\n    //       backgroundColor={\n    //         index <= currentStep ? 'rgb(70, 184, 128)' : '#a5adba'\n    //       }\n    //     />\n    //   )}\n    //   <Pane\n    //     display=\"flex\"\n    //     justifyContent=\"center\"\n    //     alignItems=\"center\"\n    //     flexWrap=\"wrap\"\n    //   >\n    //     <Icon\n    //       icon=\"dot\"\n    //       size={22}\n    //       color={index <= currentStep ? '#22d78a' : '#a5adba'}\n    //     />\n    //     <Text\n    //       key={tab}\n    //       id={tab}\n    //       onClick={() => setCurrentStep(index)}\n    //       aria-controls={`panel-${tab}`}\n    //       color=\"#fff\"\n    //       {...index === currentStep && { fontWeight: '600' }}\n    //     >\n    //       {tab}\n    //     </Text>\n    //   </Pane>\n    // </Pane>\n    ;\n  })), React.createElement(Pane, {\n    background: \"white\",\n    flex: \"1\",\n    borderBottomLeftRadius: 5,\n    borderBottomRightRadius: 5\n  }, tabs.map(function (tab, index) {\n    return React.createElement(Pane, {\n      key: tab,\n      id: \"panel-\".concat(tab),\n      role: \"tabpanel\",\n      \"aria-labelledby\": tab,\n      \"aria-hidden\": index !== buyerStep,\n      display: index === buyerStep ? 'block' : 'none'\n    }, function () {\n      switch (index) {\n        case 0:\n          return React.createElement(React.Fragment, null, React.createElement(Pane, {\n            padding: 16\n          }, React.createElement(Pane, {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginBottom: 15\n          }, React.createElement(Heading, {\n            size: 500,\n            color: \"#425A70\"\n          }, \"Getting started as a marketplace buyer\")), React.createElement(Pane, {\n            flexShrink: 0,\n            height: 3,\n            backgroundColor: \"#E4E7EB\",\n            borderRadius: 1,\n            marginBottom: 15\n          }), React.createElement(Heading, {\n            size: 400,\n            marginBottom: 4,\n            color: \"#425A70\"\n          }, \"Requesting Buyer Access\"), React.createElement(Paragraph, {\n            marginBottom: 5\n          }, \"Since we are in Beta, we will be allowing users to use the marketplace in batches. Simply click the request access button and we'll notify you when access has been approved.\")), requested ? React.createElement(Pane, _extends({}, sucessCard, {\n            padding: 15,\n            borderTop: \"2px solid #f0f0f0\",\n            borderBottomLeftRadius: \"5\",\n            borderBottomRightRadius: \"5\",\n            borderTopLeftRadius: \"0\",\n            borderTopRightRadius: \"0\"\n          }), React.createElement(Icon, {\n            icon: \"endorsed\",\n            color: \"#47B881\",\n            marginRight: 10\n          }), React.createElement(Text, {\n            size: 500,\n            color: \"#47B881\",\n            fontWeight: 500,\n            fontSize: \"14px\"\n          }, \"Marketplace buyer access has been requested. We'll be in touch soon.\")) : React.createElement(Button, {\n            height: 35,\n            fontSize: 15,\n            width: \"100%\",\n            textColor: \"#fff\",\n            background: \"#14B5D0\",\n            borderBottomLeftRadius: \"5\",\n            borderBottomRightRadius: \"5\",\n            borderTopLeftRadius: \"0\",\n            borderTopRightRadius: \"0\",\n            onClick: onConfirm,\n            isLoading: loading\n          }, \"Request Access\"));\n\n        case 1:\n          return React.createElement(React.Fragment, null, React.createElement(Pane, {\n            padding: 16,\n            paddingBottom: 0\n          }, React.createElement(Pane, {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginBottom: 15\n          }, React.createElement(Heading, {\n            size: 500,\n            color: \"#425A70\"\n          }, \"Please add a payment method\")), React.createElement(Pane, {\n            flexShrink: 0,\n            height: 3,\n            backgroundColor: \"#E4E7EB\",\n            borderRadius: 1\n          })), React.createElement(AddCard, null));\n\n        case 2:\n          return React.createElement(Pane, {\n            padding: 16\n          }, React.createElement(Pane, {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginBottom: 15\n          }, React.createElement(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"confetti\"\n          }, \"\\uD83C\\uDF89\"), React.createElement(Heading, {\n            size: 500,\n            color: \"#425A70\"\n          }, \"You're all set!\")), React.createElement(Pane, {\n            flexShrink: 0,\n            height: 3,\n            backgroundColor: \"#E4E7EB\",\n            borderRadius: 1,\n            marginBottom: 15\n          }), React.createElement(Heading, {\n            size: 400,\n            marginBottom: 4,\n            color: \"#425A70\"\n          }, \"Using the Marketplace\"), React.createElement(Paragraph, {\n            marginBottom: 25\n          }, \"You can access the marketplace under the pending tab. When you fulfill your shop order using the marketplace, it will be placed under the processed tab. Once the marketplace seller ships the item, we will fulfill the order on your shop.\"), React.createElement(Heading, {\n            size: 400,\n            marginBottom: 4,\n            color: \"#425A70\"\n          }, \"We're still in Beta!\"), React.createElement(Paragraph, {\n            marginBottom: 25\n          }, \"Please note we are still squashing bugs and making improvements. If you have any issues, please open a ticket here or an issue on Github.\"), React.createElement(Heading, {\n            size: 400,\n            marginBottom: 4,\n            color: \"#425A70\"\n          }, \"Upcoming Features\"), React.createElement(Paragraph, null, \"We are working on new features and as a beta tester, you will get first access when these are ready.\"), React.createElement(ListItem, null, \"Automatic returns for marketplace orders\"), React.createElement(ListItem, null, \"3rd party returns integration (Returnly, Return Magic, etc.)\"), React.createElement(ListItem, null, \"Bulk buying from marketplace sellers\"), React.createElement(ListItem, null, \"Fulfillment center integration (ShipBob, ShipMonk, Rakuten 3PL, etc.)\"));\n\n        default:\n          return React.createElement(\"div\", null, \"hi\");\n      }\n    }());\n  })));\n};\n\nexport default buyerOnboarding;","map":null,"metadata":{},"sourceType":"module"}