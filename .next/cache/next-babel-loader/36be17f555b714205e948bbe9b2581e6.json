{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { IconButton, Pane, Heading, Paragraph, Text, Avatar } from 'evergreen-ui';\nimport MPCart from '../../pending/Cart/MPCart';\nimport ZincCart from '../../pending/Cart/ZincCart';\nimport OrderLine from './OrderLine';\n\nconst priceString = (price, quantity) => {\n  const total = Math.round(price * quantity * 100).toString();\n  return `${total.substring(0, total.length - 2)}.${total.substring(total.length - 2)}`;\n};\n\nexport default function OrderListItem(props) {\n  const {\n    0: open,\n    1: setOpen\n  } = useState(props.open);\n  useEffect(() => {\n    setOpen(props.open);\n  }, [props.open]);\n\n  async function onCheckAllChange(e, updateIndexFunc, createCheckoutFunc, errorTextObj) {\n    updateIndexFunc(e ? props.index : null);\n\n    if (e && errorTextObj === '{}') {\n      await createCheckoutFunc({\n        shippingAddress: {\n          address1: props.streetAddress1,\n          address2: props.streetAddress2 && props.streetAddress2,\n          city: props.city,\n          province: props.state,\n          country: 'US',\n          zip: props.zip,\n          firstName: props.first_name,\n          lastName: props.last_name\n        }\n      });\n    }\n  }\n\n  function handleToggleClick(e) {\n    e.stopPropagation();\n    setOpen(prevOpen => !prevOpen);\n  }\n\n  function parseMP(string, checkout) {\n    const parse = JSON.parse(string);\n    return parse.lineItems && __jsx(MPCart, {\n      cart: parse,\n      checkout: checkout\n    });\n  }\n\n  function parseZinc(string, checkout) {\n    const parse = JSON.parse(string);\n    return parse.products && __jsx(ZincCart, {\n      cart: parse,\n      checkout: checkout\n    });\n  }\n\n  const {\n    id,\n    orderId,\n    orderName,\n    email,\n    first_name,\n    last_name,\n    streetAddress1,\n    streetAddress2,\n    city,\n    state,\n    zip,\n    shopName,\n    phone,\n    lineItems,\n    currency,\n    totalPrice,\n    subTotalPrice,\n    totalDiscount,\n    totalTax,\n    createAt,\n    mpCheckout,\n    mpCart,\n    zincCheckout,\n    zincCart,\n    note,\n    disabled,\n    buttons,\n    selectedOrderIndex,\n    updateIndex,\n    createCheckout\n  } = props;\n  return __jsx(Pane, null, __jsx(Pane, {\n    display: \"flex\",\n    paddingX: \"1em\",\n    paddingY: \".7em\",\n    onClick: !disabled ? () => onCheckAllChange(!selectedOrderIndex, updateIndex, createCheckout, mpCart) : undefined,\n    pointerEvents: !selectedOrderIndex || selectedOrderIndex === id ? null : 'none',\n    className: !selectedOrderIndex || selectedOrderIndex === id ? 'hover' : null,\n    cursor: !selectedOrderIndex || selectedOrderIndex === id ? 'pointer' : null\n  }, __jsx(Pane, null, __jsx(Pane, {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\"\n  }, __jsx(Heading, {\n    size: 400,\n    marginRight: 12\n  }, __jsx(\"a\", {\n    href: `https://${shopName.split('.')[0]}.myshopify.com/admin/orders/${orderId}`,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, orderName)), __jsx(Heading, {\n    size: 100,\n    lineHeight: \"20px\",\n    fontWeight: 500,\n    marginRight: 12\n  }, shopName.split('.')[0]), __jsx(Heading, {\n    size: 200\n  }, Intl.DateTimeFormat('en-US').format(Date.parse(createAt)))), __jsx(Paragraph, {\n    size: 300,\n    fontSize: 13,\n    color: \"#425A70\"\n  }, first_name, \" \", last_name, __jsx(\"br\", null), streetAddress1, \" \", streetAddress2, __jsx(\"br\", null), city, ', ', state, \" \", zip)), __jsx(Pane, {\n    display: \"flex\",\n    marginLeft: \"auto\",\n    justifyContent: \"center\" // alignItems=\"center\"\n\n  }, buttons, __jsx(IconButton, {\n    marginLeft: 3,\n    height: 20,\n    \"aria-expanded\": open,\n    onClick: handleToggleClick,\n    appearance: \"minimal\",\n    icon: \"chevron-down\",\n    iconSize: 18,\n    pointerEvents: \"visible\"\n  }))), open && __jsx(React.Fragment, null, __jsx(Pane, {\n    marginLeft: \"-3px\",\n    background: \"#F7F9FD\",\n    border: \"muted\",\n    paddingY: \".7em\",\n    paddingX: \"1em\"\n  }, __jsx(Pane, {\n    marginBottom: 10\n  }, __jsx(Text, {\n    size: 400,\n    fontWeight: 500,\n    color: \"#084B8A\"\n  }, \"Line Items\")), lineItems.map(a => __jsx(OrderLine, {\n    key: a.id,\n    item: a.node ? a.node : a\n  }))), mpCart && parseMP(mpCart), zincCart && parseZinc(zincCart, zincCheckout), mpCheckout && __jsx(Pane, {\n    marginLeft: \"-3px\",\n    background: \"#F1FAF5\",\n    border: \"muted\",\n    paddingY: \".7em\",\n    paddingX: \"1em\"\n  }, __jsx(Pane, {\n    marginBottom: 10\n  }, __jsx(Text, {\n    size: 400,\n    fontWeight: 500,\n    color: \"#00783E\"\n  }, \"Marketplace Order\")), mpCheckout[0].marketLineItems.map(a => __jsx(Pane, {\n    background: \"#fff\",\n    border: \"muted\",\n    marginBottom: 5\n  }, __jsx(Pane, {\n    display: \"flex\",\n    alignItems: \"center\"\n  }, __jsx(Pane, {\n    height: \"100%\",\n    background: \"white\",\n    borderRight: \"1px solid #EDF0F2\"\n  }, __jsx(Avatar, {\n    src: a.variantImg,\n    borderRadius: 0,\n    size: 70,\n    backgroundColor: \"white\",\n    border: \"muted\"\n  })), __jsx(Pane, {\n    padding: 5,\n    paddingLeft: 10\n  }, __jsx(Heading, {\n    size: 300\n  }, a.title), __jsx(Pane, {\n    display: \"flex\"\n  }, a.quantity > 1 && __jsx(Pane, null, __jsx(Text, {\n    size: 300,\n    color: \"muted\"\n  }, \"$\", a.variantPrice, \" x \", a.quantity)), __jsx(Heading, {\n    size: 300,\n    marginRight: 10,\n    color: \"green\"\n  }, \"$\", a.variantPrice && priceString(a.variantPrice, a.quantity))))))))));\n}","map":null,"metadata":{},"sourceType":"module"}